{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/ColorDash/ColorDash.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\nconst GAME_COLORS = [{\n  name: 'Kırmızı',\n  code: '#e74c3c'\n}, {\n  name: 'Mavi',\n  code: '#3498db'\n}, {\n  name: 'Yeşil',\n  code: '#2ecc71'\n}, {\n  name: 'Sarı',\n  code: '#f1c40f'\n}, {\n  name: 'Mor',\n  code: '#9b59b6'\n}, {\n  name: 'Turuncu',\n  code: '#e67e22'\n}];\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n_c2 = Header;\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0 2rem;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n_c3 = ScoreBoard;\nconst PlayerScore = styled.div`\n  color: ${props => props.color};\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n_c4 = PlayerScore;\nconst ColorTarget = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  margin: 2rem auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  font-weight: bold;\n  color: white;\n  text-shadow: 0 0 10px rgba(0,0,0,0.5);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\n  animation: ${pulse} 2s infinite;\n`;\n_c5 = ColorTarget;\nconst ColorGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n  margin: 2rem auto;\n`;\n_c6 = ColorGrid;\nconst ColorButton = styled.button`\n  width: 120px;\n  height: 120px;\n  border-radius: 12px;\n  background: ${props => props.color};\n  border: none;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n  }\n`;\n_c7 = ColorButton;\nconst InfoText = styled.div`\n  font-size: 1.8rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1.5rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 15px 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n_c8 = InfoText;\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 2rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n_c9 = NextButton;\nconst ColorDash = ({\n  playerCount\n}) => {\n  _s();\n  const [players, setPlayers] = useState(Array.from({\n    length: playerCount\n  }, (_, i) => ({\n    id: i,\n    score: 0\n  })));\n  const [activePlayer, setActivePlayer] = useState(0);\n  const [phase, setPhase] = useState('ready');\n  const [targetColor, setTargetColor] = useState(null);\n  const [colorOptions, setColorOptions] = useState([]);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [rounds, setRounds] = useState(0);\n  const maxRounds = playerCount * 3; // Her oyuncu 3 tur oynasın\n\n  // Yeni tur başlat\n  const startNewRound = () => {\n    // Rastgele bir hedef renk seç\n    const target = GAME_COLORS[Math.floor(Math.random() * GAME_COLORS.length)];\n    setTargetColor(target);\n\n    // Renk seçeneklerini karıştır (hedef renk dahil)\n    let options = [...GAME_COLORS].sort(() => Math.random() - 0.5).slice(0, 6); // 6 renk seçeneği göster\n\n    // Hedef renk seçeneklerde yoksa, ekle\n    if (!options.includes(target)) {\n      options.pop(); // Son rengi çıkar\n      options.push(target); // Hedef rengi ekle\n    }\n\n    // Seçenekleri karıştır\n    options = options.sort(() => Math.random() - 0.5);\n    setColorOptions(options);\n    setSelectedColor(null);\n    setPhase('selection');\n  };\n\n  // Renk seçme\n  const handleColorSelect = color => {\n    if (phase !== 'selection') return;\n    setSelectedColor(color);\n\n    // Doğru renk mi kontrol et\n    const isCorrect = color === (targetColor === null || targetColor === void 0 ? void 0 : targetColor.code);\n\n    // Puanı güncelle\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        return {\n          ...p,\n          score: p.score + (isCorrect ? 10 : -5)\n        };\n      }\n      return p;\n    }));\n    setPhase('result');\n\n    // 2 saniye sonra sonuç göster\n    setTimeout(() => {\n      setRounds(r => r + 1);\n\n      // Oyun bitti mi kontrol et\n      if (rounds + 1 >= maxRounds) {\n        setPhase('end');\n      } else {\n        // Sıradaki oyuncuya geç\n        setActivePlayer((activePlayer + 1) % playerCount);\n        setPhase('ready');\n      }\n    }, 2000);\n  };\n\n  // Kazananı bul\n  const winner = players.reduce((max, p) => p.score > max.score ? p : max, players[0]);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Renk Ko\\u015Fusu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n        color: PLAYER_COLORS[index],\n        active: activePlayer === index && phase !== 'end',\n        children: [\"Oyuncu \", index + 1, \": \", player.score]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), phase === 'ready' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"S\\u0131ra: Oyuncu \", activePlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: startNewRound,\n        children: \"Ba\\u015Fla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), phase === 'selection' && targetColor && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: \"Rengi Bul!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ColorTarget, {\n        style: {\n          background: targetColor.code\n        },\n        children: targetColor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ColorGrid, {\n        children: colorOptions.map((color, index) => /*#__PURE__*/_jsxDEV(ColorButton, {\n          color: color.code,\n          onClick: () => handleColorSelect(color.code)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), phase === 'result' && /*#__PURE__*/_jsxDEV(InfoText, {\n      children: selectedColor === (targetColor === null || targetColor === void 0 ? void 0 : targetColor.code) ? '✅ Doğru!' : '❌ Yanlış!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), phase === 'end' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"Oyun Bitti! Kazanan: Oyuncu \", winner.id + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n          color: PLAYER_COLORS[index],\n          active: player.id === winner.id,\n          children: [\"Oyuncu \", index + 1, \": \", player.score]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: () => window.location.reload(),\n        children: \"Tekrar Oyna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorDash, \"c3W2dfNupMCF1PYv4zJfEA5O7YI=\");\n_c0 = ColorDash;\nexport default ColorDash;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ScoreBoard\");\n$RefreshReg$(_c4, \"PlayerScore\");\n$RefreshReg$(_c5, \"ColorTarget\");\n$RefreshReg$(_c6, \"ColorGrid\");\n$RefreshReg$(_c7, \"ColorButton\");\n$RefreshReg$(_c8, \"InfoText\");\n$RefreshReg$(_c9, \"NextButton\");\n$RefreshReg$(_c0, \"ColorDash\");","map":{"version":3,"names":["React","useState","styled","keyframes","jsxDEV","_jsxDEV","Fragment","_Fragment","PLAYER_COLORS","GAME_COLORS","name","code","fadeIn","pulse","GameContainer","div","_c","Header","h2","_c2","ScoreBoard","_c3","PlayerScore","props","color","active","_c4","ColorTarget","_c5","ColorGrid","_c6","ColorButton","button","_c7","InfoText","_c8","NextButton","_c9","ColorDash","playerCount","_s","players","setPlayers","Array","from","length","_","i","id","score","activePlayer","setActivePlayer","phase","setPhase","targetColor","setTargetColor","colorOptions","setColorOptions","selectedColor","setSelectedColor","rounds","setRounds","maxRounds","startNewRound","target","Math","floor","random","options","sort","slice","includes","pop","push","handleColorSelect","isCorrect","prev","map","p","setTimeout","r","winner","reduce","max","children","fileName","_jsxFileName","lineNumber","columnNumber","player","index","onClick","style","background","window","location","reload","_c0","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/ColorDash/ColorDash.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\nconst GAME_COLORS = [\n  { name: 'Kırmızı', code: '#e74c3c' },\n  { name: 'Mavi', code: '#3498db' },\n  { name: 'Yeşil', code: '#2ecc71' },\n  { name: 'Sarı', code: '#f1c40f' },\n  { name: 'Mor', code: '#9b59b6' },\n  { name: 'Turuncu', code: '#e67e22' }\n];\n\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0 2rem;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n\nconst PlayerScore = styled.div<{ color: string, active: boolean }>`\n  color: ${props => props.color};\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n\nconst ColorTarget = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  margin: 2rem auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  font-weight: bold;\n  color: white;\n  text-shadow: 0 0 10px rgba(0,0,0,0.5);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\n  animation: ${pulse} 2s infinite;\n`;\n\nconst ColorGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n  margin: 2rem auto;\n`;\n\nconst ColorButton = styled.button<{ color: string }>`\n  width: 120px;\n  height: 120px;\n  border-radius: 12px;\n  background: ${props => props.color};\n  border: none;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n  }\n`;\n\nconst InfoText = styled.div`\n  font-size: 1.8rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1.5rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 15px 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 2rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n\ninterface Player {\n  id: number;\n  score: number;\n}\n\nconst ColorDash: React.FC<{ playerCount: number }> = ({ playerCount }) => {\n  const [players, setPlayers] = useState<Player[]>(\n    Array.from({ length: playerCount }, (_, i) => ({ id: i, score: 0 }))\n  );\n  const [activePlayer, setActivePlayer] = useState(0);\n  const [phase, setPhase] = useState<'ready' | 'selection' | 'result' | 'end'>('ready');\n  const [targetColor, setTargetColor] = useState<typeof GAME_COLORS[0] | null>(null);\n  const [colorOptions, setColorOptions] = useState<typeof GAME_COLORS>([]);\n  const [selectedColor, setSelectedColor] = useState<string | null>(null);\n  const [rounds, setRounds] = useState(0);\n  const maxRounds = playerCount * 3; // Her oyuncu 3 tur oynasın\n  \n  // Yeni tur başlat\n  const startNewRound = () => {\n    // Rastgele bir hedef renk seç\n    const target = GAME_COLORS[Math.floor(Math.random() * GAME_COLORS.length)];\n    setTargetColor(target);\n    \n    // Renk seçeneklerini karıştır (hedef renk dahil)\n    let options = [...GAME_COLORS]\n      .sort(() => Math.random() - 0.5)\n      .slice(0, 6); // 6 renk seçeneği göster\n    \n    // Hedef renk seçeneklerde yoksa, ekle\n    if (!options.includes(target)) {\n      options.pop(); // Son rengi çıkar\n      options.push(target); // Hedef rengi ekle\n    }\n    \n    // Seçenekleri karıştır\n    options = options.sort(() => Math.random() - 0.5);\n    setColorOptions(options);\n    setSelectedColor(null);\n    setPhase('selection');\n  };\n  \n  // Renk seçme\n  const handleColorSelect = (color: string) => {\n    if (phase !== 'selection') return;\n    \n    setSelectedColor(color);\n    \n    // Doğru renk mi kontrol et\n    const isCorrect = color === targetColor?.code;\n    \n    // Puanı güncelle\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        return { ...p, score: p.score + (isCorrect ? 10 : -5) };\n      }\n      return p;\n    }));\n    \n    setPhase('result');\n    \n    // 2 saniye sonra sonuç göster\n    setTimeout(() => {\n      setRounds(r => r + 1);\n      \n      // Oyun bitti mi kontrol et\n      if (rounds + 1 >= maxRounds) {\n        setPhase('end');\n      } else {\n        // Sıradaki oyuncuya geç\n        setActivePlayer((activePlayer + 1) % playerCount);\n        setPhase('ready');\n      }\n    }, 2000);\n  };\n  \n  // Kazananı bul\n  const winner = players.reduce((max, p) => p.score > max.score ? p : max, players[0]);\n  \n  return (\n    <GameContainer>\n      <Header>Renk Koşusu</Header>\n      \n      <ScoreBoard>\n        {players.map((player, index) => (\n          <PlayerScore \n            key={player.id} \n            color={PLAYER_COLORS[index]} \n            active={activePlayer === index && phase !== 'end'}\n          >\n            Oyuncu {index + 1}: {player.score}\n          </PlayerScore>\n        ))}\n      </ScoreBoard>\n      \n      {phase === 'ready' && (\n        <>\n          <InfoText>Sıra: Oyuncu {activePlayer + 1}</InfoText>\n          <NextButton onClick={startNewRound}>Başla</NextButton>\n        </>\n      )}\n      \n      {phase === 'selection' && targetColor && (\n        <>\n          <InfoText>Rengi Bul!</InfoText>\n          <ColorTarget style={{ background: targetColor.code }}>\n            {targetColor.name}\n          </ColorTarget>\n          \n          <ColorGrid>\n            {colorOptions.map((color, index) => (\n              <ColorButton \n                key={index} \n                color={color.code}\n                onClick={() => handleColorSelect(color.code)}\n              />\n            ))}\n          </ColorGrid>\n        </>\n      )}\n      \n      {phase === 'result' && (\n        <InfoText>\n          {selectedColor === targetColor?.code ? '✅ Doğru!' : '❌ Yanlış!'}\n        </InfoText>\n      )}\n      \n      {phase === 'end' && (\n        <>\n          <InfoText>\n            Oyun Bitti! Kazanan: Oyuncu {winner.id + 1}\n          </InfoText>\n          <ScoreBoard>\n            {players.map((player, index) => (\n              <PlayerScore \n                key={player.id} \n                color={PLAYER_COLORS[index]}\n                active={player.id === winner.id}\n              >\n                Oyuncu {index + 1}: {player.score}\n              </PlayerScore>\n            ))}\n          </ScoreBoard>\n          <NextButton onClick={() => window.location.reload()}>\n            Tekrar Oyna\n          </NextButton>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default ColorDash; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}