{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/MazeRunner/MazeRunner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Animasyonlar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst celebrationAnim = keyframes`\n  0% { transform: scale(1); filter: hue-rotate(0deg); }\n  50% { transform: scale(1.3); filter: hue-rotate(180deg); }\n  100% { transform: scale(1); filter: hue-rotate(360deg); }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n_c2 = Header;\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n_c3 = ScoreBoard;\nconst PlayerScore = styled.div`\n  color: ${props => props.color};\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n_c4 = PlayerScore;\nconst MazeContainer = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  aspect-ratio: 1;\n  margin: 1rem 0;\n  border: 2px solid rgba(255,255,255,0.2);\n  border-radius: 8px;\n  background: rgba(0,0,0,0.2);\n  overflow: hidden;\n  user-select: none;\n`;\n_c5 = MazeContainer;\nconst MazeCell = styled.div`\n  position: absolute;\n  box-sizing: border-box;\n  \n  ${({\n  isWall,\n  isStart,\n  isFinish,\n  isPath,\n  isPlayer,\n  color\n}) => {\n  if (isPlayer) {\n    return css`\n        background-color: ${color};\n        border-radius: 50%;\n        z-index: 10;\n        box-shadow: 0 0 10px ${color};\n      `;\n  }\n  if (isWall) {\n    return css`\n        background-color: rgba(30, 30, 30, 0.8);\n        border: 1px solid rgba(60, 60, 60, 0.8);\n      `;\n  }\n  if (isStart) {\n    return css`\n        background-color: rgba(46, 204, 113, 0.3);\n        border: 1px solid rgba(46, 204, 113, 0.5);\n      `;\n  }\n  if (isFinish) {\n    return css`\n        background-color: rgba(231, 76, 60, 0.3);\n        border: 1px solid rgba(231, 76, 60, 0.5);\n      `;\n  }\n  if (isPath) {\n    return css`\n        background-color: rgba(52, 152, 219, 0.1);\n        border: 1px solid rgba(52, 152, 219, 0.2);\n      `;\n  }\n  return css`\n      background-color: transparent;\n      border: 1px solid rgba(255, 255, 255, 0.05);\n    `;\n}}\n`;\n_c6 = MazeCell;\nconst FinishFlag = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  z-index: 5;\n  \n  ${props => props.celebrating && css`\n    animation: ${celebrationAnim} 1s ease-in-out infinite;\n  `}\n`;\n_c7 = FinishFlag;\nconst InfoText = styled.div`\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 10px 25px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n_c8 = InfoText;\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n_c9 = NextButton;\nconst ControlsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 8px;\n  width: 200px;\n  margin-top: 1rem;\n`;\n_c0 = ControlsContainer;\nconst ControlButton = styled.button`\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  color: white;\n  font-size: 1.5rem;\n  padding: 10px;\n  cursor: pointer;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  &:nth-child(2), &:nth-child(8) {\n    grid-column: 2;\n  }\n  \n  &:nth-child(4), &:nth-child(6) {\n    grid-row: 2;\n  }\n  \n  &:nth-child(5) {\n    visibility: hidden;\n  }\n`;\n_c1 = ControlButton;\nconst TimerDisplay = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: white;\n  margin-top: 1rem;\n  text-shadow: 0 0 10px rgba(0,0,0,0.3);\n`;\n_c10 = TimerDisplay;\nconst ResultsTable = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 1rem;\n  margin-top: 1rem;\n  width: 100%;\n  max-width: 400px;\n`;\n_c11 = ResultsTable;\nconst ResultRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  \n  ${props => props.highlight && css`\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    padding: 8px;\n  `}\n`;\n_c12 = ResultRow;\nconst StatsContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  margin: 1rem 0;\n  width: 100%;\n  justify-content: center;\n`;\n_c13 = StatsContainer;\nconst StatBox = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  padding: 10px;\n  border-radius: 8px;\n  flex: 1;\n  max-width: 150px;\n  text-align: center;\n`;\n_c14 = StatBox;\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 5px;\n`;\n_c15 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: rgba(255, 255, 255, 0.7);\n`;\n\n// Oyuncu renkleri\n_c16 = StatLabel;\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\n\n// Labirent ölçüleri\nconst MAZE_SIZE = 15; // 15x15 labirent\nconst DIRECTIONS = [{\n  dx: 0,\n  dy: -1\n},\n// Yukarı\n{\n  dx: 1,\n  dy: 0\n},\n// Sağ\n{\n  dx: 0,\n  dy: 1\n},\n// Aşağı\n{\n  dx: -1,\n  dy: 0\n} // Sol\n];\nconst MazeRunner = ({\n  playerCount\n}) => {\n  _s();\n  // Oyuncu durumları\n  const [players, setPlayers] = useState(Array.from({\n    length: playerCount\n  }, (_, i) => ({\n    id: i,\n    score: 0,\n    completionTime: null,\n    stepsTaken: 0\n  })));\n  const [activePlayer, setActivePlayer] = useState(0);\n\n  // Labirent durumları\n  const [maze, setMaze] = useState([]);\n  const [playerPosition, setPlayerPosition] = useState({\n    x: 1,\n    y: 1\n  });\n  const [startPosition, setStartPosition] = useState({\n    x: 1,\n    y: 1\n  });\n  const [finishPosition, setFinishPosition] = useState({\n    x: MAZE_SIZE - 2,\n    y: MAZE_SIZE - 2\n  });\n  const [visitedCells, setVisitedCells] = useState([]);\n\n  // Oyun durumları\n  const [phase, setPhase] = useState('ready');\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(0);\n  const [celebrating, setCelebrating] = useState(false);\n  const timerRef = useRef(null);\n  const mazeContainerRef = useRef(null);\n  const cellSize = useRef(20); // Default cell size\n  const totalRounds = playerCount; // Her oyuncu 1 tur oynasın\n\n  // Labirent oluşturma fonksiyonu\n  const generateMaze = useCallback(() => {\n    // Başlangıçta tüm hücreler duvar\n    const newMaze = Array(MAZE_SIZE).fill(0).map(() => Array(MAZE_SIZE).fill(true));\n\n    // Recursive Backtracking algoritması ile labirent oluştur\n    const stack = [];\n    const start = {\n      x: 1,\n      y: 1\n    };\n    newMaze[start.y][start.x] = false; // Başlangıç yolu aç\n    stack.push(start);\n    const isValid = (x, y) => x > 0 && x < MAZE_SIZE - 1 && y > 0 && y < MAZE_SIZE - 1;\n    const getUnvisitedNeighbors = (x, y) => {\n      const neighbors = [];\n\n      // 2 adım öteyi kontrol et (duvar + hücre)\n      DIRECTIONS.forEach(({\n        dx,\n        dy\n      }) => {\n        const nx = x + dx * 2;\n        const ny = y + dy * 2;\n        if (isValid(nx, ny) && newMaze[ny][nx]) {\n          neighbors.push({\n            x: nx,\n            y: ny\n          });\n        }\n      });\n      return neighbors;\n    };\n    while (stack.length > 0) {\n      const current = stack[stack.length - 1];\n      const neighbors = getUnvisitedNeighbors(current.x, current.y);\n      if (neighbors.length === 0) {\n        stack.pop();\n        continue;\n      }\n\n      // Rastgele komşu seç\n      const next = neighbors[Math.floor(Math.random() * neighbors.length)];\n\n      // Aradaki duvarı yık\n      newMaze[current.y + (next.y - current.y) / 2][current.x + (next.x - current.x) / 2] = false;\n\n      // Komşu hücreyi yol olarak işaretle\n      newMaze[next.y][next.x] = false;\n      stack.push(next);\n    }\n\n    // Bitiş noktasını ayarla (labirentin uzak köşesi)\n    const finish = {\n      x: MAZE_SIZE - 2,\n      y: MAZE_SIZE - 2\n    };\n    newMaze[finish.y][finish.x] = false;\n\n    // Bitiş noktasına giden yolu garantile\n    let current = finish;\n    while (current.x !== start.x || current.y !== start.y) {\n      const direction = DIRECTIONS[Math.floor(Math.random() * DIRECTIONS.length)];\n      const nx = current.x + direction.dx;\n      const ny = current.y + direction.dy;\n      if (isValid(nx, ny)) {\n        newMaze[ny][nx] = false;\n        current = {\n          x: nx,\n          y: ny\n        };\n      }\n    }\n    setMaze(newMaze);\n    setStartPosition(start);\n    setFinishPosition(finish);\n    setPlayerPosition(start);\n\n    // Ziyaret edilen hücreleri sıfırla\n    setVisitedCells(Array(MAZE_SIZE).fill(0).map(() => Array(MAZE_SIZE).fill(false)));\n    return newMaze;\n  }, []);\n\n  // Oyunu başlat\n  const startGame = () => {\n    generateMaze();\n    setTimer(0);\n    setPhase('playing');\n\n    // Zamanlayıcıyı başlat\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    timerRef.current = setInterval(() => {\n      setTimer(prev => prev + 0.1);\n    }, 100);\n\n    // Mevcut oyuncunun adım sayısını sıfırla\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        return {\n          ...p,\n          stepsTaken: 0\n        };\n      }\n      return p;\n    }));\n  };\n\n  // Hücre boyutunu hesapla\n  useEffect(() => {\n    const updateCellSize = () => {\n      if (mazeContainerRef.current) {\n        const containerSize = Math.min(mazeContainerRef.current.clientWidth, mazeContainerRef.current.clientHeight);\n        cellSize.current = Math.floor(containerSize / MAZE_SIZE);\n      }\n    };\n    updateCellSize();\n    window.addEventListener('resize', updateCellSize);\n    return () => {\n      window.removeEventListener('resize', updateCellSize);\n    };\n  }, []);\n\n  // Temizlik işlemleri\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // Oyuncu hareketi\n  const movePlayer = (dx, dy) => {\n    if (phase !== 'playing') return;\n    const newX = playerPosition.x + dx;\n    const newY = playerPosition.y + dy;\n\n    // Hareket geçerli mi kontrol et\n    if (newX >= 0 && newX < MAZE_SIZE && newY >= 0 && newY < MAZE_SIZE && !maze[newY][newX] // Duvar değilse\n    ) {\n      setPlayerPosition({\n        x: newX,\n        y: newY\n      });\n\n      // Ziyaret edilen hücreyi işaretle\n      setVisitedCells(prev => {\n        const newVisited = [...prev];\n        newVisited[newY][newX] = true;\n        return newVisited;\n      });\n\n      // Adım sayısını artır\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return {\n            ...p,\n            stepsTaken: p.stepsTaken + 1\n          };\n        }\n        return p;\n      }));\n\n      // Bitiş noktasına ulaşıldı mı kontrol et\n      if (newX === finishPosition.x && newY === finishPosition.y) {\n        finishLevel();\n      }\n    }\n  };\n\n  // Labirent tamamlandı\n  const finishLevel = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    // Kutlama animasyonu\n    setCelebrating(true);\n\n    // Oyuncunun tamamlama zamanını ve puanını kaydet\n    const completionTime = parseFloat(timer.toFixed(1));\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        // Tamamlama süresi ne kadar kısaysa o kadar çok puan\n        const baseScore = 100;\n        const timeBonus = Math.max(0, Math.floor(30 - completionTime) * 2);\n        const stepPenalty = Math.floor(p.stepsTaken / 10);\n        const score = baseScore + timeBonus - stepPenalty;\n        return {\n          ...p,\n          completionTime,\n          score: p.score + score\n        };\n      }\n      return p;\n    }));\n\n    // Aşama değiştir\n    setPhase('finished');\n\n    // 2 saniye sonra kutlamayı durdur\n    setTimeout(() => {\n      setCelebrating(false);\n    }, 2000);\n  };\n\n  // Klavye kontrolleri\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (phase !== 'playing') return;\n      switch (e.key) {\n        case 'ArrowUp':\n          movePlayer(0, -1);\n          break;\n        case 'ArrowRight':\n          movePlayer(1, 0);\n          break;\n        case 'ArrowDown':\n          movePlayer(0, 1);\n          break;\n        case 'ArrowLeft':\n          movePlayer(-1, 0);\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [phase, playerPosition, maze]);\n\n  // Sonraki tura geç\n  const nextRound = () => {\n    const newRound = round + 1;\n    setRound(newRound);\n    if (newRound > totalRounds) {\n      // Oyun bitti\n      setPhase('end');\n    } else {\n      // Sıradaki oyuncuya geç\n      setActivePlayer((activePlayer + 1) % playerCount);\n      setPhase('ready');\n    }\n  };\n\n  // Formatlanmış süre\n  const formatTime = time => {\n    return time.toFixed(1);\n  };\n\n  // Kazananı bul\n  const getWinner = () => {\n    return players.reduce((highest, player) => player.score > highest.score ? player : highest, players[0]);\n  };\n\n  // Beraberlik kontrolü\n  const isTie = () => {\n    const winner = getWinner();\n    return players.filter(p => p.score === winner.score).length > 1;\n  };\n\n  // Sıralı oyuncular\n  const getRankedPlayers = () => {\n    return [...players].sort((a, b) => b.score - a.score);\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Labirent Ko\\u015Fusu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n        color: PLAYER_COLORS[index],\n        active: activePlayer === index && phase !== 'end',\n        children: [\"Oyuncu \", index + 1, \": \", player.score]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this), phase === 'ready' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"S\\u0131ra: Oyuncu \", activePlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          textAlign: 'center'\n        },\n        children: \"Labirentte ba\\u015Flang\\u0131\\xE7 noktas\\u0131ndan (ye\\u015Fil) biti\\u015F noktas\\u0131na (k\\u0131rm\\u0131z\\u0131) ula\\u015Fmaya \\xE7al\\u0131\\u015F. H\\u0131zl\\u0131 olursan daha \\xE7ok puan kazan\\u0131rs\\u0131n!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: startGame,\n        children: \"Ba\\u015Fla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), (phase === 'playing' || phase === 'finished') && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [phase === 'playing' && /*#__PURE__*/_jsxDEV(TimerDisplay, {\n        children: [formatTime(timer), \" sn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MazeContainer, {\n        ref: mazeContainerRef,\n        children: [maze.map((row, y) => row.map((isWall, x) => {\n          var _visitedCells$y;\n          return /*#__PURE__*/_jsxDEV(MazeCell, {\n            isWall: isWall,\n            isStart: x === startPosition.x && y === startPosition.y,\n            isFinish: x === finishPosition.x && y === finishPosition.y,\n            isPath: ((_visitedCells$y = visitedCells[y]) === null || _visitedCells$y === void 0 ? void 0 : _visitedCells$y[x]) || false,\n            isPlayer: false,\n            color: \"transparent\",\n            style: {\n              width: `${cellSize.current}px`,\n              height: `${cellSize.current}px`,\n              left: `${x * cellSize.current}px`,\n              top: `${y * cellSize.current}px`\n            }\n          }, `${x}-${y}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this);\n        })), /*#__PURE__*/_jsxDEV(MazeCell, {\n          isWall: false,\n          isStart: false,\n          isFinish: false,\n          isPath: false,\n          isPlayer: true,\n          color: PLAYER_COLORS[activePlayer],\n          style: {\n            width: `${cellSize.current * 0.8}px`,\n            height: `${cellSize.current * 0.8}px`,\n            left: `${playerPosition.x * cellSize.current + cellSize.current * 0.1}px`,\n            top: `${playerPosition.y * cellSize.current + cellSize.current * 0.1}px`,\n            transition: 'left 0.2s, top 0.2s'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MazeCell, {\n          isWall: false,\n          isStart: false,\n          isFinish: true,\n          isPath: false,\n          isPlayer: false,\n          color: \"transparent\",\n          style: {\n            width: `${cellSize.current}px`,\n            height: `${cellSize.current}px`,\n            left: `${finishPosition.x * cellSize.current}px`,\n            top: `${finishPosition.y * cellSize.current}px`\n          },\n          children: /*#__PURE__*/_jsxDEV(FinishFlag, {\n            celebrating: celebrating,\n            children: \"\\uD83D\\uDEA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), phase === 'playing' && /*#__PURE__*/_jsxDEV(ControlsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n          onClick: () => movePlayer(0, -1),\n          children: \"\\u2B06\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n          onClick: () => movePlayer(-1, 0),\n          children: \"\\u2B05\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n          onClick: () => movePlayer(1, 0),\n          children: \"\\u27A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n          onClick: () => movePlayer(0, 1),\n          children: \"\\u2B07\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 13\n      }, this), phase === 'finished' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(InfoText, {\n          children: \"Labirent Tamamland\\u0131!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StatsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(StatBox, {\n            children: [/*#__PURE__*/_jsxDEV(StatValue, {\n              children: formatTime(players[activePlayer].completionTime || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Saniye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StatBox, {\n            children: [/*#__PURE__*/_jsxDEV(StatValue, {\n              children: players[activePlayer].stepsTaken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Ad\\u0131m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StatBox, {\n            children: [/*#__PURE__*/_jsxDEV(StatValue, {\n              children: players[activePlayer].score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Toplam Puan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          onClick: nextRound,\n          children: round >= totalRounds ? 'Sonuçları Gör' : 'Sonraki Oyuncu'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), phase === 'end' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: isTie() ? 'Oyun Bitti! Beraberlik!' : `Oyun Bitti! Kazanan: Oyuncu ${getWinner().id + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {\n        children: getRankedPlayers().map((player, index) => /*#__PURE__*/_jsxDEV(ResultRow, {\n          highlight: player.id === getWinner().id && !isTie(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: PLAYER_COLORS[player.id]\n            },\n            children: [\"Oyuncu \", player.id + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [player.score, \" puan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: player.completionTime ? `${formatTime(player.completionTime)} sn` : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 17\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: () => window.location.reload(),\n        children: \"Tekrar Oyna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 5\n  }, this);\n};\n_s(MazeRunner, \"q9f8/7xH1TJYZFejIkUW/f5pxIc=\");\n_c17 = MazeRunner;\nexport default MazeRunner;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ScoreBoard\");\n$RefreshReg$(_c4, \"PlayerScore\");\n$RefreshReg$(_c5, \"MazeContainer\");\n$RefreshReg$(_c6, \"MazeCell\");\n$RefreshReg$(_c7, \"FinishFlag\");\n$RefreshReg$(_c8, \"InfoText\");\n$RefreshReg$(_c9, \"NextButton\");\n$RefreshReg$(_c0, \"ControlsContainer\");\n$RefreshReg$(_c1, \"ControlButton\");\n$RefreshReg$(_c10, \"TimerDisplay\");\n$RefreshReg$(_c11, \"ResultsTable\");\n$RefreshReg$(_c12, \"ResultRow\");\n$RefreshReg$(_c13, \"StatsContainer\");\n$RefreshReg$(_c14, \"StatBox\");\n$RefreshReg$(_c15, \"StatValue\");\n$RefreshReg$(_c16, \"StatLabel\");\n$RefreshReg$(_c17, \"MazeRunner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","keyframes","css","jsxDEV","_jsxDEV","Fragment","_Fragment","fadeIn","pulse","celebrationAnim","GameContainer","div","_c","Header","h2","_c2","ScoreBoard","_c3","PlayerScore","props","color","active","_c4","MazeContainer","_c5","MazeCell","isWall","isStart","isFinish","isPath","isPlayer","_c6","FinishFlag","celebrating","_c7","InfoText","_c8","NextButton","button","_c9","ControlsContainer","_c0","ControlButton","_c1","TimerDisplay","_c10","ResultsTable","_c11","ResultRow","highlight","_c12","StatsContainer","_c13","StatBox","_c14","StatValue","_c15","StatLabel","_c16","PLAYER_COLORS","MAZE_SIZE","DIRECTIONS","dx","dy","MazeRunner","playerCount","_s","players","setPlayers","Array","from","length","_","i","id","score","completionTime","stepsTaken","activePlayer","setActivePlayer","maze","setMaze","playerPosition","setPlayerPosition","x","y","startPosition","setStartPosition","finishPosition","setFinishPosition","visitedCells","setVisitedCells","phase","setPhase","round","setRound","timer","setTimer","setCelebrating","timerRef","mazeContainerRef","cellSize","totalRounds","generateMaze","newMaze","fill","map","stack","start","push","isValid","getUnvisitedNeighbors","neighbors","forEach","nx","ny","current","pop","next","Math","floor","random","finish","direction","startGame","clearInterval","setInterval","prev","p","updateCellSize","containerSize","min","clientWidth","clientHeight","window","addEventListener","removeEventListener","movePlayer","newX","newY","newVisited","finishLevel","parseFloat","toFixed","baseScore","timeBonus","max","stepPenalty","setTimeout","handleKeyDown","e","key","nextRound","newRound","formatTime","time","getWinner","reduce","highest","player","isTie","winner","filter","getRankedPlayers","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","index","style","textAlign","onClick","ref","row","_visitedCells$y","width","height","left","top","transition","location","reload","_c17","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/MazeRunner/MazeRunner.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Animasyonlar\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\nconst celebrationAnim = keyframes`\n  0% { transform: scale(1); filter: hue-rotate(0deg); }\n  50% { transform: scale(1.3); filter: hue-rotate(180deg); }\n  100% { transform: scale(1); filter: hue-rotate(360deg); }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n\nconst PlayerScore = styled.div<{ color: string, active: boolean }>`\n  color: ${props => props.color};\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n\nconst MazeContainer = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  aspect-ratio: 1;\n  margin: 1rem 0;\n  border: 2px solid rgba(255,255,255,0.2);\n  border-radius: 8px;\n  background: rgba(0,0,0,0.2);\n  overflow: hidden;\n  user-select: none;\n`;\n\nconst MazeCell = styled.div<{ \n  isWall: boolean, \n  isStart: boolean, \n  isFinish: boolean,\n  isPath: boolean,\n  isPlayer: boolean,\n  color: string \n}>`\n  position: absolute;\n  box-sizing: border-box;\n  \n  ${({ isWall, isStart, isFinish, isPath, isPlayer, color }) => {\n    if (isPlayer) {\n      return css`\n        background-color: ${color};\n        border-radius: 50%;\n        z-index: 10;\n        box-shadow: 0 0 10px ${color};\n      `;\n    }\n    if (isWall) {\n      return css`\n        background-color: rgba(30, 30, 30, 0.8);\n        border: 1px solid rgba(60, 60, 60, 0.8);\n      `;\n    }\n    if (isStart) {\n      return css`\n        background-color: rgba(46, 204, 113, 0.3);\n        border: 1px solid rgba(46, 204, 113, 0.5);\n      `;\n    }\n    if (isFinish) {\n      return css`\n        background-color: rgba(231, 76, 60, 0.3);\n        border: 1px solid rgba(231, 76, 60, 0.5);\n      `;\n    }\n    if (isPath) {\n      return css`\n        background-color: rgba(52, 152, 219, 0.1);\n        border: 1px solid rgba(52, 152, 219, 0.2);\n      `;\n    }\n    return css`\n      background-color: transparent;\n      border: 1px solid rgba(255, 255, 255, 0.05);\n    `;\n  }}\n`;\n\nconst FinishFlag = styled.div<{ celebrating: boolean }>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  z-index: 5;\n  \n  ${props => props.celebrating && css`\n    animation: ${celebrationAnim} 1s ease-in-out infinite;\n  `}\n`;\n\nconst InfoText = styled.div`\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 10px 25px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n\nconst ControlsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 8px;\n  width: 200px;\n  margin-top: 1rem;\n`;\n\nconst ControlButton = styled.button`\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  color: white;\n  font-size: 1.5rem;\n  padding: 10px;\n  cursor: pointer;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  &:nth-child(2), &:nth-child(8) {\n    grid-column: 2;\n  }\n  \n  &:nth-child(4), &:nth-child(6) {\n    grid-row: 2;\n  }\n  \n  &:nth-child(5) {\n    visibility: hidden;\n  }\n`;\n\nconst TimerDisplay = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: white;\n  margin-top: 1rem;\n  text-shadow: 0 0 10px rgba(0,0,0,0.3);\n`;\n\nconst ResultsTable = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 1rem;\n  margin-top: 1rem;\n  width: 100%;\n  max-width: 400px;\n`;\n\nconst ResultRow = styled.div<{ highlight: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  \n  ${props => props.highlight && css`\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    padding: 8px;\n  `}\n`;\n\nconst StatsContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  margin: 1rem 0;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst StatBox = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  padding: 10px;\n  border-radius: 8px;\n  flex: 1;\n  max-width: 150px;\n  text-align: center;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 5px;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: rgba(255, 255, 255, 0.7);\n`;\n\n// Oyuncu renkleri\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\n\n// Labirent ölçüleri\nconst MAZE_SIZE = 15; // 15x15 labirent\nconst DIRECTIONS = [\n  { dx: 0, dy: -1 }, // Yukarı\n  { dx: 1, dy: 0 },  // Sağ\n  { dx: 0, dy: 1 },  // Aşağı\n  { dx: -1, dy: 0 }, // Sol\n];\n\ninterface Player {\n  id: number;\n  score: number;\n  completionTime: number | null;\n  stepsTaken: number;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst MazeRunner: React.FC<{ playerCount: number }> = ({ playerCount }) => {\n  // Oyuncu durumları\n  const [players, setPlayers] = useState<Player[]>(\n    Array.from({ length: playerCount }, (_, i) => ({ \n      id: i, \n      score: 0,\n      completionTime: null,\n      stepsTaken: 0\n    }))\n  );\n  const [activePlayer, setActivePlayer] = useState(0);\n  \n  // Labirent durumları\n  const [maze, setMaze] = useState<boolean[][]>([]);\n  const [playerPosition, setPlayerPosition] = useState<Position>({ x: 1, y: 1 });\n  const [startPosition, setStartPosition] = useState<Position>({ x: 1, y: 1 });\n  const [finishPosition, setFinishPosition] = useState<Position>({ x: MAZE_SIZE - 2, y: MAZE_SIZE - 2 });\n  const [visitedCells, setVisitedCells] = useState<boolean[][]>([]);\n  \n  // Oyun durumları\n  const [phase, setPhase] = useState<'ready' | 'playing' | 'finished' | 'end'>('ready');\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(0);\n  const [celebrating, setCelebrating] = useState(false);\n  \n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const mazeContainerRef = useRef<HTMLDivElement>(null);\n  const cellSize = useRef(20); // Default cell size\n  const totalRounds = playerCount; // Her oyuncu 1 tur oynasın\n  \n  // Labirent oluşturma fonksiyonu\n  const generateMaze = useCallback(() => {\n    // Başlangıçta tüm hücreler duvar\n    const newMaze: boolean[][] = Array(MAZE_SIZE).fill(0)\n      .map(() => Array(MAZE_SIZE).fill(true));\n    \n    // Recursive Backtracking algoritması ile labirent oluştur\n    const stack: Position[] = [];\n    const start: Position = { x: 1, y: 1 };\n    \n    newMaze[start.y][start.x] = false; // Başlangıç yolu aç\n    stack.push(start);\n    \n    const isValid = (x: number, y: number) => \n      x > 0 && x < MAZE_SIZE - 1 && y > 0 && y < MAZE_SIZE - 1;\n    \n    const getUnvisitedNeighbors = (x: number, y: number) => {\n      const neighbors: Position[] = [];\n      \n      // 2 adım öteyi kontrol et (duvar + hücre)\n      DIRECTIONS.forEach(({ dx, dy }) => {\n        const nx = x + dx * 2;\n        const ny = y + dy * 2;\n        \n        if (isValid(nx, ny) && newMaze[ny][nx]) {\n          neighbors.push({ x: nx, y: ny });\n        }\n      });\n      \n      return neighbors;\n    };\n    \n    while (stack.length > 0) {\n      const current = stack[stack.length - 1];\n      const neighbors = getUnvisitedNeighbors(current.x, current.y);\n      \n      if (neighbors.length === 0) {\n        stack.pop();\n        continue;\n      }\n      \n      // Rastgele komşu seç\n      const next = neighbors[Math.floor(Math.random() * neighbors.length)];\n      \n      // Aradaki duvarı yık\n      newMaze[current.y + (next.y - current.y) / 2][current.x + (next.x - current.x) / 2] = false;\n      \n      // Komşu hücreyi yol olarak işaretle\n      newMaze[next.y][next.x] = false;\n      \n      stack.push(next);\n    }\n    \n    // Bitiş noktasını ayarla (labirentin uzak köşesi)\n    const finish: Position = { x: MAZE_SIZE - 2, y: MAZE_SIZE - 2 };\n    newMaze[finish.y][finish.x] = false;\n    \n    // Bitiş noktasına giden yolu garantile\n    let current = finish;\n    while (current.x !== start.x || current.y !== start.y) {\n      const direction = DIRECTIONS[Math.floor(Math.random() * DIRECTIONS.length)];\n      const nx = current.x + direction.dx;\n      const ny = current.y + direction.dy;\n      \n      if (isValid(nx, ny)) {\n        newMaze[ny][nx] = false;\n        current = { x: nx, y: ny };\n      }\n    }\n    \n    setMaze(newMaze);\n    setStartPosition(start);\n    setFinishPosition(finish);\n    setPlayerPosition(start);\n    \n    // Ziyaret edilen hücreleri sıfırla\n    setVisitedCells(Array(MAZE_SIZE).fill(0)\n      .map(() => Array(MAZE_SIZE).fill(false)));\n      \n    return newMaze;\n  }, []);\n  \n  // Oyunu başlat\n  const startGame = () => {\n    generateMaze();\n    setTimer(0);\n    setPhase('playing');\n    \n    // Zamanlayıcıyı başlat\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    timerRef.current = setInterval(() => {\n      setTimer(prev => prev + 0.1);\n    }, 100);\n    \n    // Mevcut oyuncunun adım sayısını sıfırla\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        return { ...p, stepsTaken: 0 };\n      }\n      return p;\n    }));\n  };\n  \n  // Hücre boyutunu hesapla\n  useEffect(() => {\n    const updateCellSize = () => {\n      if (mazeContainerRef.current) {\n        const containerSize = Math.min(\n          mazeContainerRef.current.clientWidth,\n          mazeContainerRef.current.clientHeight\n        );\n        cellSize.current = Math.floor(containerSize / MAZE_SIZE);\n      }\n    };\n    \n    updateCellSize();\n    window.addEventListener('resize', updateCellSize);\n    \n    return () => {\n      window.removeEventListener('resize', updateCellSize);\n    };\n  }, []);\n  \n  // Temizlik işlemleri\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n  \n  // Oyuncu hareketi\n  const movePlayer = (dx: number, dy: number) => {\n    if (phase !== 'playing') return;\n    \n    const newX = playerPosition.x + dx;\n    const newY = playerPosition.y + dy;\n    \n    // Hareket geçerli mi kontrol et\n    if (\n      newX >= 0 && newX < MAZE_SIZE &&\n      newY >= 0 && newY < MAZE_SIZE &&\n      !maze[newY][newX] // Duvar değilse\n    ) {\n      setPlayerPosition({ x: newX, y: newY });\n      \n      // Ziyaret edilen hücreyi işaretle\n      setVisitedCells(prev => {\n        const newVisited = [...prev];\n        newVisited[newY][newX] = true;\n        return newVisited;\n      });\n      \n      // Adım sayısını artır\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return { ...p, stepsTaken: p.stepsTaken + 1 };\n        }\n        return p;\n      }));\n      \n      // Bitiş noktasına ulaşıldı mı kontrol et\n      if (newX === finishPosition.x && newY === finishPosition.y) {\n        finishLevel();\n      }\n    }\n  };\n  \n  // Labirent tamamlandı\n  const finishLevel = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    // Kutlama animasyonu\n    setCelebrating(true);\n    \n    // Oyuncunun tamamlama zamanını ve puanını kaydet\n    const completionTime = parseFloat(timer.toFixed(1));\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        // Tamamlama süresi ne kadar kısaysa o kadar çok puan\n        const baseScore = 100;\n        const timeBonus = Math.max(0, Math.floor(30 - completionTime) * 2);\n        const stepPenalty = Math.floor(p.stepsTaken / 10);\n        const score = baseScore + timeBonus - stepPenalty;\n        \n        return { \n          ...p, \n          completionTime,\n          score: p.score + score\n        };\n      }\n      return p;\n    }));\n    \n    // Aşama değiştir\n    setPhase('finished');\n    \n    // 2 saniye sonra kutlamayı durdur\n    setTimeout(() => {\n      setCelebrating(false);\n    }, 2000);\n  };\n  \n  // Klavye kontrolleri\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (phase !== 'playing') return;\n      \n      switch (e.key) {\n        case 'ArrowUp':\n          movePlayer(0, -1);\n          break;\n        case 'ArrowRight':\n          movePlayer(1, 0);\n          break;\n        case 'ArrowDown':\n          movePlayer(0, 1);\n          break;\n        case 'ArrowLeft':\n          movePlayer(-1, 0);\n          break;\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [phase, playerPosition, maze]);\n  \n  // Sonraki tura geç\n  const nextRound = () => {\n    const newRound = round + 1;\n    setRound(newRound);\n    \n    if (newRound > totalRounds) {\n      // Oyun bitti\n      setPhase('end');\n    } else {\n      // Sıradaki oyuncuya geç\n      setActivePlayer((activePlayer + 1) % playerCount);\n      setPhase('ready');\n    }\n  };\n  \n  // Formatlanmış süre\n  const formatTime = (time: number) => {\n    return time.toFixed(1);\n  };\n  \n  // Kazananı bul\n  const getWinner = () => {\n    return players.reduce((highest, player) => \n      player.score > highest.score ? player : highest, players[0]);\n  };\n  \n  // Beraberlik kontrolü\n  const isTie = () => {\n    const winner = getWinner();\n    return players.filter(p => p.score === winner.score).length > 1;\n  };\n  \n  // Sıralı oyuncular\n  const getRankedPlayers = () => {\n    return [...players].sort((a, b) => b.score - a.score);\n  };\n  \n  return (\n    <GameContainer>\n      <Header>Labirent Koşusu</Header>\n      \n      <ScoreBoard>\n        {players.map((player, index) => (\n          <PlayerScore \n            key={player.id} \n            color={PLAYER_COLORS[index]} \n            active={activePlayer === index && phase !== 'end'}\n          >\n            Oyuncu {index + 1}: {player.score}\n          </PlayerScore>\n        ))}\n      </ScoreBoard>\n      \n      {phase === 'ready' && (\n        <>\n          <InfoText>Sıra: Oyuncu {activePlayer + 1}</InfoText>\n          <p style={{ color: 'white', textAlign: 'center' }}>\n            Labirentte başlangıç noktasından (yeşil) bitiş noktasına (kırmızı) ulaşmaya çalış.\n            Hızlı olursan daha çok puan kazanırsın!\n          </p>\n          <NextButton onClick={startGame}>Başla</NextButton>\n        </>\n      )}\n      \n      {(phase === 'playing' || phase === 'finished') && (\n        <>\n          {phase === 'playing' && (\n            <TimerDisplay>{formatTime(timer)} sn</TimerDisplay>\n          )}\n          \n          <MazeContainer ref={mazeContainerRef}>\n            {/* Labirent hücreleri */}\n            {maze.map((row, y) => \n              row.map((isWall, x) => (\n                <MazeCell\n                  key={`${x}-${y}`}\n                  isWall={isWall}\n                  isStart={x === startPosition.x && y === startPosition.y}\n                  isFinish={x === finishPosition.x && y === finishPosition.y}\n                  isPath={visitedCells[y]?.[x] || false}\n                  isPlayer={false}\n                  color=\"transparent\"\n                  style={{\n                    width: `${cellSize.current}px`,\n                    height: `${cellSize.current}px`,\n                    left: `${x * cellSize.current}px`,\n                    top: `${y * cellSize.current}px`\n                  }}\n                />\n              ))\n            )}\n            \n            {/* Oyuncu */}\n            <MazeCell\n              isWall={false}\n              isStart={false}\n              isFinish={false}\n              isPath={false}\n              isPlayer={true}\n              color={PLAYER_COLORS[activePlayer]}\n              style={{\n                width: `${cellSize.current * 0.8}px`,\n                height: `${cellSize.current * 0.8}px`,\n                left: `${playerPosition.x * cellSize.current + cellSize.current * 0.1}px`,\n                top: `${playerPosition.y * cellSize.current + cellSize.current * 0.1}px`,\n                transition: 'left 0.2s, top 0.2s'\n              }}\n            />\n            \n            {/* Bitiş bayrağı */}\n            <MazeCell\n              isWall={false}\n              isStart={false}\n              isFinish={true}\n              isPath={false}\n              isPlayer={false}\n              color=\"transparent\"\n              style={{\n                width: `${cellSize.current}px`,\n                height: `${cellSize.current}px`,\n                left: `${finishPosition.x * cellSize.current}px`,\n                top: `${finishPosition.y * cellSize.current}px`\n              }}\n            >\n              <FinishFlag celebrating={celebrating}>🚩</FinishFlag>\n            </MazeCell>\n          </MazeContainer>\n          \n          {phase === 'playing' && (\n            <ControlsContainer>\n              <div></div>\n              <ControlButton onClick={() => movePlayer(0, -1)}>⬆️</ControlButton>\n              <div></div>\n              <ControlButton onClick={() => movePlayer(-1, 0)}>⬅️</ControlButton>\n              <div></div>\n              <ControlButton onClick={() => movePlayer(1, 0)}>➡️</ControlButton>\n              <div></div>\n              <ControlButton onClick={() => movePlayer(0, 1)}>⬇️</ControlButton>\n              <div></div>\n            </ControlsContainer>\n          )}\n          \n          {phase === 'finished' && (\n            <>\n              <InfoText>Labirent Tamamlandı!</InfoText>\n              \n              <StatsContainer>\n                <StatBox>\n                  <StatValue>{formatTime(players[activePlayer].completionTime || 0)}</StatValue>\n                  <StatLabel>Saniye</StatLabel>\n                </StatBox>\n                <StatBox>\n                  <StatValue>{players[activePlayer].stepsTaken}</StatValue>\n                  <StatLabel>Adım</StatLabel>\n                </StatBox>\n                <StatBox>\n                  <StatValue>{players[activePlayer].score}</StatValue>\n                  <StatLabel>Toplam Puan</StatLabel>\n                </StatBox>\n              </StatsContainer>\n              \n              <NextButton onClick={nextRound}>\n                {round >= totalRounds ? 'Sonuçları Gör' : 'Sonraki Oyuncu'}\n              </NextButton>\n            </>\n          )}\n        </>\n      )}\n      \n      {phase === 'end' && (\n        <>\n          <InfoText>\n            {isTie() \n              ? 'Oyun Bitti! Beraberlik!' \n              : `Oyun Bitti! Kazanan: Oyuncu ${getWinner().id + 1}`\n            }\n          </InfoText>\n          \n          <ResultsTable>\n            {getRankedPlayers().map((player, index) => (\n              <ResultRow \n                key={player.id}\n                highlight={player.id === getWinner().id && !isTie()}\n              >\n                <div style={{color: PLAYER_COLORS[player.id]}}>\n                  Oyuncu {player.id + 1}\n                </div>\n                <div>{player.score} puan</div>\n                <div>{player.completionTime ? `${formatTime(player.completionTime)} sn` : '-'}</div>\n              </ResultRow>\n            ))}\n          </ResultsTable>\n          \n          <NextButton onClick={() => window.location.reload()}>\n            Tekrar Oyna\n          </NextButton>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default MazeRunner; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,IAAIC,SAAS,EAAEC,GAAG,QAAQ,mBAAmB;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,GAAGN,SAAS;AACxB;AACA;AACA,CAAC;AAED,MAAMO,KAAK,GAAGP,SAAS;AACvB;AACA;AACA;AACA,CAAC;AAED,MAAMQ,eAAe,GAAGR,SAAS;AACjC;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMS,aAAa,GAAGV,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,aAAa;AAYnB,MAAMG,MAAM,GAAGb,MAAM,CAACc,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,MAAM;AASZ,MAAMG,UAAU,GAAGhB,MAAM,CAACW,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeJ,MAAM;AACrB,CAAC;AAACU,GAAA,GATID,UAAU;AAWhB,MAAME,WAAW,GAAGlB,MAAM,CAACW,GAAuC;AAClE,WAAWQ,KAAK,IAAIA,KAAK,CAACC,KAAK;AAC/B;AACA;AACA;AACA;AACA,sBAAsBD,KAAK,IAAIA,KAAK,CAACC,KAAK;AAC1C,gBAAgBD,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,GAAGF,KAAK,CAACC,KAAK,IAAI,GAAG,aAAa;AAC1E,eAAeD,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAGb,KAAK,GAAG,MAAM;AACrD,CAAC;AAACc,GAAA,GATIJ,WAAW;AAWjB,MAAMK,aAAa,GAAGvB,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GAZID,aAAa;AAcnB,MAAME,QAAQ,GAAGzB,MAAM,CAACW,GAOtB;AACF;AACA;AACA;AACA,IAAI,CAAC;EAAEe,MAAM;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,QAAQ;EAAEV;AAAM,CAAC,KAAK;EAC5D,IAAIU,QAAQ,EAAE;IACZ,OAAO5B,GAAG;AAChB,4BAA4BkB,KAAK;AACjC;AACA;AACA,+BAA+BA,KAAK;AACpC,OAAO;EACH;EACA,IAAIM,MAAM,EAAE;IACV,OAAOxB,GAAG;AAChB;AACA;AACA,OAAO;EACH;EACA,IAAIyB,OAAO,EAAE;IACX,OAAOzB,GAAG;AAChB;AACA;AACA,OAAO;EACH;EACA,IAAI0B,QAAQ,EAAE;IACZ,OAAO1B,GAAG;AAChB;AACA;AACA,OAAO;EACH;EACA,IAAI2B,MAAM,EAAE;IACV,OAAO3B,GAAG;AAChB;AACA;AACA,OAAO;EACH;EACA,OAAOA,GAAG;AACd;AACA;AACA,KAAK;AACH,CAAC;AACH,CAAC;AAAC6B,GAAA,GAjDIN,QAAQ;AAmDd,MAAMO,UAAU,GAAGhC,MAAM,CAACW,GAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIQ,KAAK,IAAIA,KAAK,CAACc,WAAW,IAAI/B,GAAG;AACrC,iBAAiBO,eAAe;AAChC,GAAG;AACH,CAAC;AAACyB,GAAA,GAbIF,UAAU;AAehB,MAAMG,QAAQ,GAAGnC,MAAM,CAACW,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyB,GAAA,GAVID,QAAQ;AAYd,MAAME,UAAU,GAAGrC,MAAM,CAACsC,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAhBIF,UAAU;AAkBhB,MAAMG,iBAAiB,GAAGxC,MAAM,CAACW,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,GAAA,GANID,iBAAiB;AAQvB,MAAME,aAAa,GAAG1C,MAAM,CAACsC,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAxBID,aAAa;AA0BnB,MAAME,YAAY,GAAG5C,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkC,IAAA,GANID,YAAY;AAQlB,MAAME,YAAY,GAAG9C,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoC,IAAA,GAPID,YAAY;AASlB,MAAME,SAAS,GAAGhD,MAAM,CAACW,GAA2B;AACpD;AACA;AACA;AACA;AACA;AACA,IAAIQ,KAAK,IAAIA,KAAK,CAAC8B,SAAS,IAAI/C,GAAG;AACnC;AACA;AACA;AACA,GAAG;AACH,CAAC;AAACgD,IAAA,GAXIF,SAAS;AAaf,MAAMG,cAAc,GAAGnD,MAAM,CAACW,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,IAAA,GANID,cAAc;AAQpB,MAAME,OAAO,GAAGrD,MAAM,CAACW,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC2C,IAAA,GAPID,OAAO;AASb,MAAME,SAAS,GAAGvD,MAAM,CAACW,GAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAAC6C,IAAA,GALID,SAAS;AAOf,MAAME,SAAS,GAAGzD,MAAM,CAACW,GAAG;AAC5B;AACA;AACA,CAAC;;AAED;AAAA+C,IAAA,GALMD,SAAS;AAMf,MAAME,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;;AAElE;AACA,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;AACtB,MAAMC,UAAU,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;AAAE,CAAC;AAAE;AACnB;EAAED,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC;AAAG;AACnB;EAAED,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC;AAAG;AACnB;EAAED,EAAE,EAAE,CAAC,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC,CAAE;AAAA,CACpB;AAcD,MAAMC,UAA6C,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzE;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxE,QAAQ,CACpCyE,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEN;EAAY,CAAC,EAAE,CAACO,CAAC,EAAEC,CAAC,MAAM;IAC7CC,EAAE,EAAED,CAAC;IACLE,KAAK,EAAE,CAAC;IACRC,cAAc,EAAE,IAAI;IACpBC,UAAU,EAAE;EACd,CAAC,CAAC,CACJ,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnF,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAM,CAACoF,IAAI,EAAEC,OAAO,CAAC,GAAGrF,QAAQ,CAAc,EAAE,CAAC;EACjD,MAAM,CAACsF,cAAc,EAAEC,iBAAiB,CAAC,GAAGvF,QAAQ,CAAW;IAAEwF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC9E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG3F,QAAQ,CAAW;IAAEwF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5E,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAG7F,QAAQ,CAAW;IAAEwF,CAAC,EAAExB,SAAS,GAAG,CAAC;IAAEyB,CAAC,EAAEzB,SAAS,GAAG;EAAE,CAAC,CAAC;EACtG,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/F,QAAQ,CAAc,EAAE,CAAC;;EAEjE;EACA,MAAM,CAACgG,KAAK,EAAEC,QAAQ,CAAC,GAAGjG,QAAQ,CAA2C,OAAO,CAAC;EACrF,MAAM,CAACkG,KAAK,EAAEC,QAAQ,CAAC,GAAGnG,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACoG,KAAK,EAAEC,QAAQ,CAAC,GAAGrG,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACqC,WAAW,EAAEiE,cAAc,CAAC,GAAGtG,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMuG,QAAQ,GAAGrG,MAAM,CAAwB,IAAI,CAAC;EACpD,MAAMsG,gBAAgB,GAAGtG,MAAM,CAAiB,IAAI,CAAC;EACrD,MAAMuG,QAAQ,GAAGvG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7B,MAAMwG,WAAW,GAAGrC,WAAW,CAAC,CAAC;;EAEjC;EACA,MAAMsC,YAAY,GAAGxG,WAAW,CAAC,MAAM;IACrC;IACA,MAAMyG,OAAoB,GAAGnC,KAAK,CAACT,SAAS,CAAC,CAAC6C,IAAI,CAAC,CAAC,CAAC,CAClDC,GAAG,CAAC,MAAMrC,KAAK,CAACT,SAAS,CAAC,CAAC6C,IAAI,CAAC,IAAI,CAAC,CAAC;;IAEzC;IACA,MAAME,KAAiB,GAAG,EAAE;IAC5B,MAAMC,KAAe,GAAG;MAAExB,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAEtCmB,OAAO,CAACI,KAAK,CAACvB,CAAC,CAAC,CAACuB,KAAK,CAACxB,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IACnCuB,KAAK,CAACE,IAAI,CAACD,KAAK,CAAC;IAEjB,MAAME,OAAO,GAAGA,CAAC1B,CAAS,EAAEC,CAAS,KACnCD,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGxB,SAAS,GAAG,CAAC,IAAIyB,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGzB,SAAS,GAAG,CAAC;IAE1D,MAAMmD,qBAAqB,GAAGA,CAAC3B,CAAS,EAAEC,CAAS,KAAK;MACtD,MAAM2B,SAAqB,GAAG,EAAE;;MAEhC;MACAnD,UAAU,CAACoD,OAAO,CAAC,CAAC;QAAEnD,EAAE;QAAEC;MAAG,CAAC,KAAK;QACjC,MAAMmD,EAAE,GAAG9B,CAAC,GAAGtB,EAAE,GAAG,CAAC;QACrB,MAAMqD,EAAE,GAAG9B,CAAC,GAAGtB,EAAE,GAAG,CAAC;QAErB,IAAI+C,OAAO,CAACI,EAAE,EAAEC,EAAE,CAAC,IAAIX,OAAO,CAACW,EAAE,CAAC,CAACD,EAAE,CAAC,EAAE;UACtCF,SAAS,CAACH,IAAI,CAAC;YAAEzB,CAAC,EAAE8B,EAAE;YAAE7B,CAAC,EAAE8B;UAAG,CAAC,CAAC;QAClC;MACF,CAAC,CAAC;MAEF,OAAOH,SAAS;IAClB,CAAC;IAED,OAAOL,KAAK,CAACpC,MAAM,GAAG,CAAC,EAAE;MACvB,MAAM6C,OAAO,GAAGT,KAAK,CAACA,KAAK,CAACpC,MAAM,GAAG,CAAC,CAAC;MACvC,MAAMyC,SAAS,GAAGD,qBAAqB,CAACK,OAAO,CAAChC,CAAC,EAAEgC,OAAO,CAAC/B,CAAC,CAAC;MAE7D,IAAI2B,SAAS,CAACzC,MAAM,KAAK,CAAC,EAAE;QAC1BoC,KAAK,CAACU,GAAG,CAAC,CAAC;QACX;MACF;;MAEA;MACA,MAAMC,IAAI,GAAGN,SAAS,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,SAAS,CAACzC,MAAM,CAAC,CAAC;;MAEpE;MACAiC,OAAO,CAACY,OAAO,CAAC/B,CAAC,GAAG,CAACiC,IAAI,CAACjC,CAAC,GAAG+B,OAAO,CAAC/B,CAAC,IAAI,CAAC,CAAC,CAAC+B,OAAO,CAAChC,CAAC,GAAG,CAACkC,IAAI,CAAClC,CAAC,GAAGgC,OAAO,CAAChC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;;MAE3F;MACAoB,OAAO,CAACc,IAAI,CAACjC,CAAC,CAAC,CAACiC,IAAI,CAAClC,CAAC,CAAC,GAAG,KAAK;MAE/BuB,KAAK,CAACE,IAAI,CAACS,IAAI,CAAC;IAClB;;IAEA;IACA,MAAMI,MAAgB,GAAG;MAAEtC,CAAC,EAAExB,SAAS,GAAG,CAAC;MAAEyB,CAAC,EAAEzB,SAAS,GAAG;IAAE,CAAC;IAC/D4C,OAAO,CAACkB,MAAM,CAACrC,CAAC,CAAC,CAACqC,MAAM,CAACtC,CAAC,CAAC,GAAG,KAAK;;IAEnC;IACA,IAAIgC,OAAO,GAAGM,MAAM;IACpB,OAAON,OAAO,CAAChC,CAAC,KAAKwB,KAAK,CAACxB,CAAC,IAAIgC,OAAO,CAAC/B,CAAC,KAAKuB,KAAK,CAACvB,CAAC,EAAE;MACrD,MAAMsC,SAAS,GAAG9D,UAAU,CAAC0D,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG5D,UAAU,CAACU,MAAM,CAAC,CAAC;MAC3E,MAAM2C,EAAE,GAAGE,OAAO,CAAChC,CAAC,GAAGuC,SAAS,CAAC7D,EAAE;MACnC,MAAMqD,EAAE,GAAGC,OAAO,CAAC/B,CAAC,GAAGsC,SAAS,CAAC5D,EAAE;MAEnC,IAAI+C,OAAO,CAACI,EAAE,EAAEC,EAAE,CAAC,EAAE;QACnBX,OAAO,CAACW,EAAE,CAAC,CAACD,EAAE,CAAC,GAAG,KAAK;QACvBE,OAAO,GAAG;UAAEhC,CAAC,EAAE8B,EAAE;UAAE7B,CAAC,EAAE8B;QAAG,CAAC;MAC5B;IACF;IAEAlC,OAAO,CAACuB,OAAO,CAAC;IAChBjB,gBAAgB,CAACqB,KAAK,CAAC;IACvBnB,iBAAiB,CAACiC,MAAM,CAAC;IACzBvC,iBAAiB,CAACyB,KAAK,CAAC;;IAExB;IACAjB,eAAe,CAACtB,KAAK,CAACT,SAAS,CAAC,CAAC6C,IAAI,CAAC,CAAC,CAAC,CACrCC,GAAG,CAAC,MAAMrC,KAAK,CAACT,SAAS,CAAC,CAAC6C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAE3C,OAAOD,OAAO;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMoB,SAAS,GAAGA,CAAA,KAAM;IACtBrB,YAAY,CAAC,CAAC;IACdN,QAAQ,CAAC,CAAC,CAAC;IACXJ,QAAQ,CAAC,SAAS,CAAC;;IAEnB;IACA,IAAIM,QAAQ,CAACiB,OAAO,EAAE;MACpBS,aAAa,CAAC1B,QAAQ,CAACiB,OAAO,CAAC;IACjC;IAEAjB,QAAQ,CAACiB,OAAO,GAAGU,WAAW,CAAC,MAAM;MACnC7B,QAAQ,CAAC8B,IAAI,IAAIA,IAAI,GAAG,GAAG,CAAC;IAC9B,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA3D,UAAU,CAAC2D,IAAI,IAAIA,IAAI,CAACrB,GAAG,CAAC,CAACsB,CAAC,EAAEvD,CAAC,KAAK;MACpC,IAAIA,CAAC,KAAKK,YAAY,EAAE;QACtB,OAAO;UAAE,GAAGkD,CAAC;UAAEnD,UAAU,EAAE;QAAE,CAAC;MAChC;MACA,OAAOmD,CAAC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACAnI,SAAS,CAAC,MAAM;IACd,MAAMoI,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAI7B,gBAAgB,CAACgB,OAAO,EAAE;QAC5B,MAAMc,aAAa,GAAGX,IAAI,CAACY,GAAG,CAC5B/B,gBAAgB,CAACgB,OAAO,CAACgB,WAAW,EACpChC,gBAAgB,CAACgB,OAAO,CAACiB,YAC3B,CAAC;QACDhC,QAAQ,CAACe,OAAO,GAAGG,IAAI,CAACC,KAAK,CAACU,aAAa,GAAGtE,SAAS,CAAC;MAC1D;IACF,CAAC;IAEDqE,cAAc,CAAC,CAAC;IAChBK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEN,cAAc,CAAC;IAEjD,OAAO,MAAM;MACXK,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEP,cAAc,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApI,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIsG,QAAQ,CAACiB,OAAO,EAAE;QACpBS,aAAa,CAAC1B,QAAQ,CAACiB,OAAO,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMqB,UAAU,GAAGA,CAAC3E,EAAU,EAAEC,EAAU,KAAK;IAC7C,IAAI6B,KAAK,KAAK,SAAS,EAAE;IAEzB,MAAM8C,IAAI,GAAGxD,cAAc,CAACE,CAAC,GAAGtB,EAAE;IAClC,MAAM6E,IAAI,GAAGzD,cAAc,CAACG,CAAC,GAAGtB,EAAE;;IAElC;IACA,IACE2E,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG9E,SAAS,IAC7B+E,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG/E,SAAS,IAC7B,CAACoB,IAAI,CAAC2D,IAAI,CAAC,CAACD,IAAI,CAAC,CAAC;IAAA,EAClB;MACAvD,iBAAiB,CAAC;QAAEC,CAAC,EAAEsD,IAAI;QAAErD,CAAC,EAAEsD;MAAK,CAAC,CAAC;;MAEvC;MACAhD,eAAe,CAACoC,IAAI,IAAI;QACtB,MAAMa,UAAU,GAAG,CAAC,GAAGb,IAAI,CAAC;QAC5Ba,UAAU,CAACD,IAAI,CAAC,CAACD,IAAI,CAAC,GAAG,IAAI;QAC7B,OAAOE,UAAU;MACnB,CAAC,CAAC;;MAEF;MACAxE,UAAU,CAAC2D,IAAI,IAAIA,IAAI,CAACrB,GAAG,CAAC,CAACsB,CAAC,EAAEvD,CAAC,KAAK;QACpC,IAAIA,CAAC,KAAKK,YAAY,EAAE;UACtB,OAAO;YAAE,GAAGkD,CAAC;YAAEnD,UAAU,EAAEmD,CAAC,CAACnD,UAAU,GAAG;UAAE,CAAC;QAC/C;QACA,OAAOmD,CAAC;MACV,CAAC,CAAC,CAAC;;MAEH;MACA,IAAIU,IAAI,KAAKlD,cAAc,CAACJ,CAAC,IAAIuD,IAAI,KAAKnD,cAAc,CAACH,CAAC,EAAE;QAC1DwD,WAAW,CAAC,CAAC;MACf;IACF;EACF,CAAC;;EAED;EACA,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI1C,QAAQ,CAACiB,OAAO,EAAE;MACpBS,aAAa,CAAC1B,QAAQ,CAACiB,OAAO,CAAC;IACjC;;IAEA;IACAlB,cAAc,CAAC,IAAI,CAAC;;IAEpB;IACA,MAAMtB,cAAc,GAAGkE,UAAU,CAAC9C,KAAK,CAAC+C,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD3E,UAAU,CAAC2D,IAAI,IAAIA,IAAI,CAACrB,GAAG,CAAC,CAACsB,CAAC,EAAEvD,CAAC,KAAK;MACpC,IAAIA,CAAC,KAAKK,YAAY,EAAE;QACtB;QACA,MAAMkE,SAAS,GAAG,GAAG;QACrB,MAAMC,SAAS,GAAG1B,IAAI,CAAC2B,GAAG,CAAC,CAAC,EAAE3B,IAAI,CAACC,KAAK,CAAC,EAAE,GAAG5C,cAAc,CAAC,GAAG,CAAC,CAAC;QAClE,MAAMuE,WAAW,GAAG5B,IAAI,CAACC,KAAK,CAACQ,CAAC,CAACnD,UAAU,GAAG,EAAE,CAAC;QACjD,MAAMF,KAAK,GAAGqE,SAAS,GAAGC,SAAS,GAAGE,WAAW;QAEjD,OAAO;UACL,GAAGnB,CAAC;UACJpD,cAAc;UACdD,KAAK,EAAEqD,CAAC,CAACrD,KAAK,GAAGA;QACnB,CAAC;MACH;MACA,OAAOqD,CAAC;IACV,CAAC,CAAC,CAAC;;IAEH;IACAnC,QAAQ,CAAC,UAAU,CAAC;;IAEpB;IACAuD,UAAU,CAAC,MAAM;MACflD,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACArG,SAAS,CAAC,MAAM;IACd,MAAMwJ,aAAa,GAAIC,CAAgB,IAAK;MAC1C,IAAI1D,KAAK,KAAK,SAAS,EAAE;MAEzB,QAAQ0D,CAAC,CAACC,GAAG;QACX,KAAK,SAAS;UACZd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjB;QACF,KAAK,YAAY;UACfA,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UAChB;QACF,KAAK,WAAW;UACdA,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UAChB;QACF,KAAK,WAAW;UACdA,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACjB;MACJ;IACF,CAAC;IAEDH,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEc,aAAa,CAAC;IACjD,OAAO,MAAM;MACXf,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEa,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACzD,KAAK,EAAEV,cAAc,EAAEF,IAAI,CAAC,CAAC;;EAEjC;EACA,MAAMwE,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,QAAQ,GAAG3D,KAAK,GAAG,CAAC;IAC1BC,QAAQ,CAAC0D,QAAQ,CAAC;IAElB,IAAIA,QAAQ,GAAGnD,WAAW,EAAE;MAC1B;MACAT,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,MAAM;MACL;MACAd,eAAe,CAAC,CAACD,YAAY,GAAG,CAAC,IAAIb,WAAW,CAAC;MACjD4B,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM6D,UAAU,GAAIC,IAAY,IAAK;IACnC,OAAOA,IAAI,CAACZ,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtB,OAAOzF,OAAO,CAAC0F,MAAM,CAAC,CAACC,OAAO,EAAEC,MAAM,KACpCA,MAAM,CAACpF,KAAK,GAAGmF,OAAO,CAACnF,KAAK,GAAGoF,MAAM,GAAGD,OAAO,EAAE3F,OAAO,CAAC,CAAC,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAM6F,KAAK,GAAGA,CAAA,KAAM;IAClB,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;IAC1B,OAAOzF,OAAO,CAAC+F,MAAM,CAAClC,CAAC,IAAIA,CAAC,CAACrD,KAAK,KAAKsF,MAAM,CAACtF,KAAK,CAAC,CAACJ,MAAM,GAAG,CAAC;EACjE,CAAC;;EAED;EACA,MAAM4F,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAO,CAAC,GAAGhG,OAAO,CAAC,CAACiG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC3F,KAAK,GAAG0F,CAAC,CAAC1F,KAAK,CAAC;EACvD,CAAC;EAED,oBACEvE,OAAA,CAACM,aAAa;IAAA6J,QAAA,gBACZnK,OAAA,CAACS,MAAM;MAAA0J,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhCvK,OAAA,CAACY,UAAU;MAAAuJ,QAAA,EACRpG,OAAO,CAACuC,GAAG,CAAC,CAACqD,MAAM,EAAEa,KAAK,kBACzBxK,OAAA,CAACc,WAAW;QAEVE,KAAK,EAAEuC,aAAa,CAACiH,KAAK,CAAE;QAC5BvJ,MAAM,EAAEyD,YAAY,KAAK8F,KAAK,IAAIhF,KAAK,KAAK,KAAM;QAAA2E,QAAA,GACnD,SACQ,EAACK,KAAK,GAAG,CAAC,EAAC,IAAE,EAACb,MAAM,CAACpF,KAAK;MAAA,GAJ5BoF,MAAM,CAACrF,EAAE;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKH,CACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,EAEZ/E,KAAK,KAAK,OAAO,iBAChBxF,OAAA,CAAAE,SAAA;MAAAiK,QAAA,gBACEnK,OAAA,CAAC+B,QAAQ;QAAAoI,QAAA,GAAC,oBAAa,EAACzF,YAAY,GAAG,CAAC;MAAA;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACpDvK,OAAA;QAAGyK,KAAK,EAAE;UAAEzJ,KAAK,EAAE,OAAO;UAAE0J,SAAS,EAAE;QAAS,CAAE;QAAAP,QAAA,EAAC;MAGnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJvK,OAAA,CAACiC,UAAU;QAAC0I,OAAO,EAAEnD,SAAU;QAAA2C,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA,eAClD,CACH,EAEA,CAAC/E,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,UAAU,kBAC3CxF,OAAA,CAAAE,SAAA;MAAAiK,QAAA,GACG3E,KAAK,KAAK,SAAS,iBAClBxF,OAAA,CAACwC,YAAY;QAAA2H,QAAA,GAAEb,UAAU,CAAC1D,KAAK,CAAC,EAAC,KAAG;MAAA;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CACnD,eAEDvK,OAAA,CAACmB,aAAa;QAACyJ,GAAG,EAAE5E,gBAAiB;QAAAmE,QAAA,GAElCvF,IAAI,CAAC0B,GAAG,CAAC,CAACuE,GAAG,EAAE5F,CAAC,KACf4F,GAAG,CAACvE,GAAG,CAAC,CAAChF,MAAM,EAAE0D,CAAC;UAAA,IAAA8F,eAAA;UAAA,oBAChB9K,OAAA,CAACqB,QAAQ;YAEPC,MAAM,EAAEA,MAAO;YACfC,OAAO,EAAEyD,CAAC,KAAKE,aAAa,CAACF,CAAC,IAAIC,CAAC,KAAKC,aAAa,CAACD,CAAE;YACxDzD,QAAQ,EAAEwD,CAAC,KAAKI,cAAc,CAACJ,CAAC,IAAIC,CAAC,KAAKG,cAAc,CAACH,CAAE;YAC3DxD,MAAM,EAAE,EAAAqJ,eAAA,GAAAxF,YAAY,CAACL,CAAC,CAAC,cAAA6F,eAAA,uBAAfA,eAAA,CAAkB9F,CAAC,CAAC,KAAI,KAAM;YACtCtD,QAAQ,EAAE,KAAM;YAChBV,KAAK,EAAC,aAAa;YACnByJ,KAAK,EAAE;cACLM,KAAK,EAAE,GAAG9E,QAAQ,CAACe,OAAO,IAAI;cAC9BgE,MAAM,EAAE,GAAG/E,QAAQ,CAACe,OAAO,IAAI;cAC/BiE,IAAI,EAAE,GAAGjG,CAAC,GAAGiB,QAAQ,CAACe,OAAO,IAAI;cACjCkE,GAAG,EAAE,GAAGjG,CAAC,GAAGgB,QAAQ,CAACe,OAAO;YAC9B;UAAE,GAZG,GAAGhC,CAAC,IAAIC,CAAC,EAAE;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAajB,CAAC;QAAA,CACH,CACH,CAAC,eAGDvK,OAAA,CAACqB,QAAQ;UACPC,MAAM,EAAE,KAAM;UACdC,OAAO,EAAE,KAAM;UACfC,QAAQ,EAAE,KAAM;UAChBC,MAAM,EAAE,KAAM;UACdC,QAAQ,EAAE,IAAK;UACfV,KAAK,EAAEuC,aAAa,CAACmB,YAAY,CAAE;UACnC+F,KAAK,EAAE;YACLM,KAAK,EAAE,GAAG9E,QAAQ,CAACe,OAAO,GAAG,GAAG,IAAI;YACpCgE,MAAM,EAAE,GAAG/E,QAAQ,CAACe,OAAO,GAAG,GAAG,IAAI;YACrCiE,IAAI,EAAE,GAAGnG,cAAc,CAACE,CAAC,GAAGiB,QAAQ,CAACe,OAAO,GAAGf,QAAQ,CAACe,OAAO,GAAG,GAAG,IAAI;YACzEkE,GAAG,EAAE,GAAGpG,cAAc,CAACG,CAAC,GAAGgB,QAAQ,CAACe,OAAO,GAAGf,QAAQ,CAACe,OAAO,GAAG,GAAG,IAAI;YACxEmE,UAAU,EAAE;UACd;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGFvK,OAAA,CAACqB,QAAQ;UACPC,MAAM,EAAE,KAAM;UACdC,OAAO,EAAE,KAAM;UACfC,QAAQ,EAAE,IAAK;UACfC,MAAM,EAAE,KAAM;UACdC,QAAQ,EAAE,KAAM;UAChBV,KAAK,EAAC,aAAa;UACnByJ,KAAK,EAAE;YACLM,KAAK,EAAE,GAAG9E,QAAQ,CAACe,OAAO,IAAI;YAC9BgE,MAAM,EAAE,GAAG/E,QAAQ,CAACe,OAAO,IAAI;YAC/BiE,IAAI,EAAE,GAAG7F,cAAc,CAACJ,CAAC,GAAGiB,QAAQ,CAACe,OAAO,IAAI;YAChDkE,GAAG,EAAE,GAAG9F,cAAc,CAACH,CAAC,GAAGgB,QAAQ,CAACe,OAAO;UAC7C,CAAE;UAAAmD,QAAA,eAEFnK,OAAA,CAAC4B,UAAU;YAACC,WAAW,EAAEA,WAAY;YAAAsI,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEf/E,KAAK,KAAK,SAAS,iBAClBxF,OAAA,CAACoC,iBAAiB;QAAA+H,QAAA,gBAChBnK,OAAA;UAAAoK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXvK,OAAA,CAACsC,aAAa;UAACqI,OAAO,EAAEA,CAAA,KAAMtC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;UAAA8B,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eACnEvK,OAAA;UAAAoK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXvK,OAAA,CAACsC,aAAa;UAACqI,OAAO,EAAEA,CAAA,KAAMtC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAE;UAAA8B,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eACnEvK,OAAA;UAAAoK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXvK,OAAA,CAACsC,aAAa;UAACqI,OAAO,EAAEA,CAAA,KAAMtC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAE;UAAA8B,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAClEvK,OAAA;UAAAoK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXvK,OAAA,CAACsC,aAAa;UAACqI,OAAO,EAAEA,CAAA,KAAMtC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAE;UAAA8B,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAClEvK,OAAA;UAAAoK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CACpB,EAEA/E,KAAK,KAAK,UAAU,iBACnBxF,OAAA,CAAAE,SAAA;QAAAiK,QAAA,gBACEnK,OAAA,CAAC+B,QAAQ;UAAAoI,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eAEzCvK,OAAA,CAAC+C,cAAc;UAAAoH,QAAA,gBACbnK,OAAA,CAACiD,OAAO;YAAAkH,QAAA,gBACNnK,OAAA,CAACmD,SAAS;cAAAgH,QAAA,EAAEb,UAAU,CAACvF,OAAO,CAACW,YAAY,CAAC,CAACF,cAAc,IAAI,CAAC;YAAC;cAAA4F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9EvK,OAAA,CAACqD,SAAS;cAAA8G,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACVvK,OAAA,CAACiD,OAAO;YAAAkH,QAAA,gBACNnK,OAAA,CAACmD,SAAS;cAAAgH,QAAA,EAAEpG,OAAO,CAACW,YAAY,CAAC,CAACD;YAAU;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACzDvK,OAAA,CAACqD,SAAS;cAAA8G,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACVvK,OAAA,CAACiD,OAAO;YAAAkH,QAAA,gBACNnK,OAAA,CAACmD,SAAS;cAAAgH,QAAA,EAAEpG,OAAO,CAACW,YAAY,CAAC,CAACH;YAAK;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpDvK,OAAA,CAACqD,SAAS;cAAA8G,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAEjBvK,OAAA,CAACiC,UAAU;UAAC0I,OAAO,EAAEvB,SAAU;UAAAe,QAAA,EAC5BzE,KAAK,IAAIQ,WAAW,GAAG,eAAe,GAAG;QAAgB;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA,eACb,CACH;IAAA,eACD,CACH,EAEA/E,KAAK,KAAK,KAAK,iBACdxF,OAAA,CAAAE,SAAA;MAAAiK,QAAA,gBACEnK,OAAA,CAAC+B,QAAQ;QAAAoI,QAAA,EACNP,KAAK,CAAC,CAAC,GACJ,yBAAyB,GACzB,+BAA+BJ,SAAS,CAAC,CAAC,CAAClF,EAAE,GAAG,CAAC;MAAE;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/C,CAAC,eAEXvK,OAAA,CAAC0C,YAAY;QAAAyH,QAAA,EACVJ,gBAAgB,CAAC,CAAC,CAACzD,GAAG,CAAC,CAACqD,MAAM,EAAEa,KAAK,kBACpCxK,OAAA,CAAC4C,SAAS;UAERC,SAAS,EAAE8G,MAAM,CAACrF,EAAE,KAAKkF,SAAS,CAAC,CAAC,CAAClF,EAAE,IAAI,CAACsF,KAAK,CAAC,CAAE;UAAAO,QAAA,gBAEpDnK,OAAA;YAAKyK,KAAK,EAAE;cAACzJ,KAAK,EAAEuC,aAAa,CAACoG,MAAM,CAACrF,EAAE;YAAC,CAAE;YAAA6F,QAAA,GAAC,SACtC,EAACR,MAAM,CAACrF,EAAE,GAAG,CAAC;UAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACNvK,OAAA;YAAAmK,QAAA,GAAMR,MAAM,CAACpF,KAAK,EAAC,OAAK;UAAA;YAAA6F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BvK,OAAA;YAAAmK,QAAA,EAAMR,MAAM,CAACnF,cAAc,GAAG,GAAG8E,UAAU,CAACK,MAAM,CAACnF,cAAc,CAAC,KAAK,GAAG;UAAG;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAP/EZ,MAAM,CAACrF,EAAE;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQL,CACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC,eAEfvK,OAAA,CAACiC,UAAU;QAAC0I,OAAO,EAAEA,CAAA,KAAMzC,MAAM,CAACkD,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAAlB,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA,eACb,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB,CAAC;AAACzG,EAAA,CAldIF,UAA6C;AAAA0H,IAAA,GAA7C1H,UAA6C;AAodnD,eAAeA,UAAU;AAAC,IAAApD,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAE,GAAA,EAAAO,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAgI,IAAA;AAAAC,YAAA,CAAA/K,EAAA;AAAA+K,YAAA,CAAA5K,GAAA;AAAA4K,YAAA,CAAA1K,GAAA;AAAA0K,YAAA,CAAArK,GAAA;AAAAqK,YAAA,CAAAnK,GAAA;AAAAmK,YAAA,CAAA5J,GAAA;AAAA4J,YAAA,CAAAzJ,GAAA;AAAAyJ,YAAA,CAAAvJ,GAAA;AAAAuJ,YAAA,CAAApJ,GAAA;AAAAoJ,YAAA,CAAAlJ,GAAA;AAAAkJ,YAAA,CAAAhJ,GAAA;AAAAgJ,YAAA,CAAA9I,IAAA;AAAA8I,YAAA,CAAA5I,IAAA;AAAA4I,YAAA,CAAAzI,IAAA;AAAAyI,YAAA,CAAAvI,IAAA;AAAAuI,YAAA,CAAArI,IAAA;AAAAqI,YAAA,CAAAnI,IAAA;AAAAmI,YAAA,CAAAjI,IAAA;AAAAiI,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}