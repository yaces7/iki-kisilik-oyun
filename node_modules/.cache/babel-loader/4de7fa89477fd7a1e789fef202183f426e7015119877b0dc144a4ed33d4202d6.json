{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Tank from './Tank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameArea = styled.div`\n  width: 800px;\n  height: 600px;\n  background: #2c3e50;\n  position: relative;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n`;\n_c = GameArea;\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n`;\n_c2 = GameGrid;\nconst PlayerInfo = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  color: ${props => props.color};\n  font-size: 14px;\n  z-index: 1;\n`;\n_c3 = PlayerInfo;\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n_c4 = Controls;\nconst ControlButton = styled.button`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n_c5 = ControlButton;\nconst playerColors = {\n  1: '#e74c3c',\n  // Kırmızı\n  2: '#3498db',\n  // Mavi\n  3: '#2ecc71',\n  // Yeşil\n  4: '#f1c40f' // Sarı\n};\nconst TankGame = ({\n  playerCount\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    // Oyuncuları başlangıç pozisyonlarına yerleştir\n    const initialPlayers = Array.from({\n      length: playerCount\n    }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: 100 + i * 200,\n        y: 300\n      },\n      rotation: 0,\n      health: 100\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n  const movePlayer = (playerId, direction) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => {\n      if (player.id === playerId) {\n        const speed = 10;\n        let newX = player.position.x;\n        let newY = player.position.y;\n        let newRotation = player.rotation;\n        switch (direction) {\n          case 'up':\n            newY -= speed;\n            newRotation = 0;\n            break;\n          case 'down':\n            newY += speed;\n            newRotation = 180;\n            break;\n          case 'left':\n            newX -= speed;\n            newRotation = 270;\n            break;\n          case 'right':\n            newX += speed;\n            newRotation = 90;\n            break;\n        }\n\n        // Sınırları kontrol et\n        newX = Math.max(0, Math.min(740, newX));\n        newY = Math.max(0, Math.min(540, newY));\n        return {\n          ...player,\n          position: {\n            x: newX,\n            y: newY\n          },\n          rotation: newRotation\n        };\n      }\n      return player;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(GameArea, {\n    children: [/*#__PURE__*/_jsxDEV(GameGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), players.map(player => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlayerInfo, {\n        color: playerColors[player.id],\n        children: [\"Oyuncu \", player.id, \" - Can: \", player.health]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tank, {\n        color: playerColors[player.id],\n        rotation: player.rotation,\n        position: player.position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, player.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[1],\n        onClick: () => movePlayer(1, 'left'),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[1],\n        onClick: () => movePlayer(1, 'up'),\n        children: \"\\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[1],\n        onClick: () => movePlayer(1, 'down'),\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[1],\n        onClick: () => movePlayer(1, 'right'),\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(TankGame, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n_c6 = TankGame;\nexport default TankGame;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"GameArea\");\n$RefreshReg$(_c2, \"GameGrid\");\n$RefreshReg$(_c3, \"PlayerInfo\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"ControlButton\");\n$RefreshReg$(_c6, \"TankGame\");","map":{"version":3,"names":["React","useState","useEffect","styled","Tank","jsxDEV","_jsxDEV","GameArea","div","_c","GameGrid","_c2","PlayerInfo","props","color","_c3","Controls","_c4","ControlButton","button","_c5","playerColors","TankGame","playerCount","_s","players","setPlayers","initialPlayers","Array","from","length","_","i","id","position","x","y","rotation","health","movePlayer","playerId","direction","prevPlayers","map","player","speed","newX","newY","newRotation","Math","max","min","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClick","_c6","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Tank from './Tank';\n\nconst GameArea = styled.div`\n  width: 800px;\n  height: 600px;\n  background: #2c3e50;\n  position: relative;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n`;\n\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n`;\n\nconst PlayerInfo = styled.div<{ color: string }>`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  color: ${props => props.color};\n  font-size: 14px;\n  z-index: 1;\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n\nconst ControlButton = styled.button<{ color: string }>`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst playerColors = {\n  1: '#e74c3c', // Kırmızı\n  2: '#3498db', // Mavi\n  3: '#2ecc71', // Yeşil\n  4: '#f1c40f'  // Sarı\n};\n\ninterface Player {\n  id: number;\n  position: { x: number; y: number };\n  rotation: number;\n  health: number;\n}\n\nconst TankGame: React.FC<{ playerCount: number }> = ({ playerCount }) => {\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    // Oyuncuları başlangıç pozisyonlarına yerleştir\n    const initialPlayers: Player[] = Array.from({ length: playerCount }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: 100 + (i * 200),\n        y: 300\n      },\n      rotation: 0,\n      health: 100\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n\n  const movePlayer = (playerId: number, direction: 'up' | 'down' | 'left' | 'right') => {\n    setPlayers(prevPlayers => \n      prevPlayers.map(player => {\n        if (player.id === playerId) {\n          const speed = 10;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let newRotation = player.rotation;\n\n          switch (direction) {\n            case 'up':\n              newY -= speed;\n              newRotation = 0;\n              break;\n            case 'down':\n              newY += speed;\n              newRotation = 180;\n              break;\n            case 'left':\n              newX -= speed;\n              newRotation = 270;\n              break;\n            case 'right':\n              newX += speed;\n              newRotation = 90;\n              break;\n          }\n\n          // Sınırları kontrol et\n          newX = Math.max(0, Math.min(740, newX));\n          newY = Math.max(0, Math.min(540, newY));\n\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            rotation: newRotation\n          };\n        }\n        return player;\n      })\n    );\n  };\n\n  return (\n    <GameArea>\n      <GameGrid />\n      {players.map(player => (\n        <React.Fragment key={player.id}>\n          <PlayerInfo color={playerColors[player.id as keyof typeof playerColors]}>\n            Oyuncu {player.id} - Can: {player.health}\n          </PlayerInfo>\n          <Tank\n            color={playerColors[player.id as keyof typeof playerColors]}\n            rotation={player.rotation}\n            position={player.position}\n          />\n        </React.Fragment>\n      ))}\n      <Controls>\n        <ControlButton \n          color={playerColors[1]}\n          onClick={() => movePlayer(1, 'left')}\n        >\n          ←\n        </ControlButton>\n        <ControlButton \n          color={playerColors[1]}\n          onClick={() => movePlayer(1, 'up')}\n        >\n          ↑\n        </ControlButton>\n        <ControlButton \n          color={playerColors[1]}\n          onClick={() => movePlayer(1, 'down')}\n        >\n          ↓\n        </ControlButton>\n        <ControlButton \n          color={playerColors[1]}\n          onClick={() => movePlayer(1, 'right')}\n        >\n          →\n        </ControlButton>\n      </Controls>\n    </GameArea>\n  );\n};\n\nexport default TankGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}