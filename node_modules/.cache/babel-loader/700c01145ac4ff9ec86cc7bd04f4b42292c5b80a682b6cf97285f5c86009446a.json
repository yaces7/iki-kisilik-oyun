{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport Tank from './Tank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n_c = GameArea;\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n_c2 = GameGrid;\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\nconst Bullet = styled.div`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  background: #222;\n  border-radius: 50%;\n  box-shadow: 0 0 6px #000a;\n`;\n_c3 = Bullet;\nconst Smoke = styled.div`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  background: #888;\n  border-radius: 50%;\n  opacity: ${props => props.opacity};\n  pointer-events: none;\n`;\n_c4 = Smoke;\nconst HealthBar = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n_c5 = HealthBar;\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\nconst ControlButton = styled.button`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\nconst CornerButton = styled.button`\n  position: absolute;\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  color: #fff;\n  font-size: 2.5rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n  z-index: 10;\n  cursor: pointer;\n  opacity: 0.95;\n  ${props => props.position === 'bottomLeft' && 'left: 30px; bottom: 30px;'}\n  ${props => props.position === 'bottomRight' && 'right: 30px; bottom: 30px;'}\n  ${props => props.position === 'topLeft' && 'left: 30px; top: 30px;'}\n  ${props => props.position === 'topRight' && 'right: 30px; top: 30px;'}\n`;\n_c6 = CornerButton;\nconst playerColors = {\n  1: '#e74c3c',\n  // Kırmızı\n  2: '#3498db',\n  // Mavi\n  3: '#2ecc71',\n  // Yeşil\n  4: '#f1c40f' // Sarı\n};\nconst cornerPositions = ['bottomLeft',\n// 1. oyuncu\n'bottomRight',\n// 2. oyuncu\n'topLeft',\n// 3. oyuncu\n'topRight' // 4. oyuncu\n];\nconst TANK_SIZE = 60;\nconst CANNON_LENGTH = 30;\nconst GRID_SIZE = 80; // Kare boyutu\nconst GRID_COLS = Math.floor(window.innerWidth / GRID_SIZE);\nconst GRID_ROWS = Math.floor(window.innerHeight / GRID_SIZE);\nconst Wall = styled.div`\n  position: absolute;\n  background: #e0e0e0;\n  border: 3px solid #bdbdbd;\n  box-sizing: border-box;\n  border-radius: 4px;\n`;\n_c7 = Wall;\nconst GrassPatch = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background: radial-gradient(circle at 60% 40%, #4caf50 70%, #388e3c 100%);\n  border-radius: 50%;\n  opacity: 0.7;\n`;\nconst CountdownOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n_c8 = CountdownOverlay;\nconst CountdownText = styled.div`\n  color: #fff;\n  font-size: 8rem;\n  font-weight: bold;\n  text-shadow: 0 0 40px #000, 0 0 10px #fff;\n  animation: pop 0.5s;\n  @keyframes pop {\n    0% { transform: scale(0.7); opacity: 0.5; }\n    60% { transform: scale(1.2); opacity: 1; }\n    100% { transform: scale(1); opacity: 1; }\n  }\n`;\n_c9 = CountdownText;\nconst WinOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.7);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n_c0 = WinOverlay;\nconst WinText = styled.div`\n  color: #fff;\n  font-size: 4rem;\n  font-weight: bold;\n  margin-bottom: 2rem;\n  text-shadow: 0 0 30px #000, 0 0 10px #fff;\n`;\n_c1 = WinText;\nconst ScoreTable = styled.div`\n  background: rgba(255,255,255,0.1);\n  border-radius: 12px;\n  padding: 2rem 3rem;\n  color: #fff;\n  font-size: 1.5rem;\n  box-shadow: 0 0 20px #0008;\n`;\n_c10 = ScoreTable;\nconst BULLET_SIZE = 8;\nconst SMOKE_SIZE = 18;\n\n// Labirent için grid tabanlı duvarlar\nfunction generateMaze(cols, rows) {\n  // Basit bir maze algoritması (örnek: her satırda ve sütunda rastgele kısa kenarlı duvarlar)\n  const walls = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      // Yatay duvar\n      if (Math.random() > 0.6 && x < cols - 1) {\n        walls.push({\n          x: x * GRID_SIZE,\n          y: y * GRID_SIZE,\n          w: GRID_SIZE,\n          h: 8\n        });\n      }\n      // Dikey duvar\n      if (Math.random() > 0.6 && y < rows - 1) {\n        walls.push({\n          x: x * GRID_SIZE,\n          y: y * GRID_SIZE,\n          w: 8,\n          h: GRID_SIZE\n        });\n      }\n    }\n  }\n  // Kenar duvarları\n  walls.push({\n    x: 0,\n    y: 0,\n    w: cols * GRID_SIZE,\n    h: 8\n  }); // üst\n  walls.push({\n    x: 0,\n    y: rows * GRID_SIZE - 8,\n    w: cols * GRID_SIZE,\n    h: 8\n  }); // alt\n  walls.push({\n    x: 0,\n    y: 0,\n    w: 8,\n    h: rows * GRID_SIZE\n  }); // sol\n  walls.push({\n    x: cols * GRID_SIZE - 8,\n    y: 0,\n    w: 8,\n    h: rows * GRID_SIZE\n  }); // sağ\n  return walls;\n}\nconst TankGame = ({\n  playerCount,\n  deviceType\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const bulletsRef = useRef(bullets);\n  const [rotating, setRotating] = useState({});\n  const [moving, setMoving] = useState({});\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [walls, setWalls] = useState([]);\n  const [tankSize, setTankSize] = useState(60);\n  const [countdown, setCountdown] = useState(3);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [smoke, setSmoke] = useState([]);\n  const [bulletsToRemove, setBulletsToRemove] = useState([]);\n  const [explosions, setExplosions] = useState([]);\n\n  // Rastgele pozisyon oluşturma fonksiyonu\n  const getRandomPosition = () => {\n    const margin = 100; // Kenarlardan uzaklık\n    return {\n      x: margin + Math.random() * (window.innerWidth - 2 * margin),\n      y: margin + Math.random() * (window.innerHeight - 2 * margin)\n    };\n  };\n\n  // Oyunu başlatma fonksiyonu\n  const initializeGame = useCallback(() => {\n    // Yeni labirent oluştur\n    const maze = generateMaze(GRID_COLS, GRID_ROWS);\n    setWalls(maze);\n\n    // Tank boyutunu ayarla\n    let size = 60;\n    if (maze.length > 60) size = 36;else if (maze.length > 40) size = 44;else if (maze.length > 25) size = 52;\n    setTankSize(size);\n\n    // Oyuncuları rastgele pozisyonlara yerleştir\n    const initialPlayers = Array.from({\n      length: playerCount\n    }, (_, i) => ({\n      id: i + 1,\n      position: getRandomPosition(),\n      rotation: Math.random() * 360,\n      // Rastgele başlangıç rotasyonu\n      health: 3,\n      isMoving: false,\n      alive: true,\n      score: 0\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n\n  // Oyun başladığında ve yeniden başlatıldığında initializeGame'i çağır\n  useEffect(() => {\n    initializeGame();\n  }, [initializeGame]);\n  const movePlayer = useCallback((playerId, direction) => {\n    setPlayers(prevPlayers => {\n      return prevPlayers.map(player => {\n        if (player.id === playerId) {\n          const speed = 2; // Tank hızını yavaşlattık\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let newRotation = player.rotation;\n          switch (direction) {\n            case 'up':\n              newY -= speed;\n              newRotation = 0;\n              break;\n            case 'down':\n              newY += speed;\n              newRotation = 180;\n              break;\n            case 'left':\n              newX -= speed;\n              newRotation = 270;\n              break;\n            case 'right':\n              newX += speed;\n              newRotation = 90;\n              break;\n          }\n\n          // Duvarlarla çarpışma kontrolü\n          const playerRect = {\n            x: newX - tankSize / 2,\n            y: newY - tankSize / 2,\n            w: tankSize,\n            h: tankSize\n          };\n          const hasCollision = walls.some(wall => {\n            return !(playerRect.x + playerRect.w < wall.x || playerRect.x > wall.x + wall.w || playerRect.y + playerRect.h < wall.y || playerRect.y > wall.y + wall.h);\n          });\n          if (hasCollision) {\n            return player;\n          }\n\n          // Ekran sınırları kontrolü\n          newX = Math.max(tankSize / 2, Math.min(window.innerWidth - tankSize / 2, newX));\n          newY = Math.max(tankSize / 2, Math.min(window.innerHeight - tankSize / 2, newY));\n          return {\n            ...player,\n            position: {\n              x: newX,\n              y: newY\n            },\n            rotation: newRotation\n          };\n        }\n        return player;\n      });\n    });\n  }, [tankSize, walls]);\n\n  // Mermi atma fonksiyonu\n  const fireBullet = useCallback(playerId => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n    const speed = 10;\n    const rad = player.rotation * Math.PI / 180;\n    const velocity = {\n      x: Math.cos(rad) * speed,\n      y: Math.sin(rad) * speed\n    };\n    const bullet = {\n      id: Date.now() + Math.random(),\n      playerId,\n      position: {\n        x: player.position.x + tankSize / 2 + Math.cos(rad) * (tankSize / 2 + CANNON_LENGTH) - BULLET_SIZE / 2,\n        y: player.position.y + tankSize / 2 + Math.sin(rad) * (tankSize / 2 + CANNON_LENGTH) - BULLET_SIZE / 2\n      },\n      rotation: player.rotation,\n      bounces: 0,\n      velocity,\n      createdAt: Date.now()\n    };\n    setBullets(prev => [...prev, bullet]);\n  }, [players, tankSize]);\n\n  // Geri sayım başlat\n  useEffect(() => {\n    setCountdown(3);\n    setGameStarted(false);\n  }, [playerCount]);\n  useEffect(() => {\n    let timer;\n    if (countdown !== null) {\n      if (countdown > 0) {\n        timer = setTimeout(() => setCountdown(c => c !== null ? c - 1 : null), 1000);\n      } else if (countdown === 0) {\n        timer = setTimeout(() => {\n          setCountdown(null);\n          setGameStarted(true);\n        }, 800);\n      }\n    }\n    return () => clearTimeout(timer);\n  }, [countdown]);\n  useEffect(() => {\n    bulletsRef.current = bullets;\n  }, [bullets]);\n\n  // Mermiler 6 kez sekince kaybolsun ve çarpışanlar silinsin, ayrıca 5 saniye sonra silinsin\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        const now = Date.now();\n        const currentBullets = bulletsRef.current;\n        return currentBullets.map(bullet => {\n          let newX = bullet.position.x + bullet.velocity.x;\n          let newY = bullet.position.y + bullet.velocity.y;\n          let newVelocity = {\n            ...bullet.velocity\n          };\n          let newRotation = bullet.rotation;\n          let bounces = bullet.bounces;\n          // Kenarlara çarpınca sekme\n          if (newX < 0 || newX > window.innerWidth - BULLET_SIZE) {\n            newVelocity.x = -newVelocity.x;\n            bounces++;\n          }\n          if (newY < 0 || newY > window.innerHeight - BULLET_SIZE) {\n            newVelocity.y = -newVelocity.y;\n            bounces++;\n          }\n          for (const wall of walls) {\n            if (newX + BULLET_SIZE > wall.x && newX < wall.x + wall.w && newY + BULLET_SIZE > wall.y && newY < wall.y + wall.h) {\n              // Yatay veya dikey duvara göre velocity'yi ters çevir\n              if (wall.w > wall.h) {\n                newVelocity.y = -newVelocity.y;\n              } else {\n                newVelocity.x = -newVelocity.x;\n              }\n              bounces++;\n              break;\n            }\n          }\n          if (bounces >= 6 || now - bullet.createdAt > 5000) return null;\n          return {\n            ...bullet,\n            position: {\n              x: newX,\n              y: newY\n            },\n            velocity: newVelocity,\n            rotation: newRotation,\n            bounces\n          };\n        }).filter(b => b !== null).filter(bullet => !bulletsToRemove.includes(bullet.id));\n      });\n      setBulletsToRemove([]);\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, [walls, gameStarted, bulletsToRemove]);\n\n  // Tank hareket ediyorsa arkasında duman efekti bırak\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSmoke(prevSmoke => {\n        let newSmoke = [...prevSmoke];\n        players.forEach(player => {\n          if (player.isMoving && player.alive) {\n            const rad = player.rotation * Math.PI / 180;\n            // Duman tankın arkasında çıksın\n            const x = player.position.x + tankSize / 2 - Math.cos(rad) * (tankSize / 2 + 8) - SMOKE_SIZE / 2;\n            const y = player.position.y + tankSize / 2 - Math.sin(rad) * (tankSize / 2 + 8) - SMOKE_SIZE / 2;\n            newSmoke.push({\n              id: Date.now() + Math.random(),\n              x,\n              y,\n              opacity: 0.7,\n              size: SMOKE_SIZE\n            });\n          }\n        });\n        // Dumanları yavaşça sil\n        newSmoke = newSmoke.map(s => ({\n          ...s,\n          opacity: s.opacity - 0.04\n        })).filter(s => s.opacity > 0);\n        return newSmoke;\n      });\n    }, 40);\n    return () => clearInterval(interval);\n  }, [players, tankSize]);\n\n  // Başlangıçta tanklar dönüyor, hareket etmiyor\n  useEffect(() => {\n    const initialRotating = {};\n    const initialMoving = {};\n    for (let i = 1; i <= playerCount; i++) {\n      initialRotating[i] = true;\n      initialMoving[i] = false;\n    }\n    setRotating(initialRotating);\n    setMoving(initialMoving);\n  }, [playerCount]);\n\n  // Tanklar sadece rotating true ise döner (daha hızlı dönsün)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (rotating[player.id]) {\n          return {\n            ...player,\n            rotation: player.rotation + 6 // Daha hızlı dönsün\n          };\n        }\n        return player;\n      }));\n    }, 30);\n    return () => clearInterval(interval);\n  }, [rotating]);\n\n  // Tanklar sadece moving true ise ileri gider\n  useEffect(() => {\n    if (!gameStarted) return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (moving[player.id]) {\n          const speed = 6;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let rad = player.rotation * Math.PI / 180;\n          const nextX = newX + Math.cos(rad) * speed;\n          const nextY = newY + Math.sin(rad) * speed;\n          const tankRect = {\n            x: nextX,\n            y: nextY,\n            w: tankSize,\n            h: tankSize\n          };\n          const collides = walls.some(wall => tankRect.x < wall.x + wall.w && tankRect.x + tankRect.w > wall.x && tankRect.y < wall.y + wall.h && tankRect.y + tankRect.h > wall.y);\n          if (!collides) {\n            newX = Math.max(0, Math.min(window.innerWidth - tankSize, nextX));\n            newY = Math.max(0, Math.min(window.innerHeight - tankSize, nextY));\n            return {\n              ...player,\n              position: {\n                x: newX,\n                y: newY\n              },\n              isMoving: true\n            };\n          } else {\n            return {\n              ...player,\n              isMoving: false\n            };\n          }\n        }\n        return {\n          ...player,\n          isMoving: false\n        };\n      }));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [moving, tankSize, walls, gameStarted]);\n\n  // Mermi-tank çarpışması: friendly fire aktif, patlama efekti\n  useEffect(() => {\n    if (!gameStarted) return;\n    setPlayers(prevPlayers => {\n      let updatedPlayers = [...prevPlayers];\n      let removeBullets = [];\n      bullets.forEach(bullet => {\n        for (let i = 0; i < updatedPlayers.length; i++) {\n          const player = updatedPlayers[i];\n          if (!player.alive) continue;\n          const tankRect = {\n            x: player.position.x,\n            y: player.position.y,\n            w: tankSize,\n            h: tankSize\n          };\n          const bulletRect = {\n            x: bullet.position.x,\n            y: bullet.position.y,\n            w: BULLET_SIZE,\n            h: BULLET_SIZE\n          };\n          const hit = tankRect.x < bulletRect.x + bulletRect.w && tankRect.x + tankRect.w > bulletRect.x && tankRect.y < bulletRect.y + bulletRect.h && tankRect.y + tankRect.h > bulletRect.y;\n          if (hit) {\n            updatedPlayers[i] = {\n              ...player,\n              alive: false\n            };\n            setExplosions(explosions => [...explosions, {\n              x: player.position.x,\n              y: player.position.y,\n              id: player.id\n            }]);\n            removeBullets.push(bullet.id);\n          }\n        }\n      });\n      setBulletsToRemove(removeBullets);\n      // Kazananı kontrol et\n      const alivePlayers = updatedPlayers.filter(p => p.alive);\n      if (alivePlayers.length === 1 && winner === null) {\n        setWinner(alivePlayers[0].id);\n        updatedPlayers = updatedPlayers.map(p => p.id === alivePlayers[0].id ? {\n          ...p,\n          score: p.score + 1\n        } : p);\n      }\n      return updatedPlayers;\n    });\n  }, [bullets, gameStarted, tankSize, winner]);\n\n  // Butona tıklama: ateş et (mermi namlunun ucundan, doğru yöne çıkacak)\n  const handleCornerButtonClick = playerId => {\n    if (!gameStarted) return;\n    fireBullet(playerId);\n  };\n\n  // Butona basılı tutma: hareket başlar, dönme durur\n  const handleCornerButtonDown = playerId => {\n    setRotating(r => ({\n      ...r,\n      [playerId]: false\n    }));\n    setMoving(m => ({\n      ...m,\n      [playerId]: true\n    }));\n  };\n\n  // Butondan el çekilince: hareket durur, dönme başlar\n  const handleCornerButtonUp = playerId => {\n    setRotating(r => ({\n      ...r,\n      [playerId]: true\n    }));\n    setMoving(m => ({\n      ...m,\n      [playerId]: false\n    }));\n  };\n\n  // Klavye kontrolleri: bilgisayar için dönme ve hareket mantığı\n  useEffect(() => {\n    if (deviceType !== 'computer') return;\n    const keyMap = {\n      'w': {\n        playerId: 1,\n        action: 'move'\n      },\n      'e': {\n        playerId: 1,\n        action: 'fire'\n      },\n      't': {\n        playerId: 2,\n        action: 'move'\n      },\n      'y': {\n        playerId: 2,\n        action: 'fire'\n      },\n      'i': {\n        playerId: 3,\n        action: 'move'\n      },\n      'o': {\n        playerId: 3,\n        action: 'fire'\n      },\n      'up': {\n        playerId: 4,\n        action: 'move'\n      },\n      'shift': {\n        playerId: 4,\n        action: 'fire'\n      }\n    };\n    const handleKeyDown = e => {\n      const key = e.key.toLowerCase();\n      const mapped = keyMap[key];\n      if (mapped) {\n        if (mapped.action === 'move') {\n          setRotating(r => ({\n            ...r,\n            [mapped.playerId]: false\n          }));\n          setMoving(m => ({\n            ...m,\n            [mapped.playerId]: true\n          }));\n        } else if (mapped.action === 'fire') {\n          handleCornerButtonClick(mapped.playerId);\n        }\n      }\n    };\n    const handleKeyUp = e => {\n      const key = e.key.toLowerCase();\n      const mapped = keyMap[key];\n      if (mapped && mapped.action === 'move') {\n        setRotating(r => ({\n          ...r,\n          [mapped.playerId]: true\n        }));\n        setMoving(m => ({\n          ...m,\n          [mapped.playerId]: false\n        }));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [deviceType]);\n\n  // Buton simgesi tank olsun, yoksa simgesiz bırak\n  const TankButtonIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"36\",\n    height: \"24\",\n    viewBox: \"0 0 36 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"4\",\n      y: \"8\",\n      width: \"20\",\n      height: \"8\",\n      rx: \"3\",\n      fill: \"#333\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"24\",\n      y: \"11\",\n      width: \"8\",\n      height: \"2\",\n      rx: \"1\",\n      fill: \"#333\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"10\",\n      cy: \"20\",\n      r: \"3\",\n      fill: \"#333\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"20\",\n      cy: \"20\",\n      r: \"3\",\n      fill: \"#333\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 730,\n    columnNumber: 5\n  }, this);\n\n  // Oyun yeniden başlatma fonksiyonu\n  const handleRestart = () => {\n    setWinner(null);\n    setCountdown(3);\n    setGameStarted(false);\n    initializeGame();\n    setBullets([]);\n  };\n\n  // Patlama efekti (basit bir animasyon)\n  const Explosion = ({\n    x,\n    y\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: tankSize,\n      height: tankSize,\n      pointerEvents: 'none',\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: tankSize,\n      height: tankSize,\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: tankSize / 2,\n        cy: tankSize / 2,\n        r: tankSize / 2 - 2,\n        fill: \"orange\",\n        fillOpacity: \"0.7\",\n        children: [/*#__PURE__*/_jsxDEV(\"animate\", {\n          attributeName: \"r\",\n          from: tankSize / 2 - 2,\n          to: tankSize,\n          dur: \"0.5s\",\n          fill: \"freeze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"animate\", {\n          attributeName: \"opacity\",\n          from: \"0.7\",\n          to: \"0\",\n          dur: \"0.5s\",\n          fill: \"freeze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 749,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GameArea, {\n    children: [countdown !== null && /*#__PURE__*/_jsxDEV(CountdownOverlay, {\n      children: /*#__PURE__*/_jsxDEV(CountdownText, {\n        children: countdown === 0 ? 'Başla!' : countdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 9\n    }, this), winner !== null && /*#__PURE__*/_jsxDEV(WinOverlay, {\n      children: [/*#__PURE__*/_jsxDEV(WinText, {\n        children: [\"Kazanan: Oyuncu \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScoreTable, {\n        children: players.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: playerColors[p.id]\n          },\n          children: [\"Oyuncu \", p.id, \": \", p.score, \" puan\"]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 32,\n          fontSize: 24,\n          padding: '12px 32px',\n          borderRadius: 8,\n          border: 'none',\n          background: '#fff',\n          color: '#222',\n          fontWeight: 'bold',\n          cursor: 'pointer'\n        },\n        onClick: handleRestart,\n        children: \"Tekrar Oyna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GameGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 7\n    }, this), walls.map((w, i) => /*#__PURE__*/_jsxDEV(Wall, {\n      style: {\n        left: w.x,\n        top: w.y,\n        width: w.w,\n        height: w.h\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 9\n    }, this)), players.map(player => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HealthBar, {\n        health: player.health,\n        color: playerColors[player.id],\n        style: {\n          left: player.position.x + 10,\n          top: player.position.y - 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tank, {\n        color: playerColors[player.id],\n        rotation: player.rotation,\n        position: player.position,\n        isMoving: player.isMoving,\n        size: tankSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 11\n      }, this)]\n    }, player.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 9\n    }, this)), smoke.map(s => /*#__PURE__*/_jsxDEV(Smoke, {\n      size: s.size,\n      opacity: s.opacity,\n      style: {\n        left: s.x,\n        top: s.y\n      }\n    }, s.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 9\n    }, this)), bullets.map(bullet => /*#__PURE__*/_jsxDEV(Bullet, {\n      size: BULLET_SIZE,\n      style: {\n        left: bullet.position.x,\n        top: bullet.position.y\n      }\n    }, bullet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 9\n    }, this)), deviceType === 'phone' && players.map((player, idx) => /*#__PURE__*/_jsxDEV(CornerButton, {\n      color: playerColors[player.id],\n      position: cornerPositions[idx],\n      onClick: () => handleCornerButtonClick(player.id),\n      onTouchStart: () => handleCornerButtonDown(player.id),\n      onTouchEnd: () => handleCornerButtonUp(player.id),\n      onMouseDown: () => handleCornerButtonDown(player.id),\n      onMouseUp: () => handleCornerButtonUp(player.id),\n      onMouseLeave: () => handleCornerButtonUp(player.id),\n      children: /*#__PURE__*/_jsxDEV(TankButtonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this)\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 9\n    }, this)), explosions.map(e => /*#__PURE__*/_jsxDEV(Explosion, {\n      x: e.x,\n      y: e.y\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 28\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 771,\n    columnNumber: 5\n  }, this);\n};\n_s(TankGame, \"ihmFAn4HOv246VZyJVpLR027U4s=\");\n_c11 = TankGame;\nexport default TankGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11;\n$RefreshReg$(_c, \"GameArea\");\n$RefreshReg$(_c2, \"GameGrid\");\n$RefreshReg$(_c3, \"Bullet\");\n$RefreshReg$(_c4, \"Smoke\");\n$RefreshReg$(_c5, \"HealthBar\");\n$RefreshReg$(_c6, \"CornerButton\");\n$RefreshReg$(_c7, \"Wall\");\n$RefreshReg$(_c8, \"CountdownOverlay\");\n$RefreshReg$(_c9, \"CountdownText\");\n$RefreshReg$(_c0, \"WinOverlay\");\n$RefreshReg$(_c1, \"WinText\");\n$RefreshReg$(_c10, \"ScoreTable\");\n$RefreshReg$(_c11, \"TankGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","styled","Tank","jsxDEV","_jsxDEV","GameArea","div","_c","GameGrid","_c2","Grass","Bullet","props","size","_c3","Smoke","opacity","_c4","HealthBar","health","color","_c5","Controls","ControlButton","button","FireButton","CornerButton","position","_c6","playerColors","cornerPositions","TANK_SIZE","CANNON_LENGTH","GRID_SIZE","GRID_COLS","Math","floor","window","innerWidth","GRID_ROWS","innerHeight","Wall","_c7","GrassPatch","CountdownOverlay","_c8","CountdownText","_c9","WinOverlay","_c0","WinText","_c1","ScoreTable","_c10","BULLET_SIZE","SMOKE_SIZE","generateMaze","cols","rows","walls","y","x","random","push","w","h","TankGame","playerCount","deviceType","_s","players","setPlayers","bullets","setBullets","bulletsRef","rotating","setRotating","moving","setMoving","activePlayer","setActivePlayer","setWalls","tankSize","setTankSize","countdown","setCountdown","gameStarted","setGameStarted","winner","setWinner","smoke","setSmoke","bulletsToRemove","setBulletsToRemove","explosions","setExplosions","getRandomPosition","margin","initializeGame","maze","length","initialPlayers","Array","from","_","i","id","rotation","isMoving","alive","score","movePlayer","playerId","direction","prevPlayers","map","player","speed","newX","newY","newRotation","playerRect","hasCollision","some","wall","max","min","fireBullet","find","p","rad","PI","velocity","cos","sin","bullet","Date","now","bounces","createdAt","prev","timer","setTimeout","c","clearTimeout","current","bulletInterval","setInterval","prevBullets","currentBullets","newVelocity","filter","b","includes","clearInterval","interval","prevSmoke","newSmoke","forEach","s","initialRotating","initialMoving","nextX","nextY","tankRect","collides","updatedPlayers","removeBullets","bulletRect","hit","alivePlayers","handleCornerButtonClick","handleCornerButtonDown","r","m","handleCornerButtonUp","keyMap","action","handleKeyDown","e","key","toLowerCase","mapped","handleKeyUp","addEventListener","removeEventListener","TankButtonIcon","width","height","viewBox","fill","xmlns","children","rx","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","handleRestart","Explosion","style","left","top","pointerEvents","zIndex","display","alignItems","justifyContent","fillOpacity","attributeName","to","dur","marginTop","fontSize","padding","borderRadius","border","background","fontWeight","cursor","onClick","Fragment","idx","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","_c11","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Tank from './Tank';\n\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n\nconst Bullet = styled.div<{ size: number }>`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  background: #222;\n  border-radius: 50%;\n  box-shadow: 0 0 6px #000a;\n`;\n\nconst Smoke = styled.div<{ size: number; opacity: number }>`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  background: #888;\n  border-radius: 50%;\n  opacity: ${props => props.opacity};\n  pointer-events: none;\n`;\n\nconst HealthBar = styled.div<{ health: number; color: string }>`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n\nconst ControlButton = styled.button<{ color: string }>`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\n\nconst CornerButton = styled.button<{ color: string; position: string }>`\n  position: absolute;\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  color: #fff;\n  font-size: 2.5rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n  z-index: 10;\n  cursor: pointer;\n  opacity: 0.95;\n  ${props => props.position === 'bottomLeft' && 'left: 30px; bottom: 30px;'}\n  ${props => props.position === 'bottomRight' && 'right: 30px; bottom: 30px;'}\n  ${props => props.position === 'topLeft' && 'left: 30px; top: 30px;'}\n  ${props => props.position === 'topRight' && 'right: 30px; top: 30px;'}\n`;\n\nconst playerColors: Record<1 | 2 | 3 | 4, string> = {\n  1: '#e74c3c', // Kırmızı\n  2: '#3498db', // Mavi\n  3: '#2ecc71', // Yeşil\n  4: '#f1c40f'  // Sarı\n};\n\ninterface Player {\n  id: number;\n  position: { x: number; y: number };\n  rotation: number;\n  health: number;\n  isMoving: boolean;\n  alive: boolean;\n  score: number;\n}\n\ninterface Bullet {\n  id: number;\n  playerId: number;\n  position: { x: number; y: number };\n  rotation: number;\n  bounces: number;\n  velocity: { x: number; y: number };\n  createdAt: number;\n}\n\ninterface SmokeParticle {\n  id: number;\n  x: number;\n  y: number;\n  opacity: number;\n  size: number;\n}\n\nconst cornerPositions = [\n  'bottomLeft', // 1. oyuncu\n  'bottomRight', // 2. oyuncu\n  'topLeft', // 3. oyuncu\n  'topRight' // 4. oyuncu\n] as const;\n\ntype CornerPosition = typeof cornerPositions[number];\n\nconst TANK_SIZE = 60;\nconst CANNON_LENGTH = 30;\nconst GRID_SIZE = 80; // Kare boyutu\nconst GRID_COLS = Math.floor(window.innerWidth / GRID_SIZE);\nconst GRID_ROWS = Math.floor(window.innerHeight / GRID_SIZE);\n\nconst Wall = styled.div`\n  position: absolute;\n  background: #e0e0e0;\n  border: 3px solid #bdbdbd;\n  box-sizing: border-box;\n  border-radius: 4px;\n`;\n\nconst GrassPatch = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background: radial-gradient(circle at 60% 40%, #4caf50 70%, #388e3c 100%);\n  border-radius: 50%;\n  opacity: 0.7;\n`;\n\nconst CountdownOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst CountdownText = styled.div`\n  color: #fff;\n  font-size: 8rem;\n  font-weight: bold;\n  text-shadow: 0 0 40px #000, 0 0 10px #fff;\n  animation: pop 0.5s;\n  @keyframes pop {\n    0% { transform: scale(0.7); opacity: 0.5; }\n    60% { transform: scale(1.2); opacity: 1; }\n    100% { transform: scale(1); opacity: 1; }\n  }\n`;\n\nconst WinOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.7);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst WinText = styled.div`\n  color: #fff;\n  font-size: 4rem;\n  font-weight: bold;\n  margin-bottom: 2rem;\n  text-shadow: 0 0 30px #000, 0 0 10px #fff;\n`;\n\nconst ScoreTable = styled.div`\n  background: rgba(255,255,255,0.1);\n  border-radius: 12px;\n  padding: 2rem 3rem;\n  color: #fff;\n  font-size: 1.5rem;\n  box-shadow: 0 0 20px #0008;\n`;\n\nconst BULLET_SIZE = 8;\nconst SMOKE_SIZE = 18;\n\n// Labirent için grid tabanlı duvarlar\nfunction generateMaze(cols: number, rows: number) {\n  // Basit bir maze algoritması (örnek: her satırda ve sütunda rastgele kısa kenarlı duvarlar)\n  const walls: { x: number; y: number; w: number; h: number }[] = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      // Yatay duvar\n      if (Math.random() > 0.6 && x < cols - 1) {\n        walls.push({\n          x: x * GRID_SIZE,\n          y: y * GRID_SIZE,\n          w: GRID_SIZE,\n          h: 8\n        });\n      }\n      // Dikey duvar\n      if (Math.random() > 0.6 && y < rows - 1) {\n        walls.push({\n          x: x * GRID_SIZE,\n          y: y * GRID_SIZE,\n          w: 8,\n          h: GRID_SIZE\n        });\n      }\n    }\n  }\n  // Kenar duvarları\n  walls.push({ x: 0, y: 0, w: cols * GRID_SIZE, h: 8 }); // üst\n  walls.push({ x: 0, y: rows * GRID_SIZE - 8, w: cols * GRID_SIZE, h: 8 }); // alt\n  walls.push({ x: 0, y: 0, w: 8, h: rows * GRID_SIZE }); // sol\n  walls.push({ x: cols * GRID_SIZE - 8, y: 0, w: 8, h: rows * GRID_SIZE }); // sağ\n  return walls;\n}\n\nconst TankGame: React.FC<{ \n  playerCount: number;\n  deviceType: 'computer' | 'phone';\n}> = ({ playerCount, deviceType }) => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [bullets, setBullets] = useState<Bullet[]>([]);\n  const bulletsRef = useRef<Bullet[]>(bullets);\n  const [rotating, setRotating] = useState<{ [id: number]: boolean }>({});\n  const [moving, setMoving] = useState<{ [id: number]: boolean }>({});\n  const [activePlayer, setActivePlayer] = useState<1 | 2 | 3 | 4>(1);\n  const [walls, setWalls] = useState<{ x: number; y: number; w: number; h: number }[]>([]);\n  const [tankSize, setTankSize] = useState<number>(60);\n  const [countdown, setCountdown] = useState<number | null>(3);\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [winner, setWinner] = useState<number | null>(null);\n  const [smoke, setSmoke] = useState<SmokeParticle[]>([]);\n  const [bulletsToRemove, setBulletsToRemove] = useState<number[]>([]);\n  const [explosions, setExplosions] = useState<{x: number, y: number, id: number}[]>([]);\n\n  // Rastgele pozisyon oluşturma fonksiyonu\n  const getRandomPosition = () => {\n    const margin = 100; // Kenarlardan uzaklık\n    return {\n      x: margin + Math.random() * (window.innerWidth - 2 * margin),\n      y: margin + Math.random() * (window.innerHeight - 2 * margin)\n    };\n  };\n\n  // Oyunu başlatma fonksiyonu\n  const initializeGame = useCallback(() => {\n    // Yeni labirent oluştur\n    const maze = generateMaze(GRID_COLS, GRID_ROWS);\n    setWalls(maze);\n    \n    // Tank boyutunu ayarla\n    let size = 60;\n    if (maze.length > 60) size = 36;\n    else if (maze.length > 40) size = 44;\n    else if (maze.length > 25) size = 52;\n    setTankSize(size);\n\n    // Oyuncuları rastgele pozisyonlara yerleştir\n    const initialPlayers: Player[] = Array.from({ length: playerCount }, (_, i) => ({\n      id: i + 1,\n      position: getRandomPosition(),\n      rotation: Math.random() * 360, // Rastgele başlangıç rotasyonu\n      health: 3,\n      isMoving: false,\n      alive: true,\n      score: 0\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n\n  // Oyun başladığında ve yeniden başlatıldığında initializeGame'i çağır\n  useEffect(() => {\n    initializeGame();\n  }, [initializeGame]);\n\n  const movePlayer = useCallback((playerId: number, direction: 'up' | 'down' | 'left' | 'right') => {\n    setPlayers(prevPlayers => {\n      return prevPlayers.map(player => {\n        if (player.id === playerId) {\n          const speed = 2; // Tank hızını yavaşlattık\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let newRotation = player.rotation;\n\n          switch (direction) {\n            case 'up':\n              newY -= speed;\n              newRotation = 0;\n              break;\n            case 'down':\n              newY += speed;\n              newRotation = 180;\n              break;\n            case 'left':\n              newX -= speed;\n              newRotation = 270;\n              break;\n            case 'right':\n              newX += speed;\n              newRotation = 90;\n              break;\n          }\n\n          // Duvarlarla çarpışma kontrolü\n          const playerRect = {\n            x: newX - tankSize / 2,\n            y: newY - tankSize / 2,\n            w: tankSize,\n            h: tankSize\n          };\n\n          const hasCollision = walls.some(wall => {\n            return !(playerRect.x + playerRect.w < wall.x ||\n              playerRect.x > wall.x + wall.w ||\n              playerRect.y + playerRect.h < wall.y ||\n              playerRect.y > wall.y + wall.h);\n          });\n\n          if (hasCollision) {\n            return player;\n          }\n\n          // Ekran sınırları kontrolü\n          newX = Math.max(tankSize / 2, Math.min(window.innerWidth - tankSize / 2, newX));\n          newY = Math.max(tankSize / 2, Math.min(window.innerHeight - tankSize / 2, newY));\n\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            rotation: newRotation\n          };\n        }\n        return player;\n      });\n    });\n  }, [tankSize, walls]);\n\n  // Mermi atma fonksiyonu\n  const fireBullet = useCallback((playerId: number) => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n\n    const speed = 10;\n    const rad = player.rotation * Math.PI / 180;\n    const velocity = {\n      x: Math.cos(rad) * speed,\n      y: Math.sin(rad) * speed\n    };\n    const bullet: Bullet = {\n      id: Date.now() + Math.random(),\n      playerId,\n      position: {\n        x: player.position.x + tankSize / 2 + Math.cos(rad) * (tankSize / 2 + CANNON_LENGTH) - BULLET_SIZE / 2,\n        y: player.position.y + tankSize / 2 + Math.sin(rad) * (tankSize / 2 + CANNON_LENGTH) - BULLET_SIZE / 2\n      },\n      rotation: player.rotation,\n      bounces: 0,\n      velocity,\n      createdAt: Date.now()\n    };\n    setBullets(prev => [...prev, bullet]);\n  }, [players, tankSize]);\n\n  // Geri sayım başlat\n  useEffect(() => {\n    setCountdown(3);\n    setGameStarted(false);\n  }, [playerCount]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (countdown !== null) {\n      if (countdown > 0) {\n        timer = setTimeout(() => setCountdown((c) => (c !== null ? c - 1 : null)), 1000);\n      } else if (countdown === 0) {\n        timer = setTimeout(() => {\n          setCountdown(null);\n          setGameStarted(true);\n        }, 800);\n      }\n    }\n    return () => clearTimeout(timer);\n  }, [countdown]);\n\n  useEffect(() => { bulletsRef.current = bullets; }, [bullets]);\n\n  // Mermiler 6 kez sekince kaybolsun ve çarpışanlar silinsin, ayrıca 5 saniye sonra silinsin\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        const now = Date.now();\n        const currentBullets = bulletsRef.current;\n        return currentBullets\n          .map(bullet => {\n            let newX = bullet.position.x + bullet.velocity.x;\n            let newY = bullet.position.y + bullet.velocity.y;\n            let newVelocity = { ...bullet.velocity };\n            let newRotation = bullet.rotation;\n            let bounces = bullet.bounces;\n            // Kenarlara çarpınca sekme\n            if (newX < 0 || newX > window.innerWidth - BULLET_SIZE) {\n              newVelocity.x = -newVelocity.x;\n              bounces++;\n            }\n            if (newY < 0 || newY > window.innerHeight - BULLET_SIZE) {\n              newVelocity.y = -newVelocity.y;\n              bounces++;\n            }\n            for (const wall of walls) {\n              if (\n                newX + BULLET_SIZE > wall.x && newX < wall.x + wall.w &&\n                newY + BULLET_SIZE > wall.y && newY < wall.y + wall.h\n              ) {\n                // Yatay veya dikey duvara göre velocity'yi ters çevir\n                if (wall.w > wall.h) {\n                  newVelocity.y = -newVelocity.y;\n                } else {\n                  newVelocity.x = -newVelocity.x;\n                }\n                bounces++;\n                break;\n              }\n            }\n            if (bounces >= 6 || now - bullet.createdAt > 5000) return null;\n            return {\n              ...bullet,\n              position: { x: newX, y: newY },\n              velocity: newVelocity,\n              rotation: newRotation,\n              bounces\n            };\n          })\n          .filter((b): b is Bullet => b !== null)\n          .filter(bullet => !bulletsToRemove.includes(bullet.id));\n      });\n      setBulletsToRemove([]);\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, [walls, gameStarted, bulletsToRemove]);\n\n  // Tank hareket ediyorsa arkasında duman efekti bırak\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSmoke(prevSmoke => {\n        let newSmoke = [...prevSmoke];\n        players.forEach(player => {\n          if (player.isMoving && player.alive) {\n            const rad = player.rotation * Math.PI / 180;\n            // Duman tankın arkasında çıksın\n            const x = player.position.x + tankSize / 2 - Math.cos(rad) * (tankSize / 2 + 8) - SMOKE_SIZE / 2;\n            const y = player.position.y + tankSize / 2 - Math.sin(rad) * (tankSize / 2 + 8) - SMOKE_SIZE / 2;\n            newSmoke.push({\n              id: Date.now() + Math.random(),\n              x,\n              y,\n              opacity: 0.7,\n              size: SMOKE_SIZE\n            });\n          }\n        });\n        // Dumanları yavaşça sil\n        newSmoke = newSmoke.map(s => ({ ...s, opacity: s.opacity - 0.04 })).filter(s => s.opacity > 0);\n        return newSmoke;\n      });\n    }, 40);\n    return () => clearInterval(interval);\n  }, [players, tankSize]);\n\n  // Başlangıçta tanklar dönüyor, hareket etmiyor\n  useEffect(() => {\n    const initialRotating: { [id: number]: boolean } = {};\n    const initialMoving: { [id: number]: boolean } = {};\n    for (let i = 1; i <= playerCount; i++) {\n      initialRotating[i] = true;\n      initialMoving[i] = false;\n    }\n    setRotating(initialRotating);\n    setMoving(initialMoving);\n  }, [playerCount]);\n\n  // Tanklar sadece rotating true ise döner (daha hızlı dönsün)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (rotating[player.id]) {\n          return {\n            ...player,\n            rotation: player.rotation + 6 // Daha hızlı dönsün\n          };\n        }\n        return player;\n      }));\n    }, 30);\n    return () => clearInterval(interval);\n  }, [rotating]);\n\n  // Tanklar sadece moving true ise ileri gider\n  useEffect(() => {\n    if (!gameStarted) return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (moving[player.id]) {\n          const speed = 6;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let rad = player.rotation * Math.PI / 180;\n          const nextX = newX + Math.cos(rad) * speed;\n          const nextY = newY + Math.sin(rad) * speed;\n          const tankRect = {\n            x: nextX,\n            y: nextY,\n            w: tankSize,\n            h: tankSize\n          };\n          const collides = walls.some(wall =>\n            tankRect.x < wall.x + wall.w &&\n            tankRect.x + tankRect.w > wall.x &&\n            tankRect.y < wall.y + wall.h &&\n            tankRect.y + tankRect.h > wall.y\n          );\n          if (!collides) {\n            newX = Math.max(0, Math.min(window.innerWidth - tankSize, nextX));\n            newY = Math.max(0, Math.min(window.innerHeight - tankSize, nextY));\n            return {\n              ...player,\n              position: { x: newX, y: newY },\n              isMoving: true\n            };\n          } else {\n            return { ...player, isMoving: false };\n          }\n        }\n        return { ...player, isMoving: false };\n      }));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [moving, tankSize, walls, gameStarted]);\n\n  // Mermi-tank çarpışması: friendly fire aktif, patlama efekti\n  useEffect(() => {\n    if (!gameStarted) return;\n    setPlayers(prevPlayers => {\n      let updatedPlayers = [...prevPlayers];\n      let removeBullets: number[] = [];\n      bullets.forEach(bullet => {\n        for (let i = 0; i < updatedPlayers.length; i++) {\n          const player = updatedPlayers[i];\n          if (!player.alive) continue;\n          const tankRect = {\n            x: player.position.x,\n            y: player.position.y,\n            w: tankSize,\n            h: tankSize\n          };\n          const bulletRect = {\n            x: bullet.position.x,\n            y: bullet.position.y,\n            w: BULLET_SIZE,\n            h: BULLET_SIZE\n          };\n          const hit =\n            tankRect.x < bulletRect.x + bulletRect.w &&\n            tankRect.x + tankRect.w > bulletRect.x &&\n            tankRect.y < bulletRect.y + bulletRect.h &&\n            tankRect.y + tankRect.h > bulletRect.y;\n          if (hit) {\n            updatedPlayers[i] = {\n              ...player,\n              alive: false\n            };\n            setExplosions(explosions => [...explosions, {x: player.position.x, y: player.position.y, id: player.id}]);\n            removeBullets.push(bullet.id);\n          }\n        }\n      });\n      setBulletsToRemove(removeBullets);\n      // Kazananı kontrol et\n      const alivePlayers = updatedPlayers.filter(p => p.alive);\n      if (alivePlayers.length === 1 && winner === null) {\n        setWinner(alivePlayers[0].id);\n        updatedPlayers = updatedPlayers.map(p =>\n          p.id === alivePlayers[0].id ? { ...p, score: p.score + 1 } : p\n        );\n      }\n      return updatedPlayers;\n    });\n  }, [bullets, gameStarted, tankSize, winner]);\n\n  // Butona tıklama: ateş et (mermi namlunun ucundan, doğru yöne çıkacak)\n  const handleCornerButtonClick = (playerId: number) => {\n    if (!gameStarted) return;\n    fireBullet(playerId);\n  };\n\n  // Butona basılı tutma: hareket başlar, dönme durur\n  const handleCornerButtonDown = (playerId: number) => {\n    setRotating(r => ({ ...r, [playerId]: false }));\n    setMoving(m => ({ ...m, [playerId]: true }));\n  };\n\n  // Butondan el çekilince: hareket durur, dönme başlar\n  const handleCornerButtonUp = (playerId: number) => {\n    setRotating(r => ({ ...r, [playerId]: true }));\n    setMoving(m => ({ ...m, [playerId]: false }));\n  };\n\n  // Klavye kontrolleri: bilgisayar için dönme ve hareket mantığı\n  useEffect(() => {\n    if (deviceType !== 'computer') return;\n    const keyMap: { [key: string]: { playerId: number; action: 'move' | 'fire' } } = {\n      'w': { playerId: 1, action: 'move' },\n      'e': { playerId: 1, action: 'fire' },\n      't': { playerId: 2, action: 'move' },\n      'y': { playerId: 2, action: 'fire' },\n      'i': { playerId: 3, action: 'move' },\n      'o': { playerId: 3, action: 'fire' },\n      'up': { playerId: 4, action: 'move' },\n      'shift': { playerId: 4, action: 'fire' }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const key = e.key.toLowerCase();\n      const mapped = keyMap[key];\n      if (mapped) {\n        if (mapped.action === 'move') {\n          setRotating(r => ({ ...r, [mapped.playerId]: false }));\n          setMoving(m => ({ ...m, [mapped.playerId]: true }));\n        } else if (mapped.action === 'fire') {\n          handleCornerButtonClick(mapped.playerId);\n        }\n      }\n    };\n    const handleKeyUp = (e: KeyboardEvent) => {\n      const key = e.key.toLowerCase();\n      const mapped = keyMap[key];\n      if (mapped && mapped.action === 'move') {\n        setRotating(r => ({ ...r, [mapped.playerId]: true }));\n        setMoving(m => ({ ...m, [mapped.playerId]: false }));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [deviceType]);\n\n  // Buton simgesi tank olsun, yoksa simgesiz bırak\n  const TankButtonIcon = () => (\n    <svg width=\"36\" height=\"24\" viewBox=\"0 0 36 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"4\" y=\"8\" width=\"20\" height=\"8\" rx=\"3\" fill=\"#333\" />\n      <rect x=\"24\" y=\"11\" width=\"8\" height=\"2\" rx=\"1\" fill=\"#333\" />\n      <circle cx=\"10\" cy=\"20\" r=\"3\" fill=\"#333\" />\n      <circle cx=\"20\" cy=\"20\" r=\"3\" fill=\"#333\" />\n    </svg>\n  );\n\n  // Oyun yeniden başlatma fonksiyonu\n  const handleRestart = () => {\n    setWinner(null);\n    setCountdown(3);\n    setGameStarted(false);\n    initializeGame();\n    setBullets([]);\n  };\n\n  // Patlama efekti (basit bir animasyon)\n  const Explosion = ({x, y}: {x: number, y: number}) => (\n    <div style={{\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: tankSize,\n      height: tankSize,\n      pointerEvents: 'none',\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }}>\n      <svg width={tankSize} height={tankSize}>\n        <circle cx={tankSize/2} cy={tankSize/2} r={tankSize/2-2} fill=\"orange\" fillOpacity=\"0.7\">\n          <animate attributeName=\"r\" from={tankSize/2-2} to={tankSize} dur=\"0.5s\" fill=\"freeze\" />\n          <animate attributeName=\"opacity\" from=\"0.7\" to=\"0\" dur=\"0.5s\" fill=\"freeze\" />\n        </circle>\n      </svg>\n    </div>\n  );\n\n  return (\n    <GameArea>\n      {countdown !== null && (\n        <CountdownOverlay>\n          <CountdownText>\n            {countdown === 0 ? 'Başla!' : countdown}\n          </CountdownText>\n        </CountdownOverlay>\n      )}\n      {winner !== null && (\n        <WinOverlay>\n          <WinText>Kazanan: Oyuncu {winner}</WinText>\n          <ScoreTable>\n            {players.map(p => (\n              <div key={p.id} style={{ color: playerColors[p.id as 1 | 2 | 3 | 4] }}>\n                Oyuncu {p.id}: {p.score} puan\n              </div>\n            ))}\n          </ScoreTable>\n          <button style={{ marginTop: 32, fontSize: 24, padding: '12px 32px', borderRadius: 8, border: 'none', background: '#fff', color: '#222', fontWeight: 'bold', cursor: 'pointer' }} onClick={handleRestart}>\n            Tekrar Oyna\n          </button>\n        </WinOverlay>\n      )}\n      <GameGrid />\n      {/* Duvarlar */}\n      {walls.map((w, i) => (\n        <Wall key={i} style={{ left: w.x, top: w.y, width: w.w, height: w.h }} />\n      ))}\n      {players.map(player => (\n        <React.Fragment key={player.id}>\n          <HealthBar \n            health={player.health}\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            style={{\n              left: player.position.x + 10,\n              top: player.position.y - 10\n            }}\n          />\n          <Tank\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            rotation={player.rotation}\n            position={player.position}\n            isMoving={player.isMoving}\n            size={tankSize}\n          />\n        </React.Fragment>\n      ))}\n      {/* Duman Efekti */}\n      {smoke.map(s => (\n        <Smoke key={s.id} size={s.size} opacity={s.opacity} style={{ left: s.x, top: s.y }} />\n      ))}\n      {/* Mermiler */}\n      {bullets.map(bullet => (\n        <Bullet\n          key={bullet.id}\n          size={BULLET_SIZE}\n          style={{\n            left: bullet.position.x,\n            top: bullet.position.y\n          }}\n        />\n      ))}\n      {deviceType === 'phone' && players.map((player, idx) => (\n        <CornerButton\n          key={player.id}\n          color={playerColors[player.id as 1 | 2 | 3 | 4]}\n          position={cornerPositions[idx]}\n          onClick={() => handleCornerButtonClick(player.id)}\n          onTouchStart={() => handleCornerButtonDown(player.id)}\n          onTouchEnd={() => handleCornerButtonUp(player.id)}\n          onMouseDown={() => handleCornerButtonDown(player.id)}\n          onMouseUp={() => handleCornerButtonUp(player.id)}\n          onMouseLeave={() => handleCornerButtonUp(player.id)}\n        >\n          <TankButtonIcon />\n        </CornerButton>\n      ))}\n      {/* Patlama efektleri */}\n      {explosions.map(e => <Explosion key={e.id} x={e.x} y={e.y} />)}\n    </GameArea>\n  );\n};\n\nexport default TankGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAqB,mBAAmB;AACrD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,QAAQ;AAQd,MAAMG,QAAQ,GAAGP,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GATID,QAAQ;AAWd,MAAME,KAAK,GAAGT,MAAM,CAACK,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,MAAM,GAAGV,MAAM,CAACK,GAAqB;AAC3C;AACA,WAAWM,KAAK,IAAIA,KAAK,CAACC,IAAI;AAC9B,YAAYD,KAAK,IAAIA,KAAK,CAACC,IAAI;AAC/B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIH,MAAM;AASZ,MAAMI,KAAK,GAAGd,MAAM,CAACK,GAAsC;AAC3D;AACA,WAAWM,KAAK,IAAIA,KAAK,CAACC,IAAI;AAC9B,YAAYD,KAAK,IAAIA,KAAK,CAACC,IAAI;AAC/B;AACA;AACA,aAAaD,KAAK,IAAIA,KAAK,CAACI,OAAO;AACnC;AACA,CAAC;AAACC,GAAA,GARIF,KAAK;AAUX,MAAMG,SAAS,GAAGjB,MAAM,CAACK,GAAsC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaM,KAAK,IAAIA,KAAK,CAACO,MAAM;AAClC;AACA,kBAAkBP,KAAK,IAAIA,KAAK,CAACQ,KAAK;AACtC;AACA;AACA,CAAC;AAACC,GAAA,GAlBIH,SAAS;AAoBf,MAAMI,QAAQ,GAAGrB,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMiB,aAAa,GAAGtB,MAAM,CAACuB,MAAyB;AACtD,gBAAgBZ,KAAK,IAAIA,KAAK,CAACQ,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,UAAU,GAAGxB,MAAM,CAACsB,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMG,YAAY,GAAGzB,MAAM,CAACuB,MAA2C;AACvE;AACA;AACA;AACA;AACA,gBAAgBZ,KAAK,IAAIA,KAAK,CAACQ,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIR,KAAK,IAAIA,KAAK,CAACe,QAAQ,KAAK,YAAY,IAAI,2BAA2B;AAC3E,IAAIf,KAAK,IAAIA,KAAK,CAACe,QAAQ,KAAK,aAAa,IAAI,4BAA4B;AAC7E,IAAIf,KAAK,IAAIA,KAAK,CAACe,QAAQ,KAAK,SAAS,IAAI,wBAAwB;AACrE,IAAIf,KAAK,IAAIA,KAAK,CAACe,QAAQ,KAAK,UAAU,IAAI,yBAAyB;AACvE,CAAC;AAACC,GAAA,GApBIF,YAAY;AAsBlB,MAAMG,YAA2C,GAAG;EAClD,CAAC,EAAE,SAAS;EAAE;EACd,CAAC,EAAE,SAAS;EAAE;EACd,CAAC,EAAE,SAAS;EAAE;EACd,CAAC,EAAE,SAAS,CAAE;AAChB,CAAC;AA8BD,MAAMC,eAAe,GAAG,CACtB,YAAY;AAAE;AACd,aAAa;AAAE;AACf,SAAS;AAAE;AACX,UAAU,CAAC;AAAA,CACH;AAIV,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,aAAa,GAAG,EAAE;AACxB,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;AACtB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU,GAAGL,SAAS,CAAC;AAC3D,MAAMM,SAAS,GAAGJ,IAAI,CAACC,KAAK,CAACC,MAAM,CAACG,WAAW,GAAGP,SAAS,CAAC;AAE5D,MAAMQ,IAAI,GAAGxC,MAAM,CAACK,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoC,GAAA,GANID,IAAI;AAQV,MAAME,UAAU,GAAG1C,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMsC,gBAAgB,GAAG3C,MAAM,CAACK,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuC,GAAA,GAXID,gBAAgB;AAatB,MAAME,aAAa,GAAG7C,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,GAAA,GAXID,aAAa;AAanB,MAAME,UAAU,GAAG/C,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC2C,GAAA,GAZID,UAAU;AAchB,MAAME,OAAO,GAAGjD,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6C,GAAA,GANID,OAAO;AAQb,MAAME,UAAU,GAAGnD,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+C,IAAA,GAPID,UAAU;AAShB,MAAME,WAAW,GAAG,CAAC;AACrB,MAAMC,UAAU,GAAG,EAAE;;AAErB;AACA,SAASC,YAAYA,CAACC,IAAY,EAAEC,IAAY,EAAE;EAChD;EACA,MAAMC,KAAuD,GAAG,EAAE;EAClE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,EAAEE,CAAC,EAAE,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,EAAEI,CAAC,EAAE,EAAE;MAC7B;MACA,IAAI1B,IAAI,CAAC2B,MAAM,CAAC,CAAC,GAAG,GAAG,IAAID,CAAC,GAAGJ,IAAI,GAAG,CAAC,EAAE;QACvCE,KAAK,CAACI,IAAI,CAAC;UACTF,CAAC,EAAEA,CAAC,GAAG5B,SAAS;UAChB2B,CAAC,EAAEA,CAAC,GAAG3B,SAAS;UAChB+B,CAAC,EAAE/B,SAAS;UACZgC,CAAC,EAAE;QACL,CAAC,CAAC;MACJ;MACA;MACA,IAAI9B,IAAI,CAAC2B,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIF,CAAC,GAAGF,IAAI,GAAG,CAAC,EAAE;QACvCC,KAAK,CAACI,IAAI,CAAC;UACTF,CAAC,EAAEA,CAAC,GAAG5B,SAAS;UAChB2B,CAAC,EAAEA,CAAC,GAAG3B,SAAS;UAChB+B,CAAC,EAAE,CAAC;UACJC,CAAC,EAAEhC;QACL,CAAC,CAAC;MACJ;IACF;EACF;EACA;EACA0B,KAAK,CAACI,IAAI,CAAC;IAAEF,CAAC,EAAE,CAAC;IAAED,CAAC,EAAE,CAAC;IAAEI,CAAC,EAAEP,IAAI,GAAGxB,SAAS;IAAEgC,CAAC,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC;EACvDN,KAAK,CAACI,IAAI,CAAC;IAAEF,CAAC,EAAE,CAAC;IAAED,CAAC,EAAEF,IAAI,GAAGzB,SAAS,GAAG,CAAC;IAAE+B,CAAC,EAAEP,IAAI,GAAGxB,SAAS;IAAEgC,CAAC,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC;EAC1EN,KAAK,CAACI,IAAI,CAAC;IAAEF,CAAC,EAAE,CAAC;IAAED,CAAC,EAAE,CAAC;IAAEI,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAEP,IAAI,GAAGzB;EAAU,CAAC,CAAC,CAAC,CAAC;EACvD0B,KAAK,CAACI,IAAI,CAAC;IAAEF,CAAC,EAAEJ,IAAI,GAAGxB,SAAS,GAAG,CAAC;IAAE2B,CAAC,EAAE,CAAC;IAAEI,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAEP,IAAI,GAAGzB;EAAU,CAAC,CAAC,CAAC,CAAC;EAC1E,OAAO0B,KAAK;AACd;AAEA,MAAMO,QAGJ,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC2E,OAAO,EAAEC,UAAU,CAAC,GAAG5E,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM6E,UAAU,GAAG1E,MAAM,CAAWwE,OAAO,CAAC;EAC5C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAG/E,QAAQ,CAA4B,CAAC,CAAC,CAAC;EACvE,MAAM,CAACgF,MAAM,EAAEC,SAAS,CAAC,GAAGjF,QAAQ,CAA4B,CAAC,CAAC,CAAC;EACnE,MAAM,CAACkF,YAAY,EAAEC,eAAe,CAAC,GAAGnF,QAAQ,CAAgB,CAAC,CAAC;EAClE,MAAM,CAAC8D,KAAK,EAAEsB,QAAQ,CAAC,GAAGpF,QAAQ,CAAmD,EAAE,CAAC;EACxF,MAAM,CAACqF,QAAQ,EAAEC,WAAW,CAAC,GAAGtF,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACuF,SAAS,EAAEC,YAAY,CAAC,GAAGxF,QAAQ,CAAgB,CAAC,CAAC;EAC5D,MAAM,CAACyF,WAAW,EAAEC,cAAc,CAAC,GAAG1F,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAAC2F,MAAM,EAAEC,SAAS,CAAC,GAAG5F,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAAC6F,KAAK,EAAEC,QAAQ,CAAC,GAAG9F,QAAQ,CAAkB,EAAE,CAAC;EACvD,MAAM,CAAC+F,eAAe,EAAEC,kBAAkB,CAAC,GAAGhG,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACiG,UAAU,EAAEC,aAAa,CAAC,GAAGlG,QAAQ,CAAuC,EAAE,CAAC;;EAEtF;EACA,MAAMmG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;IACpB,OAAO;MACLpC,CAAC,EAAEoC,MAAM,GAAG9D,IAAI,CAAC2B,MAAM,CAAC,CAAC,IAAIzB,MAAM,CAACC,UAAU,GAAG,CAAC,GAAG2D,MAAM,CAAC;MAC5DrC,CAAC,EAAEqC,MAAM,GAAG9D,IAAI,CAAC2B,MAAM,CAAC,CAAC,IAAIzB,MAAM,CAACG,WAAW,GAAG,CAAC,GAAGyD,MAAM;IAC9D,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGnG,WAAW,CAAC,MAAM;IACvC;IACA,MAAMoG,IAAI,GAAG3C,YAAY,CAACtB,SAAS,EAAEK,SAAS,CAAC;IAC/C0C,QAAQ,CAACkB,IAAI,CAAC;;IAEd;IACA,IAAItF,IAAI,GAAG,EAAE;IACb,IAAIsF,IAAI,CAACC,MAAM,GAAG,EAAE,EAAEvF,IAAI,GAAG,EAAE,CAAC,KAC3B,IAAIsF,IAAI,CAACC,MAAM,GAAG,EAAE,EAAEvF,IAAI,GAAG,EAAE,CAAC,KAChC,IAAIsF,IAAI,CAACC,MAAM,GAAG,EAAE,EAAEvF,IAAI,GAAG,EAAE;IACpCsE,WAAW,CAACtE,IAAI,CAAC;;IAEjB;IACA,MAAMwF,cAAwB,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEH,MAAM,EAAEjC;IAAY,CAAC,EAAE,CAACqC,CAAC,EAAEC,CAAC,MAAM;MAC9EC,EAAE,EAAED,CAAC,GAAG,CAAC;MACT9E,QAAQ,EAAEqE,iBAAiB,CAAC,CAAC;MAC7BW,QAAQ,EAAExE,IAAI,CAAC2B,MAAM,CAAC,CAAC,GAAG,GAAG;MAAE;MAC/B3C,MAAM,EAAE,CAAC;MACTyF,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE;IACT,CAAC,CAAC,CAAC;IACHvC,UAAU,CAAC8B,cAAc,CAAC;EAC5B,CAAC,EAAE,CAAClC,WAAW,CAAC,CAAC;;EAEjB;EACArE,SAAS,CAAC,MAAM;IACdoG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMa,UAAU,GAAGhH,WAAW,CAAC,CAACiH,QAAgB,EAAEC,SAA2C,KAAK;IAChG1C,UAAU,CAAC2C,WAAW,IAAI;MACxB,OAAOA,WAAW,CAACC,GAAG,CAACC,MAAM,IAAI;QAC/B,IAAIA,MAAM,CAACV,EAAE,KAAKM,QAAQ,EAAE;UAC1B,MAAMK,KAAK,GAAG,CAAC,CAAC,CAAC;UACjB,IAAIC,IAAI,GAAGF,MAAM,CAACzF,QAAQ,CAACkC,CAAC;UAC5B,IAAI0D,IAAI,GAAGH,MAAM,CAACzF,QAAQ,CAACiC,CAAC;UAC5B,IAAI4D,WAAW,GAAGJ,MAAM,CAACT,QAAQ;UAEjC,QAAQM,SAAS;YACf,KAAK,IAAI;cACPM,IAAI,IAAIF,KAAK;cACbG,WAAW,GAAG,CAAC;cACf;YACF,KAAK,MAAM;cACTD,IAAI,IAAIF,KAAK;cACbG,WAAW,GAAG,GAAG;cACjB;YACF,KAAK,MAAM;cACTF,IAAI,IAAID,KAAK;cACbG,WAAW,GAAG,GAAG;cACjB;YACF,KAAK,OAAO;cACVF,IAAI,IAAID,KAAK;cACbG,WAAW,GAAG,EAAE;cAChB;UACJ;;UAEA;UACA,MAAMC,UAAU,GAAG;YACjB5D,CAAC,EAAEyD,IAAI,GAAGpC,QAAQ,GAAG,CAAC;YACtBtB,CAAC,EAAE2D,IAAI,GAAGrC,QAAQ,GAAG,CAAC;YACtBlB,CAAC,EAAEkB,QAAQ;YACXjB,CAAC,EAAEiB;UACL,CAAC;UAED,MAAMwC,YAAY,GAAG/D,KAAK,CAACgE,IAAI,CAACC,IAAI,IAAI;YACtC,OAAO,EAAEH,UAAU,CAAC5D,CAAC,GAAG4D,UAAU,CAACzD,CAAC,GAAG4D,IAAI,CAAC/D,CAAC,IAC3C4D,UAAU,CAAC5D,CAAC,GAAG+D,IAAI,CAAC/D,CAAC,GAAG+D,IAAI,CAAC5D,CAAC,IAC9ByD,UAAU,CAAC7D,CAAC,GAAG6D,UAAU,CAACxD,CAAC,GAAG2D,IAAI,CAAChE,CAAC,IACpC6D,UAAU,CAAC7D,CAAC,GAAGgE,IAAI,CAAChE,CAAC,GAAGgE,IAAI,CAAC3D,CAAC,CAAC;UACnC,CAAC,CAAC;UAEF,IAAIyD,YAAY,EAAE;YAChB,OAAON,MAAM;UACf;;UAEA;UACAE,IAAI,GAAGnF,IAAI,CAAC0F,GAAG,CAAC3C,QAAQ,GAAG,CAAC,EAAE/C,IAAI,CAAC2F,GAAG,CAACzF,MAAM,CAACC,UAAU,GAAG4C,QAAQ,GAAG,CAAC,EAAEoC,IAAI,CAAC,CAAC;UAC/EC,IAAI,GAAGpF,IAAI,CAAC0F,GAAG,CAAC3C,QAAQ,GAAG,CAAC,EAAE/C,IAAI,CAAC2F,GAAG,CAACzF,MAAM,CAACG,WAAW,GAAG0C,QAAQ,GAAG,CAAC,EAAEqC,IAAI,CAAC,CAAC;UAEhF,OAAO;YACL,GAAGH,MAAM;YACTzF,QAAQ,EAAE;cAAEkC,CAAC,EAAEyD,IAAI;cAAE1D,CAAC,EAAE2D;YAAK,CAAC;YAC9BZ,QAAQ,EAAEa;UACZ,CAAC;QACH;QACA,OAAOJ,MAAM;MACf,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAAClC,QAAQ,EAAEvB,KAAK,CAAC,CAAC;;EAErB;EACA,MAAMoE,UAAU,GAAGhI,WAAW,CAAEiH,QAAgB,IAAK;IACnD,MAAMI,MAAM,GAAG9C,OAAO,CAAC0D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAKM,QAAQ,CAAC;IACnD,IAAI,CAACI,MAAM,EAAE;IAEb,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMa,GAAG,GAAGd,MAAM,CAACT,QAAQ,GAAGxE,IAAI,CAACgG,EAAE,GAAG,GAAG;IAC3C,MAAMC,QAAQ,GAAG;MACfvE,CAAC,EAAE1B,IAAI,CAACkG,GAAG,CAACH,GAAG,CAAC,GAAGb,KAAK;MACxBzD,CAAC,EAAEzB,IAAI,CAACmG,GAAG,CAACJ,GAAG,CAAC,GAAGb;IACrB,CAAC;IACD,MAAMkB,MAAc,GAAG;MACrB7B,EAAE,EAAE8B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGtG,IAAI,CAAC2B,MAAM,CAAC,CAAC;MAC9BkD,QAAQ;MACRrF,QAAQ,EAAE;QACRkC,CAAC,EAAEuD,MAAM,CAACzF,QAAQ,CAACkC,CAAC,GAAGqB,QAAQ,GAAG,CAAC,GAAG/C,IAAI,CAACkG,GAAG,CAACH,GAAG,CAAC,IAAIhD,QAAQ,GAAG,CAAC,GAAGlD,aAAa,CAAC,GAAGsB,WAAW,GAAG,CAAC;QACtGM,CAAC,EAAEwD,MAAM,CAACzF,QAAQ,CAACiC,CAAC,GAAGsB,QAAQ,GAAG,CAAC,GAAG/C,IAAI,CAACmG,GAAG,CAACJ,GAAG,CAAC,IAAIhD,QAAQ,GAAG,CAAC,GAAGlD,aAAa,CAAC,GAAGsB,WAAW,GAAG;MACvG,CAAC;MACDqD,QAAQ,EAAES,MAAM,CAACT,QAAQ;MACzB+B,OAAO,EAAE,CAAC;MACVN,QAAQ;MACRO,SAAS,EAAEH,IAAI,CAACC,GAAG,CAAC;IACtB,CAAC;IACDhE,UAAU,CAACmE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,MAAM,CAAC,CAAC;EACvC,CAAC,EAAE,CAACjE,OAAO,EAAEY,QAAQ,CAAC,CAAC;;EAEvB;EACApF,SAAS,CAAC,MAAM;IACduF,YAAY,CAAC,CAAC,CAAC;IACfE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACpB,WAAW,CAAC,CAAC;EAEjBrE,SAAS,CAAC,MAAM;IACd,IAAI+I,KAAqB;IACzB,IAAIzD,SAAS,KAAK,IAAI,EAAE;MACtB,IAAIA,SAAS,GAAG,CAAC,EAAE;QACjByD,KAAK,GAAGC,UAAU,CAAC,MAAMzD,YAAY,CAAE0D,CAAC,IAAMA,CAAC,KAAK,IAAI,GAAGA,CAAC,GAAG,CAAC,GAAG,IAAK,CAAC,EAAE,IAAI,CAAC;MAClF,CAAC,MAAM,IAAI3D,SAAS,KAAK,CAAC,EAAE;QAC1ByD,KAAK,GAAGC,UAAU,CAAC,MAAM;UACvBzD,YAAY,CAAC,IAAI,CAAC;UAClBE,cAAc,CAAC,IAAI,CAAC;QACtB,CAAC,EAAE,GAAG,CAAC;MACT;IACF;IACA,OAAO,MAAMyD,YAAY,CAACH,KAAK,CAAC;EAClC,CAAC,EAAE,CAACzD,SAAS,CAAC,CAAC;EAEftF,SAAS,CAAC,MAAM;IAAE4E,UAAU,CAACuE,OAAO,GAAGzE,OAAO;EAAE,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAE7D;EACA1E,SAAS,CAAC,MAAM;IACd,MAAMoJ,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC1E,UAAU,CAAC2E,WAAW,IAAI;QACxB,MAAMX,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,MAAMY,cAAc,GAAG3E,UAAU,CAACuE,OAAO;QACzC,OAAOI,cAAc,CAClBlC,GAAG,CAACoB,MAAM,IAAI;UACb,IAAIjB,IAAI,GAAGiB,MAAM,CAAC5G,QAAQ,CAACkC,CAAC,GAAG0E,MAAM,CAACH,QAAQ,CAACvE,CAAC;UAChD,IAAI0D,IAAI,GAAGgB,MAAM,CAAC5G,QAAQ,CAACiC,CAAC,GAAG2E,MAAM,CAACH,QAAQ,CAACxE,CAAC;UAChD,IAAI0F,WAAW,GAAG;YAAE,GAAGf,MAAM,CAACH;UAAS,CAAC;UACxC,IAAIZ,WAAW,GAAGe,MAAM,CAAC5B,QAAQ;UACjC,IAAI+B,OAAO,GAAGH,MAAM,CAACG,OAAO;UAC5B;UACA,IAAIpB,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGjF,MAAM,CAACC,UAAU,GAAGgB,WAAW,EAAE;YACtDgG,WAAW,CAACzF,CAAC,GAAG,CAACyF,WAAW,CAACzF,CAAC;YAC9B6E,OAAO,EAAE;UACX;UACA,IAAInB,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGlF,MAAM,CAACG,WAAW,GAAGc,WAAW,EAAE;YACvDgG,WAAW,CAAC1F,CAAC,GAAG,CAAC0F,WAAW,CAAC1F,CAAC;YAC9B8E,OAAO,EAAE;UACX;UACA,KAAK,MAAMd,IAAI,IAAIjE,KAAK,EAAE;YACxB,IACE2D,IAAI,GAAGhE,WAAW,GAAGsE,IAAI,CAAC/D,CAAC,IAAIyD,IAAI,GAAGM,IAAI,CAAC/D,CAAC,GAAG+D,IAAI,CAAC5D,CAAC,IACrDuD,IAAI,GAAGjE,WAAW,GAAGsE,IAAI,CAAChE,CAAC,IAAI2D,IAAI,GAAGK,IAAI,CAAChE,CAAC,GAAGgE,IAAI,CAAC3D,CAAC,EACrD;cACA;cACA,IAAI2D,IAAI,CAAC5D,CAAC,GAAG4D,IAAI,CAAC3D,CAAC,EAAE;gBACnBqF,WAAW,CAAC1F,CAAC,GAAG,CAAC0F,WAAW,CAAC1F,CAAC;cAChC,CAAC,MAAM;gBACL0F,WAAW,CAACzF,CAAC,GAAG,CAACyF,WAAW,CAACzF,CAAC;cAChC;cACA6E,OAAO,EAAE;cACT;YACF;UACF;UACA,IAAIA,OAAO,IAAI,CAAC,IAAID,GAAG,GAAGF,MAAM,CAACI,SAAS,GAAG,IAAI,EAAE,OAAO,IAAI;UAC9D,OAAO;YACL,GAAGJ,MAAM;YACT5G,QAAQ,EAAE;cAAEkC,CAAC,EAAEyD,IAAI;cAAE1D,CAAC,EAAE2D;YAAK,CAAC;YAC9Ba,QAAQ,EAAEkB,WAAW;YACrB3C,QAAQ,EAAEa,WAAW;YACrBkB;UACF,CAAC;QACH,CAAC,CAAC,CACDa,MAAM,CAAEC,CAAC,IAAkBA,CAAC,KAAK,IAAI,CAAC,CACtCD,MAAM,CAAChB,MAAM,IAAI,CAAC3C,eAAe,CAAC6D,QAAQ,CAAClB,MAAM,CAAC7B,EAAE,CAAC,CAAC;MAC3D,CAAC,CAAC;MACFb,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAM6D,aAAa,CAACR,cAAc,CAAC;EAC5C,CAAC,EAAE,CAACvF,KAAK,EAAE2B,WAAW,EAAEM,eAAe,CAAC,CAAC;;EAEzC;EACA9F,SAAS,CAAC,MAAM;IACd,MAAM6J,QAAQ,GAAGR,WAAW,CAAC,MAAM;MACjCxD,QAAQ,CAACiE,SAAS,IAAI;QACpB,IAAIC,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC;QAC7BtF,OAAO,CAACwF,OAAO,CAAC1C,MAAM,IAAI;UACxB,IAAIA,MAAM,CAACR,QAAQ,IAAIQ,MAAM,CAACP,KAAK,EAAE;YACnC,MAAMqB,GAAG,GAAGd,MAAM,CAACT,QAAQ,GAAGxE,IAAI,CAACgG,EAAE,GAAG,GAAG;YAC3C;YACA,MAAMtE,CAAC,GAAGuD,MAAM,CAACzF,QAAQ,CAACkC,CAAC,GAAGqB,QAAQ,GAAG,CAAC,GAAG/C,IAAI,CAACkG,GAAG,CAACH,GAAG,CAAC,IAAIhD,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG3B,UAAU,GAAG,CAAC;YAChG,MAAMK,CAAC,GAAGwD,MAAM,CAACzF,QAAQ,CAACiC,CAAC,GAAGsB,QAAQ,GAAG,CAAC,GAAG/C,IAAI,CAACmG,GAAG,CAACJ,GAAG,CAAC,IAAIhD,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG3B,UAAU,GAAG,CAAC;YAChGsG,QAAQ,CAAC9F,IAAI,CAAC;cACZ2C,EAAE,EAAE8B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGtG,IAAI,CAAC2B,MAAM,CAAC,CAAC;cAC9BD,CAAC;cACDD,CAAC;cACD5C,OAAO,EAAE,GAAG;cACZH,IAAI,EAAE0C;YACR,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;QACF;QACAsG,QAAQ,GAAGA,QAAQ,CAAC1C,GAAG,CAAC4C,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE/I,OAAO,EAAE+I,CAAC,CAAC/I,OAAO,GAAG;QAAK,CAAC,CAAC,CAAC,CAACuI,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAAC/I,OAAO,GAAG,CAAC,CAAC;QAC9F,OAAO6I,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMH,aAAa,CAACC,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACrF,OAAO,EAAEY,QAAQ,CAAC,CAAC;;EAEvB;EACApF,SAAS,CAAC,MAAM;IACd,MAAMkK,eAA0C,GAAG,CAAC,CAAC;IACrD,MAAMC,aAAwC,GAAG,CAAC,CAAC;IACnD,KAAK,IAAIxD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAItC,WAAW,EAAEsC,CAAC,EAAE,EAAE;MACrCuD,eAAe,CAACvD,CAAC,CAAC,GAAG,IAAI;MACzBwD,aAAa,CAACxD,CAAC,CAAC,GAAG,KAAK;IAC1B;IACA7B,WAAW,CAACoF,eAAe,CAAC;IAC5BlF,SAAS,CAACmF,aAAa,CAAC;EAC1B,CAAC,EAAE,CAAC9F,WAAW,CAAC,CAAC;;EAEjB;EACArE,SAAS,CAAC,MAAM;IACd,MAAM6J,QAAQ,GAAGR,WAAW,CAAC,MAAM;MACjC5E,UAAU,CAAC2C,WAAW,IAAIA,WAAW,CAACC,GAAG,CAACC,MAAM,IAAI;QAClD,IAAIzC,QAAQ,CAACyC,MAAM,CAACV,EAAE,CAAC,EAAE;UACvB,OAAO;YACL,GAAGU,MAAM;YACTT,QAAQ,EAAES,MAAM,CAACT,QAAQ,GAAG,CAAC,CAAC;UAChC,CAAC;QACH;QACA,OAAOS,MAAM;MACf,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMsC,aAAa,CAACC,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAChF,QAAQ,CAAC,CAAC;;EAEd;EACA7E,SAAS,CAAC,MAAM;IACd,IAAI,CAACwF,WAAW,EAAE;IAClB,MAAMqE,QAAQ,GAAGR,WAAW,CAAC,MAAM;MACjC5E,UAAU,CAAC2C,WAAW,IAAIA,WAAW,CAACC,GAAG,CAACC,MAAM,IAAI;QAClD,IAAIvC,MAAM,CAACuC,MAAM,CAACV,EAAE,CAAC,EAAE;UACrB,MAAMW,KAAK,GAAG,CAAC;UACf,IAAIC,IAAI,GAAGF,MAAM,CAACzF,QAAQ,CAACkC,CAAC;UAC5B,IAAI0D,IAAI,GAAGH,MAAM,CAACzF,QAAQ,CAACiC,CAAC;UAC5B,IAAIsE,GAAG,GAAGd,MAAM,CAACT,QAAQ,GAAGxE,IAAI,CAACgG,EAAE,GAAG,GAAG;UACzC,MAAM+B,KAAK,GAAG5C,IAAI,GAAGnF,IAAI,CAACkG,GAAG,CAACH,GAAG,CAAC,GAAGb,KAAK;UAC1C,MAAM8C,KAAK,GAAG5C,IAAI,GAAGpF,IAAI,CAACmG,GAAG,CAACJ,GAAG,CAAC,GAAGb,KAAK;UAC1C,MAAM+C,QAAQ,GAAG;YACfvG,CAAC,EAAEqG,KAAK;YACRtG,CAAC,EAAEuG,KAAK;YACRnG,CAAC,EAAEkB,QAAQ;YACXjB,CAAC,EAAEiB;UACL,CAAC;UACD,MAAMmF,QAAQ,GAAG1G,KAAK,CAACgE,IAAI,CAACC,IAAI,IAC9BwC,QAAQ,CAACvG,CAAC,GAAG+D,IAAI,CAAC/D,CAAC,GAAG+D,IAAI,CAAC5D,CAAC,IAC5BoG,QAAQ,CAACvG,CAAC,GAAGuG,QAAQ,CAACpG,CAAC,GAAG4D,IAAI,CAAC/D,CAAC,IAChCuG,QAAQ,CAACxG,CAAC,GAAGgE,IAAI,CAAChE,CAAC,GAAGgE,IAAI,CAAC3D,CAAC,IAC5BmG,QAAQ,CAACxG,CAAC,GAAGwG,QAAQ,CAACnG,CAAC,GAAG2D,IAAI,CAAChE,CACjC,CAAC;UACD,IAAI,CAACyG,QAAQ,EAAE;YACb/C,IAAI,GAAGnF,IAAI,CAAC0F,GAAG,CAAC,CAAC,EAAE1F,IAAI,CAAC2F,GAAG,CAACzF,MAAM,CAACC,UAAU,GAAG4C,QAAQ,EAAEgF,KAAK,CAAC,CAAC;YACjE3C,IAAI,GAAGpF,IAAI,CAAC0F,GAAG,CAAC,CAAC,EAAE1F,IAAI,CAAC2F,GAAG,CAACzF,MAAM,CAACG,WAAW,GAAG0C,QAAQ,EAAEiF,KAAK,CAAC,CAAC;YAClE,OAAO;cACL,GAAG/C,MAAM;cACTzF,QAAQ,EAAE;gBAAEkC,CAAC,EAAEyD,IAAI;gBAAE1D,CAAC,EAAE2D;cAAK,CAAC;cAC9BX,QAAQ,EAAE;YACZ,CAAC;UACH,CAAC,MAAM;YACL,OAAO;cAAE,GAAGQ,MAAM;cAAER,QAAQ,EAAE;YAAM,CAAC;UACvC;QACF;QACA,OAAO;UAAE,GAAGQ,MAAM;UAAER,QAAQ,EAAE;QAAM,CAAC;MACvC,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAM8C,aAAa,CAACC,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAC9E,MAAM,EAAEK,QAAQ,EAAEvB,KAAK,EAAE2B,WAAW,CAAC,CAAC;;EAE1C;EACAxF,SAAS,CAAC,MAAM;IACd,IAAI,CAACwF,WAAW,EAAE;IAClBf,UAAU,CAAC2C,WAAW,IAAI;MACxB,IAAIoD,cAAc,GAAG,CAAC,GAAGpD,WAAW,CAAC;MACrC,IAAIqD,aAAuB,GAAG,EAAE;MAChC/F,OAAO,CAACsF,OAAO,CAACvB,MAAM,IAAI;QACxB,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6D,cAAc,CAAClE,MAAM,EAAEK,CAAC,EAAE,EAAE;UAC9C,MAAMW,MAAM,GAAGkD,cAAc,CAAC7D,CAAC,CAAC;UAChC,IAAI,CAACW,MAAM,CAACP,KAAK,EAAE;UACnB,MAAMuD,QAAQ,GAAG;YACfvG,CAAC,EAAEuD,MAAM,CAACzF,QAAQ,CAACkC,CAAC;YACpBD,CAAC,EAAEwD,MAAM,CAACzF,QAAQ,CAACiC,CAAC;YACpBI,CAAC,EAAEkB,QAAQ;YACXjB,CAAC,EAAEiB;UACL,CAAC;UACD,MAAMsF,UAAU,GAAG;YACjB3G,CAAC,EAAE0E,MAAM,CAAC5G,QAAQ,CAACkC,CAAC;YACpBD,CAAC,EAAE2E,MAAM,CAAC5G,QAAQ,CAACiC,CAAC;YACpBI,CAAC,EAAEV,WAAW;YACdW,CAAC,EAAEX;UACL,CAAC;UACD,MAAMmH,GAAG,GACPL,QAAQ,CAACvG,CAAC,GAAG2G,UAAU,CAAC3G,CAAC,GAAG2G,UAAU,CAACxG,CAAC,IACxCoG,QAAQ,CAACvG,CAAC,GAAGuG,QAAQ,CAACpG,CAAC,GAAGwG,UAAU,CAAC3G,CAAC,IACtCuG,QAAQ,CAACxG,CAAC,GAAG4G,UAAU,CAAC5G,CAAC,GAAG4G,UAAU,CAACvG,CAAC,IACxCmG,QAAQ,CAACxG,CAAC,GAAGwG,QAAQ,CAACnG,CAAC,GAAGuG,UAAU,CAAC5G,CAAC;UACxC,IAAI6G,GAAG,EAAE;YACPH,cAAc,CAAC7D,CAAC,CAAC,GAAG;cAClB,GAAGW,MAAM;cACTP,KAAK,EAAE;YACT,CAAC;YACDd,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE;cAACjC,CAAC,EAAEuD,MAAM,CAACzF,QAAQ,CAACkC,CAAC;cAAED,CAAC,EAAEwD,MAAM,CAACzF,QAAQ,CAACiC,CAAC;cAAE8C,EAAE,EAAEU,MAAM,CAACV;YAAE,CAAC,CAAC,CAAC;YACzG6D,aAAa,CAACxG,IAAI,CAACwE,MAAM,CAAC7B,EAAE,CAAC;UAC/B;QACF;MACF,CAAC,CAAC;MACFb,kBAAkB,CAAC0E,aAAa,CAAC;MACjC;MACA,MAAMG,YAAY,GAAGJ,cAAc,CAACf,MAAM,CAACtB,CAAC,IAAIA,CAAC,CAACpB,KAAK,CAAC;MACxD,IAAI6D,YAAY,CAACtE,MAAM,KAAK,CAAC,IAAIZ,MAAM,KAAK,IAAI,EAAE;QAChDC,SAAS,CAACiF,YAAY,CAAC,CAAC,CAAC,CAAChE,EAAE,CAAC;QAC7B4D,cAAc,GAAGA,cAAc,CAACnD,GAAG,CAACc,CAAC,IACnCA,CAAC,CAACvB,EAAE,KAAKgE,YAAY,CAAC,CAAC,CAAC,CAAChE,EAAE,GAAG;UAAE,GAAGuB,CAAC;UAAEnB,KAAK,EAAEmB,CAAC,CAACnB,KAAK,GAAG;QAAE,CAAC,GAAGmB,CAC/D,CAAC;MACH;MACA,OAAOqC,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC9F,OAAO,EAAEc,WAAW,EAAEJ,QAAQ,EAAEM,MAAM,CAAC,CAAC;;EAE5C;EACA,MAAMmF,uBAAuB,GAAI3D,QAAgB,IAAK;IACpD,IAAI,CAAC1B,WAAW,EAAE;IAClByC,UAAU,CAACf,QAAQ,CAAC;EACtB,CAAC;;EAED;EACA,MAAM4D,sBAAsB,GAAI5D,QAAgB,IAAK;IACnDpC,WAAW,CAACiG,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAAC7D,QAAQ,GAAG;IAAM,CAAC,CAAC,CAAC;IAC/ClC,SAAS,CAACgG,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAAC9D,QAAQ,GAAG;IAAK,CAAC,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,MAAM+D,oBAAoB,GAAI/D,QAAgB,IAAK;IACjDpC,WAAW,CAACiG,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAAC7D,QAAQ,GAAG;IAAK,CAAC,CAAC,CAAC;IAC9ClC,SAAS,CAACgG,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAAC9D,QAAQ,GAAG;IAAM,CAAC,CAAC,CAAC;EAC/C,CAAC;;EAED;EACAlH,SAAS,CAAC,MAAM;IACd,IAAIsE,UAAU,KAAK,UAAU,EAAE;IAC/B,MAAM4G,MAAwE,GAAG;MAC/E,GAAG,EAAE;QAAEhE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACpC,GAAG,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACpC,GAAG,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACpC,GAAG,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACpC,GAAG,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACpC,GAAG,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACpC,IAAI,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO,CAAC;MACrC,OAAO,EAAE;QAAEjE,QAAQ,EAAE,CAAC;QAAEiE,MAAM,EAAE;MAAO;IACzC,CAAC;IACD,MAAMC,aAAa,GAAIC,CAAgB,IAAK;MAC1C,MAAMC,GAAG,GAAGD,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;MAC/B,MAAMC,MAAM,GAAGN,MAAM,CAACI,GAAG,CAAC;MAC1B,IAAIE,MAAM,EAAE;QACV,IAAIA,MAAM,CAACL,MAAM,KAAK,MAAM,EAAE;UAC5BrG,WAAW,CAACiG,CAAC,KAAK;YAAE,GAAGA,CAAC;YAAE,CAACS,MAAM,CAACtE,QAAQ,GAAG;UAAM,CAAC,CAAC,CAAC;UACtDlC,SAAS,CAACgG,CAAC,KAAK;YAAE,GAAGA,CAAC;YAAE,CAACQ,MAAM,CAACtE,QAAQ,GAAG;UAAK,CAAC,CAAC,CAAC;QACrD,CAAC,MAAM,IAAIsE,MAAM,CAACL,MAAM,KAAK,MAAM,EAAE;UACnCN,uBAAuB,CAACW,MAAM,CAACtE,QAAQ,CAAC;QAC1C;MACF;IACF,CAAC;IACD,MAAMuE,WAAW,GAAIJ,CAAgB,IAAK;MACxC,MAAMC,GAAG,GAAGD,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;MAC/B,MAAMC,MAAM,GAAGN,MAAM,CAACI,GAAG,CAAC;MAC1B,IAAIE,MAAM,IAAIA,MAAM,CAACL,MAAM,KAAK,MAAM,EAAE;QACtCrG,WAAW,CAACiG,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE,CAACS,MAAM,CAACtE,QAAQ,GAAG;QAAK,CAAC,CAAC,CAAC;QACrDlC,SAAS,CAACgG,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE,CAACQ,MAAM,CAACtE,QAAQ,GAAG;QAAM,CAAC,CAAC,CAAC;MACtD;IACF,CAAC;IACD3E,MAAM,CAACmJ,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACjD7I,MAAM,CAACmJ,gBAAgB,CAAC,OAAO,EAAED,WAAW,CAAC;IAC7C,OAAO,MAAM;MACXlJ,MAAM,CAACoJ,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;MACpD7I,MAAM,CAACoJ,mBAAmB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,CAACnH,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMsH,cAAc,GAAGA,CAAA,kBACrBtL,OAAA;IAAKuL,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACC,OAAO,EAAC,WAAW;IAACC,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC,4BAA4B;IAAAC,QAAA,gBAC5F5L,OAAA;MAAMyD,CAAC,EAAC,GAAG;MAACD,CAAC,EAAC,GAAG;MAAC+H,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,GAAG;MAACK,EAAE,EAAC,GAAG;MAACH,IAAI,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DjM,OAAA;MAAMyD,CAAC,EAAC,IAAI;MAACD,CAAC,EAAC,IAAI;MAAC+H,KAAK,EAAC,GAAG;MAACC,MAAM,EAAC,GAAG;MAACK,EAAE,EAAC,GAAG;MAACH,IAAI,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DjM,OAAA;MAAQkM,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAAC1B,CAAC,EAAC,GAAG;MAACiB,IAAI,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CjM,OAAA;MAAQkM,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAAC1B,CAAC,EAAC,GAAG;MAACiB,IAAI,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CACN;;EAED;EACA,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B/G,SAAS,CAAC,IAAI,CAAC;IACfJ,YAAY,CAAC,CAAC,CAAC;IACfE,cAAc,CAAC,KAAK,CAAC;IACrBW,cAAc,CAAC,CAAC;IAChBzB,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;;EAED;EACA,MAAMgI,SAAS,GAAGA,CAAC;IAAC5I,CAAC;IAAED;EAAyB,CAAC,kBAC/CxD,OAAA;IAAKsM,KAAK,EAAE;MACV/K,QAAQ,EAAE,UAAU;MACpBgL,IAAI,EAAE9I,CAAC;MACP+I,GAAG,EAAEhJ,CAAC;MACN+H,KAAK,EAAEzG,QAAQ;MACf0G,MAAM,EAAE1G,QAAQ;MAChB2H,aAAa,EAAE,MAAM;MACrBC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAAjB,QAAA,eACA5L,OAAA;MAAKuL,KAAK,EAAEzG,QAAS;MAAC0G,MAAM,EAAE1G,QAAS;MAAA8G,QAAA,eACrC5L,OAAA;QAAQkM,EAAE,EAAEpH,QAAQ,GAAC,CAAE;QAACqH,EAAE,EAAErH,QAAQ,GAAC,CAAE;QAAC2F,CAAC,EAAE3F,QAAQ,GAAC,CAAC,GAAC,CAAE;QAAC4G,IAAI,EAAC,QAAQ;QAACoB,WAAW,EAAC,KAAK;QAAAlB,QAAA,gBACtF5L,OAAA;UAAS+M,aAAa,EAAC,GAAG;UAAC5G,IAAI,EAAErB,QAAQ,GAAC,CAAC,GAAC,CAAE;UAACkI,EAAE,EAAElI,QAAS;UAACmI,GAAG,EAAC,MAAM;UAACvB,IAAI,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxFjM,OAAA;UAAS+M,aAAa,EAAC,SAAS;UAAC5G,IAAI,EAAC,KAAK;UAAC6G,EAAE,EAAC,GAAG;UAACC,GAAG,EAAC,MAAM;UAACvB,IAAI,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,oBACEjM,OAAA,CAACC,QAAQ;IAAA2L,QAAA,GACN5G,SAAS,KAAK,IAAI,iBACjBhF,OAAA,CAACwC,gBAAgB;MAAAoJ,QAAA,eACf5L,OAAA,CAAC0C,aAAa;QAAAkJ,QAAA,EACX5G,SAAS,KAAK,CAAC,GAAG,QAAQ,GAAGA;MAAS;QAAA8G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACnB,EACA7G,MAAM,KAAK,IAAI,iBACdpF,OAAA,CAAC4C,UAAU;MAAAgJ,QAAA,gBACT5L,OAAA,CAAC8C,OAAO;QAAA8I,QAAA,GAAC,kBAAgB,EAACxG,MAAM;MAAA;QAAA0G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAC3CjM,OAAA,CAACgD,UAAU;QAAA4I,QAAA,EACR1H,OAAO,CAAC6C,GAAG,CAACc,CAAC,iBACZ7H,OAAA;UAAgBsM,KAAK,EAAE;YAAEtL,KAAK,EAAES,YAAY,CAACoG,CAAC,CAACvB,EAAE;UAAmB,CAAE;UAAAsF,QAAA,GAAC,SAC9D,EAAC/D,CAAC,CAACvB,EAAE,EAAC,IAAE,EAACuB,CAAC,CAACnB,KAAK,EAAC,OAC1B;QAAA,GAFUmB,CAAC,CAACvB,EAAE;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbjM,OAAA;QAAQsM,KAAK,EAAE;UAAEY,SAAS,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,OAAO,EAAE,WAAW;UAAEC,YAAY,EAAE,CAAC;UAAEC,MAAM,EAAE,MAAM;UAAEC,UAAU,EAAE,MAAM;UAAEvM,KAAK,EAAE,MAAM;UAAEwM,UAAU,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAU,CAAE;QAACC,OAAO,EAAEtB,aAAc;QAAAR,QAAA,EAAC;MAEzM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACb,eACDjM,OAAA,CAACI,QAAQ;MAAA0L,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEX1I,KAAK,CAACwD,GAAG,CAAC,CAACnD,CAAC,EAAEyC,CAAC,kBACdrG,OAAA,CAACqC,IAAI;MAASiK,KAAK,EAAE;QAAEC,IAAI,EAAE3I,CAAC,CAACH,CAAC;QAAE+I,GAAG,EAAE5I,CAAC,CAACJ,CAAC;QAAE+H,KAAK,EAAE3H,CAAC,CAACA,CAAC;QAAE4H,MAAM,EAAE5H,CAAC,CAACC;MAAE;IAAE,GAA3DwC,CAAC;MAAAyF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4D,CACzE,CAAC,EACD/H,OAAO,CAAC6C,GAAG,CAACC,MAAM,iBACjBhH,OAAA,CAACR,KAAK,CAACmO,QAAQ;MAAA/B,QAAA,gBACb5L,OAAA,CAACc,SAAS;QACRC,MAAM,EAAEiG,MAAM,CAACjG,MAAO;QACtBC,KAAK,EAAES,YAAY,CAACuF,MAAM,CAACV,EAAE,CAAmB;QAChDgG,KAAK,EAAE;UACLC,IAAI,EAAEvF,MAAM,CAACzF,QAAQ,CAACkC,CAAC,GAAG,EAAE;UAC5B+I,GAAG,EAAExF,MAAM,CAACzF,QAAQ,CAACiC,CAAC,GAAG;QAC3B;MAAE;QAAAsI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFjM,OAAA,CAACF,IAAI;QACHkB,KAAK,EAAES,YAAY,CAACuF,MAAM,CAACV,EAAE,CAAmB;QAChDC,QAAQ,EAAES,MAAM,CAACT,QAAS;QAC1BhF,QAAQ,EAAEyF,MAAM,CAACzF,QAAS;QAC1BiF,QAAQ,EAAEQ,MAAM,CAACR,QAAS;QAC1B/F,IAAI,EAAEqE;MAAS;QAAAgH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA,GAfiBjF,MAAM,CAACV,EAAE;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBd,CACjB,CAAC,EAED3G,KAAK,CAACyB,GAAG,CAAC4C,CAAC,iBACV3J,OAAA,CAACW,KAAK;MAAYF,IAAI,EAAEkJ,CAAC,CAAClJ,IAAK;MAACG,OAAO,EAAE+I,CAAC,CAAC/I,OAAQ;MAAC0L,KAAK,EAAE;QAAEC,IAAI,EAAE5C,CAAC,CAAClG,CAAC;QAAE+I,GAAG,EAAE7C,CAAC,CAACnG;MAAE;IAAE,GAAvEmG,CAAC,CAACrD,EAAE;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqE,CACtF,CAAC,EAED7H,OAAO,CAAC2C,GAAG,CAACoB,MAAM,iBACjBnI,OAAA,CAACO,MAAM;MAELE,IAAI,EAAEyC,WAAY;MAClBoJ,KAAK,EAAE;QACLC,IAAI,EAAEpE,MAAM,CAAC5G,QAAQ,CAACkC,CAAC;QACvB+I,GAAG,EAAErE,MAAM,CAAC5G,QAAQ,CAACiC;MACvB;IAAE,GALG2E,MAAM,CAAC7B,EAAE;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACF,CAAC,EACDjI,UAAU,KAAK,OAAO,IAAIE,OAAO,CAAC6C,GAAG,CAAC,CAACC,MAAM,EAAE4G,GAAG,kBACjD5N,OAAA,CAACsB,YAAY;MAEXN,KAAK,EAAES,YAAY,CAACuF,MAAM,CAACV,EAAE,CAAmB;MAChD/E,QAAQ,EAAEG,eAAe,CAACkM,GAAG,CAAE;MAC/BF,OAAO,EAAEA,CAAA,KAAMnD,uBAAuB,CAACvD,MAAM,CAACV,EAAE,CAAE;MAClDuH,YAAY,EAAEA,CAAA,KAAMrD,sBAAsB,CAACxD,MAAM,CAACV,EAAE,CAAE;MACtDwH,UAAU,EAAEA,CAAA,KAAMnD,oBAAoB,CAAC3D,MAAM,CAACV,EAAE,CAAE;MAClDyH,WAAW,EAAEA,CAAA,KAAMvD,sBAAsB,CAACxD,MAAM,CAACV,EAAE,CAAE;MACrD0H,SAAS,EAAEA,CAAA,KAAMrD,oBAAoB,CAAC3D,MAAM,CAACV,EAAE,CAAE;MACjD2H,YAAY,EAAEA,CAAA,KAAMtD,oBAAoB,CAAC3D,MAAM,CAACV,EAAE,CAAE;MAAAsF,QAAA,eAEpD5L,OAAA,CAACsL,cAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAVbjF,MAAM,CAACV,EAAE;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWF,CACf,CAAC,EAEDvG,UAAU,CAACqB,GAAG,CAACgE,CAAC,iBAAI/K,OAAA,CAACqM,SAAS;MAAY5I,CAAC,EAAEsH,CAAC,CAACtH,CAAE;MAACD,CAAC,EAAEuH,CAAC,CAACvH;IAAE,GAArBuH,CAAC,CAACzE,EAAE;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEf,CAAC;AAAChI,EAAA,CA3iBIH,QAGJ;AAAAoK,IAAA,GAHIpK,QAGJ;AA0iBF,eAAeA,QAAQ;AAAC,IAAA3D,EAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAO,GAAA,EAAAc,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAAiL,IAAA;AAAAC,YAAA,CAAAhO,EAAA;AAAAgO,YAAA,CAAA9N,GAAA;AAAA8N,YAAA,CAAAzN,GAAA;AAAAyN,YAAA,CAAAtN,GAAA;AAAAsN,YAAA,CAAAlN,GAAA;AAAAkN,YAAA,CAAA3M,GAAA;AAAA2M,YAAA,CAAA7L,GAAA;AAAA6L,YAAA,CAAA1L,GAAA;AAAA0L,YAAA,CAAAxL,GAAA;AAAAwL,YAAA,CAAAtL,GAAA;AAAAsL,YAAA,CAAApL,GAAA;AAAAoL,YAAA,CAAAlL,IAAA;AAAAkL,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}