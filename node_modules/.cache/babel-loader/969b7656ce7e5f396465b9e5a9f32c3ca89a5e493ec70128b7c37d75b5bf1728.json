{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/BalloonPop/BalloonPop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Animasyonlar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst float = keyframes`\n  0% { transform: translateY(0) rotate(0deg); }\n  25% { transform: translateY(-15px) rotate(5deg); }\n  50% { transform: translateY(0) rotate(0deg); }\n  75% { transform: translateY(-10px) rotate(-5deg); }\n  100% { transform: translateY(0) rotate(0deg); }\n`;\nconst pop = keyframes`\n  0% { transform: scale(1); opacity: 1; }\n  100% { transform: scale(1.5); opacity: 0; }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n_c2 = Header;\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n_c3 = ScoreBoard;\nconst PlayerScore = styled.div`\n  color: ${props => props.color};\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n_c4 = PlayerScore;\nconst GameArea = styled.div`\n  position: relative;\n  width: 100%;\n  height: 500px;\n  max-width: 800px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  margin: 1rem 0;\n  overflow: hidden;\n  user-select: none;\n  touch-action: none;\n  cursor: crosshair;\n`;\n_c5 = GameArea;\nconst Balloon = styled.div`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size * 1.2}px;\n  border-radius: 50%;\n  background: radial-gradient(circle at 30% 30%, ${props => `${props.color}cc`}, ${props => props.color});\n  left: ${props => props.x}px;\n  bottom: ${props => props.y}px;\n  cursor: pointer;\n  transform-origin: center bottom;\n  \n  &:before {\n    content: '';\n    position: absolute;\n    width: 8px;\n    height: 15px;\n    background: rgba(255,255,255,0.5);\n    border-radius: 50%;\n    top: 25%;\n    left: 25%;\n    transform: rotate(-30deg);\n  }\n  \n  &:after {\n    content: '';\n    position: absolute;\n    width: 10px;\n    height: 20px;\n    background: #ddd;\n    bottom: -18px;\n    left: calc(50% - 5px);\n    border-radius: 0 0 5px 5px;\n  }\n  \n  animation: ${props => props.popped ? pop : css`${float} ${props.speed}s infinite`};\n  animation-duration: ${props => props.popped ? '0.3s' : `${props.speed}s`};\n  animation-fill-mode: ${props => props.popped ? 'forwards' : 'none'};\n  opacity: ${props => props.popped ? 0 : 1};\n  pointer-events: ${props => props.popped ? 'none' : 'auto'};\n`;\n_c6 = Balloon;\nconst BalloonSplash = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  left: ${props => props.x - 20}px;\n  top: ${props => props.y - 20}px;\n  background: transparent;\n  border-radius: 50%;\n  z-index: 10;\n  \n  &:before, &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background: ${props => props.color};\n    opacity: 0.7;\n    animation: ${pop} 0.5s forwards;\n  }\n  \n  &:after {\n    width: 70%;\n    height: 70%;\n    top: 15%;\n    left: 15%;\n    animation-delay: 0.1s;\n  }\n`;\n_c7 = BalloonSplash;\nconst InfoText = styled.div`\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 10px 25px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n_c8 = InfoText;\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n_c9 = NextButton;\nconst Timer = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.urgent ? '#e74c3c' : 'white'};\n  padding: 5px 15px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 10;\n`;\n_c0 = Timer;\nconst CountText = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  font-size: 1.3rem;\n  font-weight: bold;\n  color: white;\n  padding: 5px 15px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 10;\n`;\n_c1 = CountText;\nconst ResultCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  padding: 20px;\n  margin: 10px 0;\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n`;\n_c10 = ResultCard;\nconst StatText = styled.div`\n  color: white;\n  font-size: 1.2rem;\n  margin: 5px 0;\n`;\n_c11 = StatText;\nconst StatValue = styled.span`\n  font-weight: bold;\n  color: ${props => props.highlight ? '#f1c40f' : 'white'};\n`;\n\n// Oyuncu renkleri\n_c12 = StatValue;\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\n\n// Balon renkleri\nconst BALLOON_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#e67e22', '#1abc9c', '#d35400', '#c0392b', '#16a085'];\nconst BalloonPop = ({\n  playerCount\n}) => {\n  _s();\n  // Oyuncu durumları\n  const [players, setPlayers] = useState(Array.from({\n    length: playerCount\n  }, (_, i) => ({\n    id: i,\n    score: 0,\n    balloonCount: 0,\n    accuracy: 0,\n    clicks: 0\n  })));\n  const [activePlayer, setActivePlayer] = useState(0);\n\n  // Oyun durumları\n  const [phase, setPhase] = useState('ready');\n  const [round, setRound] = useState(1);\n  const [balloons, setBalloons] = useState([]);\n  const [splashEffects, setSplashEffects] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [clicks, setClicks] = useState(0);\n  const timerRef = useRef(null);\n  const balloonIntervalRef = useRef(null);\n  const gameAreaRef = useRef(null);\n  const totalRounds = playerCount; // Her oyuncu 1 kez oynasın\n\n  // Oyunu başlat\n  const startRound = () => {\n    setBalloons([]);\n    setSplashEffects([]);\n    setTimeLeft(30);\n    setClicks(0);\n    setPhase('playing');\n\n    // Balon oluşturmaya başla\n    startBalloonGeneration();\n\n    // Zamanlayıcıyı başlat\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          // Süre doldu\n          endRound();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  // Balon oluşturmaya başla\n  const startBalloonGeneration = () => {\n    if (balloonIntervalRef.current) {\n      clearInterval(balloonIntervalRef.current);\n    }\n    balloonIntervalRef.current = setInterval(() => {\n      addRandomBalloon();\n    }, 800); // Her 800ms'de bir yeni balon\n  };\n\n  // Rastgele balon ekle\n  const addRandomBalloon = () => {\n    const gameArea = gameAreaRef.current;\n    if (!gameArea) return;\n    const gameWidth = gameArea.clientWidth;\n    const gameHeight = gameArea.clientHeight;\n\n    // Rastgele boyut (40-80 piksel)\n    const size = Math.floor(Math.random() * 40) + 40;\n\n    // Rastgele konum\n    const x = Math.random() * (gameWidth - size);\n    const y = -size; // Ekranın altından başlasın\n\n    // Rastgele hız (3-8 saniye)\n    const speed = Math.random() * 5 + 3;\n\n    // Rastgele renk\n    const color = BALLOON_COLORS[Math.floor(Math.random() * BALLOON_COLORS.length)];\n\n    // Boyuta göre puan (küçük balonlar daha değerli)\n    const points = Math.floor(10 + (80 - size) / 4);\n\n    // Yeni balon oluştur\n    const newBalloon = {\n      id: Date.now() + Math.random(),\n      x,\n      y,\n      size,\n      color,\n      speed,\n      popped: false,\n      points\n    };\n    setBalloons(prev => [...prev, newBalloon]);\n\n    // Bir süre sonra patlamamış balonları kaldır\n    setTimeout(() => {\n      setBalloons(prev => prev.filter(b => b.id !== newBalloon.id || b.popped));\n    }, speed * 1000 + 1000);\n  };\n\n  // Balon patlatma\n  const handleBalloonPop = (balloonId, event) => {\n    var _gameAreaRef$current;\n    // Tıklama sayısını artır\n    setClicks(prev => prev + 1);\n\n    // Balonun konumunu bul\n    const balloon = balloons.find(b => b.id === balloonId);\n    if (!balloon) return;\n\n    // Splash efektini ekle\n    const rect = event.target.getBoundingClientRect();\n    const gameAreaRect = (_gameAreaRef$current = gameAreaRef.current) === null || _gameAreaRef$current === void 0 ? void 0 : _gameAreaRef$current.getBoundingClientRect();\n    if (gameAreaRect) {\n      const splashX = event.clientX - gameAreaRect.left;\n      const splashY = event.clientY - gameAreaRect.top;\n      setSplashEffects(prev => [...prev, {\n        id: Date.now() + Math.random(),\n        x: splashX,\n        y: splashY,\n        color: balloon.color\n      }]);\n\n      // Efekti bir süre sonra kaldır\n      setTimeout(() => {\n        setSplashEffects(prev => prev.filter(e => e.id !== Date.now() + Math.random()));\n      }, 500);\n    }\n\n    // Balonu patlatılmış olarak işaretle\n    setBalloons(prev => prev.map(b => b.id === balloonId ? {\n      ...b,\n      popped: true\n    } : b));\n\n    // Puanı güncelle\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        return {\n          ...p,\n          score: p.score + balloon.points,\n          balloonCount: p.balloonCount + 1\n        };\n      }\n      return p;\n    }));\n  };\n\n  // Oyun alanına tıklama\n  const handleGameAreaClick = () => {\n    // Boşluğa tıklama\n    setClicks(prev => prev + 1);\n  };\n\n  // Turu sonlandır\n  const endRound = () => {\n    // Zamanlayıcıları temizle\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    if (balloonIntervalRef.current) {\n      clearInterval(balloonIntervalRef.current);\n    }\n\n    // Doğruluk oranını hesapla\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        const accuracy = clicks > 0 ? Math.round(p.balloonCount / clicks * 100) : 0;\n        return {\n          ...p,\n          accuracy,\n          clicks\n        };\n      }\n      return p;\n    }));\n\n    // Sonuç aşamasına geç\n    setPhase('result');\n  };\n\n  // Sonraki aşamaya geç\n  const nextStep = () => {\n    const newRound = round + 1;\n    setRound(newRound);\n    if (newRound > totalRounds) {\n      // Oyun bitti\n      setPhase('end');\n    } else {\n      // Sıradaki oyuncuya geç\n      setActivePlayer((activePlayer + 1) % playerCount);\n      setPhase('ready');\n    }\n  };\n\n  // Temizlik işlemleri\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n      if (balloonIntervalRef.current) {\n        clearInterval(balloonIntervalRef.current);\n      }\n    };\n  }, []);\n\n  // Kazananı bul\n  const getWinner = () => {\n    return players.reduce((highest, player) => player.score > highest.score ? player : highest, players[0]);\n  };\n\n  // Beraberlik kontrolü\n  const isTie = () => {\n    const winner = getWinner();\n    return players.filter(p => p.score === winner.score).length > 1;\n  };\n\n  // En yüksek doğruluk oranı\n  const getHighestAccuracy = () => {\n    return players.reduce((highest, player) => player.accuracy > highest.accuracy ? player : highest, players[0]);\n  };\n\n  // En çok balon patlatan\n  const getMostBalloons = () => {\n    return players.reduce((highest, player) => player.balloonCount > highest.balloonCount ? player : highest, players[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Balon Patlatma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n        color: PLAYER_COLORS[index],\n        active: activePlayer === index && phase !== 'end',\n        children: [\"Oyuncu \", index + 1, \": \", player.score]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this), phase === 'ready' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"S\\u0131ra: Oyuncu \", activePlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          textAlign: 'center'\n        },\n        children: \"Ekranda beliren balonlar\\u0131 patlatarak puan kazan! K\\xFC\\xE7\\xFCk balonlar daha de\\u011Ferli, bo\\u015F alana t\\u0131klama ve do\\u011Fruluk \\xF6nemli.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: startRound,\n        children: \"Haz\\u0131r\\u0131m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), (phase === 'playing' || phase === 'result') && /*#__PURE__*/_jsxDEV(GameArea, {\n      ref: gameAreaRef,\n      onClick: handleGameAreaClick,\n      children: [phase === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          urgent: timeLeft <= 5,\n          children: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CountText, {\n          children: [\"Balonlar: \", players[activePlayer].balloonCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), balloons.filter(b => !b.popped).map(balloon => /*#__PURE__*/_jsxDEV(Balloon, {\n        x: balloon.x,\n        y: balloon.y,\n        size: balloon.size,\n        color: balloon.color,\n        speed: balloon.speed,\n        popped: balloon.popped,\n        onClick: e => handleBalloonPop(balloon.id, e)\n      }, balloon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this)), splashEffects.map(effect => /*#__PURE__*/_jsxDEV(BalloonSplash, {\n        x: effect.x,\n        y: effect.y,\n        color: effect.color\n      }, effect.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 9\n    }, this), phase === 'result' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"Tur Sonu! Oyuncu \", activePlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultCard, {\n        children: [/*#__PURE__*/_jsxDEV(StatText, {\n          children: [\"Toplam Puan: \", /*#__PURE__*/_jsxDEV(StatValue, {\n            highlight: true,\n            children: players[activePlayer].score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatText, {\n          children: [\"Patlat\\u0131lan Balon: \", /*#__PURE__*/_jsxDEV(StatValue, {\n            children: players[activePlayer].balloonCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatText, {\n          children: [\"Toplam T\\u0131klama: \", /*#__PURE__*/_jsxDEV(StatValue, {\n            children: players[activePlayer].clicks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatText, {\n          children: [\"Do\\u011Fruluk Oran\\u0131: \", /*#__PURE__*/_jsxDEV(StatValue, {\n            children: [players[activePlayer].accuracy, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: nextStep,\n        children: round >= totalRounds ? 'Sonuçları Gör' : 'Sonraki Oyuncu'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), phase === 'end' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: isTie() ? 'Oyun Bitti! Beraberlik!' : `Oyun Bitti! Kazanan: Oyuncu ${getWinner().id + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: '1rem',\n          margin: '1rem 0'\n        },\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            maxWidth: '500px',\n            background: player.id === getWinner().id && !isTie() ? 'rgba(255,255,255,0.15)' : 'rgba(255,255,255,0.05)',\n            padding: '15px',\n            borderRadius: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderBottom: '1px solid rgba(255,255,255,0.1)',\n              paddingBottom: '10px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: PLAYER_COLORS[index],\n                fontWeight: 'bold'\n              },\n              children: [\"Oyuncu \", player.id + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              children: [player.score, \" puan\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'rgba(255,255,255,0.7)'\n              },\n              children: \"Patlat\\u0131lan Balon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: player.balloonCount === getMostBalloons().balloonCount ? '#f1c40f' : 'white'\n              },\n              children: player.balloonCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'rgba(255,255,255,0.7)'\n              },\n              children: \"Do\\u011Fruluk Oran\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: player.accuracy === getHighestAccuracy().accuracy ? '#f1c40f' : 'white'\n              },\n              children: [player.accuracy, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 17\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: () => window.location.reload(),\n        children: \"Tekrar Oyna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 521,\n    columnNumber: 5\n  }, this);\n};\n_s(BalloonPop, \"kifC6T6iq/phvB+MKDjgxenTlfk=\");\n_c13 = BalloonPop;\nexport default BalloonPop;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ScoreBoard\");\n$RefreshReg$(_c4, \"PlayerScore\");\n$RefreshReg$(_c5, \"GameArea\");\n$RefreshReg$(_c6, \"Balloon\");\n$RefreshReg$(_c7, \"BalloonSplash\");\n$RefreshReg$(_c8, \"InfoText\");\n$RefreshReg$(_c9, \"NextButton\");\n$RefreshReg$(_c0, \"Timer\");\n$RefreshReg$(_c1, \"CountText\");\n$RefreshReg$(_c10, \"ResultCard\");\n$RefreshReg$(_c11, \"StatText\");\n$RefreshReg$(_c12, \"StatValue\");\n$RefreshReg$(_c13, \"BalloonPop\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","keyframes","css","jsxDEV","_jsxDEV","Fragment","_Fragment","fadeIn","pulse","float","pop","GameContainer","div","_c","Header","h2","_c2","ScoreBoard","_c3","PlayerScore","props","color","active","_c4","GameArea","_c5","Balloon","size","x","y","popped","speed","_c6","BalloonSplash","_c7","InfoText","_c8","NextButton","button","_c9","Timer","urgent","_c0","CountText","_c1","ResultCard","_c10","StatText","_c11","StatValue","span","highlight","_c12","PLAYER_COLORS","BALLOON_COLORS","BalloonPop","playerCount","_s","players","setPlayers","Array","from","length","_","i","id","score","balloonCount","accuracy","clicks","activePlayer","setActivePlayer","phase","setPhase","round","setRound","balloons","setBalloons","splashEffects","setSplashEffects","timeLeft","setTimeLeft","setClicks","timerRef","balloonIntervalRef","gameAreaRef","totalRounds","startRound","startBalloonGeneration","current","clearInterval","setInterval","prev","endRound","addRandomBalloon","gameArea","gameWidth","clientWidth","gameHeight","clientHeight","Math","floor","random","points","newBalloon","Date","now","setTimeout","filter","b","handleBalloonPop","balloonId","event","_gameAreaRef$current","balloon","find","rect","target","getBoundingClientRect","gameAreaRect","splashX","clientX","left","splashY","clientY","top","e","map","p","handleGameAreaClick","nextStep","newRound","getWinner","reduce","highest","player","isTie","winner","getHighestAccuracy","getMostBalloons","children","fileName","_jsxFileName","lineNumber","columnNumber","index","style","textAlign","onClick","ref","effect","display","flexDirection","alignItems","gap","margin","width","maxWidth","background","padding","borderRadius","justifyContent","borderBottom","paddingBottom","marginBottom","fontWeight","window","location","reload","_c13","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/BalloonPop/BalloonPop.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Animasyonlar\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\nconst float = keyframes`\n  0% { transform: translateY(0) rotate(0deg); }\n  25% { transform: translateY(-15px) rotate(5deg); }\n  50% { transform: translateY(0) rotate(0deg); }\n  75% { transform: translateY(-10px) rotate(-5deg); }\n  100% { transform: translateY(0) rotate(0deg); }\n`;\n\nconst pop = keyframes`\n  0% { transform: scale(1); opacity: 1; }\n  100% { transform: scale(1.5); opacity: 0; }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n\nconst PlayerScore = styled.div<{ color: string, active: boolean }>`\n  color: ${props => props.color};\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n\nconst GameArea = styled.div`\n  position: relative;\n  width: 100%;\n  height: 500px;\n  max-width: 800px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  margin: 1rem 0;\n  overflow: hidden;\n  user-select: none;\n  touch-action: none;\n  cursor: crosshair;\n`;\n\nconst Balloon = styled.div<{ \n  x: number, \n  y: number, \n  size: number, \n  color: string,\n  speed: number,\n  popped: boolean\n}>`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size * 1.2}px;\n  border-radius: 50%;\n  background: radial-gradient(circle at 30% 30%, ${props => `${props.color}cc`}, ${props => props.color});\n  left: ${props => props.x}px;\n  bottom: ${props => props.y}px;\n  cursor: pointer;\n  transform-origin: center bottom;\n  \n  &:before {\n    content: '';\n    position: absolute;\n    width: 8px;\n    height: 15px;\n    background: rgba(255,255,255,0.5);\n    border-radius: 50%;\n    top: 25%;\n    left: 25%;\n    transform: rotate(-30deg);\n  }\n  \n  &:after {\n    content: '';\n    position: absolute;\n    width: 10px;\n    height: 20px;\n    background: #ddd;\n    bottom: -18px;\n    left: calc(50% - 5px);\n    border-radius: 0 0 5px 5px;\n  }\n  \n  animation: ${props => props.popped ? pop : css`${float} ${props.speed}s infinite`};\n  animation-duration: ${props => props.popped ? '0.3s' : `${props.speed}s`};\n  animation-fill-mode: ${props => props.popped ? 'forwards' : 'none'};\n  opacity: ${props => props.popped ? 0 : 1};\n  pointer-events: ${props => props.popped ? 'none' : 'auto'};\n`;\n\nconst BalloonSplash = styled.div<{ x: number, y: number, color: string }>`\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  left: ${props => props.x - 20}px;\n  top: ${props => props.y - 20}px;\n  background: transparent;\n  border-radius: 50%;\n  z-index: 10;\n  \n  &:before, &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background: ${props => props.color};\n    opacity: 0.7;\n    animation: ${pop} 0.5s forwards;\n  }\n  \n  &:after {\n    width: 70%;\n    height: 70%;\n    top: 15%;\n    left: 15%;\n    animation-delay: 0.1s;\n  }\n`;\n\nconst InfoText = styled.div`\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 10px 25px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n\nconst Timer = styled.div<{ urgent: boolean }>`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.urgent ? '#e74c3c' : 'white'};\n  padding: 5px 15px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 10;\n`;\n\nconst CountText = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  font-size: 1.3rem;\n  font-weight: bold;\n  color: white;\n  padding: 5px 15px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 10;\n`;\n\nconst ResultCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  padding: 20px;\n  margin: 10px 0;\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n`;\n\nconst StatText = styled.div`\n  color: white;\n  font-size: 1.2rem;\n  margin: 5px 0;\n`;\n\nconst StatValue = styled.span<{ highlight?: boolean }>`\n  font-weight: bold;\n  color: ${props => props.highlight ? '#f1c40f' : 'white'};\n`;\n\n// Oyuncu renkleri\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\n\n// Balon renkleri\nconst BALLOON_COLORS = [\n  '#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', \n  '#e67e22', '#1abc9c', '#d35400', '#c0392b', '#16a085'\n];\n\ninterface Player {\n  id: number;\n  score: number;\n  balloonCount: number;\n  accuracy: number;\n  clicks: number;\n}\n\ninterface BalloonObject {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  color: string;\n  speed: number;\n  popped: boolean;\n  points: number;\n}\n\ninterface SplashEffect {\n  id: number;\n  x: number;\n  y: number;\n  color: string;\n}\n\nconst BalloonPop: React.FC<{ playerCount: number }> = ({ playerCount }) => {\n  // Oyuncu durumları\n  const [players, setPlayers] = useState<Player[]>(\n    Array.from({ length: playerCount }, (_, i) => ({ \n      id: i, \n      score: 0,\n      balloonCount: 0,\n      accuracy: 0,\n      clicks: 0\n    }))\n  );\n  const [activePlayer, setActivePlayer] = useState(0);\n  \n  // Oyun durumları\n  const [phase, setPhase] = useState<'ready' | 'playing' | 'result' | 'end'>('ready');\n  const [round, setRound] = useState(1);\n  const [balloons, setBalloons] = useState<BalloonObject[]>([]);\n  const [splashEffects, setSplashEffects] = useState<SplashEffect[]>([]);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [clicks, setClicks] = useState(0);\n  \n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const balloonIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const gameAreaRef = useRef<HTMLDivElement>(null);\n  \n  const totalRounds = playerCount; // Her oyuncu 1 kez oynasın\n  \n  // Oyunu başlat\n  const startRound = () => {\n    setBalloons([]);\n    setSplashEffects([]);\n    setTimeLeft(30);\n    setClicks(0);\n    setPhase('playing');\n    \n    // Balon oluşturmaya başla\n    startBalloonGeneration();\n    \n    // Zamanlayıcıyı başlat\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          // Süre doldu\n          endRound();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  \n  // Balon oluşturmaya başla\n  const startBalloonGeneration = () => {\n    if (balloonIntervalRef.current) {\n      clearInterval(balloonIntervalRef.current);\n    }\n    \n    balloonIntervalRef.current = setInterval(() => {\n      addRandomBalloon();\n    }, 800); // Her 800ms'de bir yeni balon\n  };\n  \n  // Rastgele balon ekle\n  const addRandomBalloon = () => {\n    const gameArea = gameAreaRef.current;\n    if (!gameArea) return;\n    \n    const gameWidth = gameArea.clientWidth;\n    const gameHeight = gameArea.clientHeight;\n    \n    // Rastgele boyut (40-80 piksel)\n    const size = Math.floor(Math.random() * 40) + 40;\n    \n    // Rastgele konum\n    const x = Math.random() * (gameWidth - size);\n    const y = -size; // Ekranın altından başlasın\n    \n    // Rastgele hız (3-8 saniye)\n    const speed = Math.random() * 5 + 3;\n    \n    // Rastgele renk\n    const color = BALLOON_COLORS[Math.floor(Math.random() * BALLOON_COLORS.length)];\n    \n    // Boyuta göre puan (küçük balonlar daha değerli)\n    const points = Math.floor(10 + (80 - size) / 4);\n    \n    // Yeni balon oluştur\n    const newBalloon: BalloonObject = {\n      id: Date.now() + Math.random(),\n      x,\n      y,\n      size,\n      color,\n      speed,\n      popped: false,\n      points\n    };\n    \n    setBalloons(prev => [...prev, newBalloon]);\n    \n    // Bir süre sonra patlamamış balonları kaldır\n    setTimeout(() => {\n      setBalloons(prev => prev.filter(b => b.id !== newBalloon.id || b.popped));\n    }, speed * 1000 + 1000);\n  };\n  \n  // Balon patlatma\n  const handleBalloonPop = (balloonId: number, event: React.MouseEvent) => {\n    // Tıklama sayısını artır\n    setClicks(prev => prev + 1);\n    \n    // Balonun konumunu bul\n    const balloon = balloons.find(b => b.id === balloonId);\n    if (!balloon) return;\n    \n    // Splash efektini ekle\n    const rect = (event.target as HTMLElement).getBoundingClientRect();\n    const gameAreaRect = gameAreaRef.current?.getBoundingClientRect();\n    \n    if (gameAreaRect) {\n      const splashX = event.clientX - gameAreaRect.left;\n      const splashY = event.clientY - gameAreaRect.top;\n      \n      setSplashEffects(prev => [...prev, {\n        id: Date.now() + Math.random(),\n        x: splashX,\n        y: splashY,\n        color: balloon.color\n      }]);\n      \n      // Efekti bir süre sonra kaldır\n      setTimeout(() => {\n        setSplashEffects(prev => prev.filter(e => e.id !== (Date.now() + Math.random())));\n      }, 500);\n    }\n    \n    // Balonu patlatılmış olarak işaretle\n    setBalloons(prev => prev.map(b => \n      b.id === balloonId ? { ...b, popped: true } : b\n    ));\n    \n    // Puanı güncelle\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        return { \n          ...p, \n          score: p.score + balloon.points,\n          balloonCount: p.balloonCount + 1\n        };\n      }\n      return p;\n    }));\n  };\n  \n  // Oyun alanına tıklama\n  const handleGameAreaClick = () => {\n    // Boşluğa tıklama\n    setClicks(prev => prev + 1);\n  };\n  \n  // Turu sonlandır\n  const endRound = () => {\n    // Zamanlayıcıları temizle\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    if (balloonIntervalRef.current) {\n      clearInterval(balloonIntervalRef.current);\n    }\n    \n    // Doğruluk oranını hesapla\n    setPlayers(prev => prev.map((p, i) => {\n      if (i === activePlayer) {\n        const accuracy = clicks > 0 ? Math.round((p.balloonCount / clicks) * 100) : 0;\n        return { \n          ...p, \n          accuracy,\n          clicks\n        };\n      }\n      return p;\n    }));\n    \n    // Sonuç aşamasına geç\n    setPhase('result');\n  };\n  \n  // Sonraki aşamaya geç\n  const nextStep = () => {\n    const newRound = round + 1;\n    setRound(newRound);\n    \n    if (newRound > totalRounds) {\n      // Oyun bitti\n      setPhase('end');\n    } else {\n      // Sıradaki oyuncuya geç\n      setActivePlayer((activePlayer + 1) % playerCount);\n      setPhase('ready');\n    }\n  };\n  \n  // Temizlik işlemleri\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n      \n      if (balloonIntervalRef.current) {\n        clearInterval(balloonIntervalRef.current);\n      }\n    };\n  }, []);\n  \n  // Kazananı bul\n  const getWinner = () => {\n    return players.reduce((highest, player) => \n      player.score > highest.score ? player : highest, players[0]);\n  };\n  \n  // Beraberlik kontrolü\n  const isTie = () => {\n    const winner = getWinner();\n    return players.filter(p => p.score === winner.score).length > 1;\n  };\n  \n  // En yüksek doğruluk oranı\n  const getHighestAccuracy = () => {\n    return players.reduce((highest, player) => \n      player.accuracy > highest.accuracy ? player : highest, players[0]);\n  };\n  \n  // En çok balon patlatan\n  const getMostBalloons = () => {\n    return players.reduce((highest, player) => \n      player.balloonCount > highest.balloonCount ? player : highest, players[0]);\n  };\n  \n  return (\n    <GameContainer>\n      <Header>Balon Patlatma</Header>\n      \n      <ScoreBoard>\n        {players.map((player, index) => (\n          <PlayerScore \n            key={player.id} \n            color={PLAYER_COLORS[index]} \n            active={activePlayer === index && phase !== 'end'}\n          >\n            Oyuncu {index + 1}: {player.score}\n          </PlayerScore>\n        ))}\n      </ScoreBoard>\n      \n      {phase === 'ready' && (\n        <>\n          <InfoText>Sıra: Oyuncu {activePlayer + 1}</InfoText>\n          <p style={{ color: 'white', textAlign: 'center' }}>\n            Ekranda beliren balonları patlatarak puan kazan!\n            Küçük balonlar daha değerli, boş alana tıklama ve doğruluk önemli.\n          </p>\n          <NextButton onClick={startRound}>Hazırım</NextButton>\n        </>\n      )}\n      \n      {(phase === 'playing' || phase === 'result') && (\n        <GameArea \n          ref={gameAreaRef}\n          onClick={handleGameAreaClick}\n        >\n          {phase === 'playing' && (\n            <>\n              <Timer urgent={timeLeft <= 5}>\n                {timeLeft}\n              </Timer>\n              \n              <CountText>\n                Balonlar: {players[activePlayer].balloonCount}\n              </CountText>\n            </>\n          )}\n          \n          {balloons.filter(b => !b.popped).map(balloon => (\n            <Balloon\n              key={balloon.id}\n              x={balloon.x}\n              y={balloon.y}\n              size={balloon.size}\n              color={balloon.color}\n              speed={balloon.speed}\n              popped={balloon.popped}\n              onClick={(e) => handleBalloonPop(balloon.id, e)}\n            />\n          ))}\n          \n          {splashEffects.map(effect => (\n            <BalloonSplash\n              key={effect.id}\n              x={effect.x}\n              y={effect.y}\n              color={effect.color}\n            />\n          ))}\n        </GameArea>\n      )}\n      \n      {phase === 'result' && (\n        <>\n          <InfoText>\n            Tur Sonu! Oyuncu {activePlayer + 1}\n          </InfoText>\n          \n          <ResultCard>\n            <StatText>\n              Toplam Puan: <StatValue highlight>{players[activePlayer].score}</StatValue>\n            </StatText>\n            <StatText>\n              Patlatılan Balon: <StatValue>{players[activePlayer].balloonCount}</StatValue>\n            </StatText>\n            <StatText>\n              Toplam Tıklama: <StatValue>{players[activePlayer].clicks}</StatValue>\n            </StatText>\n            <StatText>\n              Doğruluk Oranı: <StatValue>{players[activePlayer].accuracy}%</StatValue>\n            </StatText>\n          </ResultCard>\n          \n          <NextButton onClick={nextStep}>\n            {round >= totalRounds ? 'Sonuçları Gör' : 'Sonraki Oyuncu'}\n          </NextButton>\n        </>\n      )}\n      \n      {phase === 'end' && (\n        <>\n          <InfoText>\n            {isTie() \n              ? 'Oyun Bitti! Beraberlik!' \n              : `Oyun Bitti! Kazanan: Oyuncu ${getWinner().id + 1}`\n            }\n          </InfoText>\n          \n          <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '1rem',\n            margin: '1rem 0'\n          }}>\n            {players.map((player, index) => (\n              <div key={player.id} style={{\n                display: 'flex',\n                flexDirection: 'column',\n                width: '100%',\n                maxWidth: '500px',\n                background: player.id === getWinner().id && !isTie() \n                  ? 'rgba(255,255,255,0.15)' \n                  : 'rgba(255,255,255,0.05)',\n                padding: '15px',\n                borderRadius: '10px'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  borderBottom: '1px solid rgba(255,255,255,0.1)',\n                  paddingBottom: '10px',\n                  marginBottom: '10px'\n                }}>\n                  <span style={{ color: PLAYER_COLORS[index], fontWeight: 'bold' }}>\n                    Oyuncu {player.id + 1}\n                  </span>\n                  <span style={{ color: 'white', fontWeight: 'bold' }}>\n                    {player.score} puan\n                  </span>\n                </div>\n                \n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span style={{ color: 'rgba(255,255,255,0.7)' }}>Patlatılan Balon</span>\n                  <span style={{ \n                    color: player.balloonCount === getMostBalloons().balloonCount \n                      ? '#f1c40f' \n                      : 'white'\n                  }}>\n                    {player.balloonCount}\n                  </span>\n                </div>\n                \n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span style={{ color: 'rgba(255,255,255,0.7)' }}>Doğruluk Oranı</span>\n                  <span style={{ \n                    color: player.accuracy === getHighestAccuracy().accuracy \n                      ? '#f1c40f' \n                      : 'white'\n                  }}>\n                    {player.accuracy}%\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <NextButton onClick={() => window.location.reload()}>\n            Tekrar Oyna\n          </NextButton>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default BalloonPop; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}