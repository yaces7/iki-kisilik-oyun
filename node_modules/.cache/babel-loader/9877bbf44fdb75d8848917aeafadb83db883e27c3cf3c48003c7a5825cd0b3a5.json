{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/QuickMathDuel/QuickMathDuel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// Animasyonlar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst shake = keyframes`\n  0% { transform: translateX(0); }\n  25% { transform: translateX(-5px); }\n  50% { transform: translateX(5px); }\n  75% { transform: translateX(-5px); }\n  100% { transform: translateX(0); }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n_c2 = Header;\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0 2rem;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n_c3 = ScoreBoard;\nconst PlayerScore = styled.div`\n  color: ${props => props.color};\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n_c4 = PlayerScore;\nconst MathProblem = styled.div`\n  font-size: 3.5rem;\n  font-weight: bold;\n  margin: 2rem 0;\n  color: white;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.3);\n  padding: 20px 40px;\n  border-radius: 15px;\n  background: linear-gradient(45deg, #3498db, #9b59b6);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n  animation: ${pulse} 1.5s infinite;\n`;\n_c5 = MathProblem;\nconst AnswerGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n  max-width: 500px;\n  margin: 2rem auto;\n`;\n_c6 = AnswerGrid;\nconst AnswerButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #1abc9c);\n  color: white;\n  font-size: 2rem;\n  font-weight: bold;\n  padding: 15px 30px;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  animation: ${props => props.wrong ? shake : 'none'} 0.5s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0,0,0,0.15);\n  }\n`;\n_c7 = AnswerButton;\nconst InfoText = styled.div`\n  font-size: 1.8rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1.5rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 15px 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n_c8 = InfoText;\nconst Timer = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: white;\n  margin: 1rem 0;\n  padding: 10px 20px;\n  border-radius: 10px;\n  background: ${props => props.urgent ? '#e74c3c' : '#3498db'};\n  animation: ${props => props.urgent ? pulse : 'none'} 0.5s infinite;\n`;\n_c9 = Timer;\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 2rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n\n// Sabitler\n_c0 = NextButton;\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\nconst ROUNDS_PER_PLAYER = 3;\nconst TIME_LIMIT = 5; // Saniye cinsinden (10'dan 5'e düşürüldü)\n\nconst generateMathQuestion = difficulty => {\n  // Zorluk seviyesine göre sayı aralığını belirle\n  const max = difficulty === 1 ? 20 : difficulty === 2 ? 50 : 100;\n\n  // İşlem türünü belirle (0: toplama, 1: çıkarma, 2: çarpma, 3: özel zorlu)\n  const operationType = Math.floor(Math.random() * (difficulty > 1 ? 4 : 3));\n  let firstNumber, secondNumber, correctAnswer, question;\n  switch (operationType) {\n    case 0:\n      // Toplama\n      firstNumber = Math.floor(Math.random() * max) + 1;\n      secondNumber = Math.floor(Math.random() * max) + 1;\n      correctAnswer = firstNumber + secondNumber;\n      question = `${firstNumber} + ${secondNumber} = ?`;\n      break;\n    case 1:\n      // Çıkarma\n      firstNumber = Math.floor(Math.random() * max) + 30;\n      secondNumber = Math.floor(Math.random() * (firstNumber - 1)) + 1;\n      correctAnswer = firstNumber - secondNumber;\n      question = `${firstNumber} - ${secondNumber} = ?`;\n      break;\n    case 2:\n      // Çarpma\n      // Zorluğa göre çarpma zorluğunu ayarla\n      if (difficulty === 1) {\n        firstNumber = Math.floor(Math.random() * 10) + 1;\n        secondNumber = Math.floor(Math.random() * 10) + 1;\n      } else if (difficulty === 2) {\n        firstNumber = Math.floor(Math.random() * 15) + 5;\n        secondNumber = Math.floor(Math.random() * 10) + 1;\n      } else {\n        firstNumber = Math.floor(Math.random() * 20) + 10;\n        secondNumber = Math.floor(Math.random() * 15) + 5;\n      }\n      correctAnswer = firstNumber * secondNumber;\n      question = `${firstNumber} × ${secondNumber} = ?`;\n      break;\n    case 3:\n      // Özel zorlu işlemler\n      // Zorluğa göre özel işlemler ekle\n      const specialType = Math.floor(Math.random() * 3);\n      if (specialType === 0) {\n        // İki basamaklı sayı çarpma\n        firstNumber = Math.floor(Math.random() * 90) + 10;\n        secondNumber = Math.floor(Math.random() * 90) + 10;\n        correctAnswer = firstNumber * secondNumber;\n        question = `${firstNumber} × ${secondNumber} = ?`;\n      } else if (specialType === 1) {\n        // Kare alma\n        firstNumber = Math.floor(Math.random() * 20) + 5;\n        correctAnswer = firstNumber * firstNumber;\n        question = `${firstNumber}² = ?`;\n      } else {\n        // İki toplamın çarpımı\n        firstNumber = Math.floor(Math.random() * 10) + 5;\n        secondNumber = Math.floor(Math.random() * 10) + 5;\n        const thirdNumber = Math.floor(Math.random() * 10) + 5;\n        const fourthNumber = Math.floor(Math.random() * 10) + 5;\n        correctAnswer = (firstNumber + secondNumber) * (thirdNumber + fourthNumber);\n        question = `(${firstNumber} + ${secondNumber}) × (${thirdNumber} + ${fourthNumber}) = ?`;\n      }\n      break;\n    default:\n      firstNumber = Math.floor(Math.random() * max) + 1;\n      secondNumber = Math.floor(Math.random() * max) + 1;\n      correctAnswer = firstNumber + secondNumber;\n      question = `${firstNumber} + ${secondNumber} = ?`;\n  }\n\n  // Cevap seçenekleri oluştur\n  const options = [correctAnswer];\n\n  // Yakın ama yanlış cevaplar ekle\n  while (options.length < 4) {\n    // Daha geniş bir hata aralığı belirle (zor sorularda yakın cevaplar olsun)\n    const maxOffset = Math.max(5, Math.floor(correctAnswer * 0.2)); // Cevabın %20'si kadar sapma olabilir\n    const offset = Math.floor(Math.random() * maxOffset) + 1;\n    const sign = Math.random() > 0.5 ? 1 : -1;\n    const wrongAnswer = correctAnswer + offset * sign;\n\n    // Negatif sayılar ve tekrarlar olmasın\n    if (wrongAnswer > 0 && !options.includes(wrongAnswer)) {\n      options.push(wrongAnswer);\n    }\n  }\n\n  // Seçenekleri karıştır\n  return {\n    question,\n    correctAnswer,\n    options: options.sort(() => Math.random() - 0.5)\n  };\n};\nconst QuickMathDuel = ({\n  playerCount\n}) => {\n  _s();\n  const [players, setPlayers] = useState(Array.from({\n    length: playerCount\n  }, (_, i) => ({\n    id: i,\n    score: 0\n  })));\n  const [activePlayer, setActivePlayer] = useState(0);\n  const [phase, setPhase] = useState('ready');\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [round, setRound] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(TIME_LIMIT);\n  const [timerActive, setTimerActive] = useState(false);\n  const [difficulty, setDifficulty] = useState(1);\n\n  // Toplam tur sayısı\n  const totalRounds = playerCount * ROUNDS_PER_PLAYER;\n\n  // Zamanlayıcı\n  useEffect(() => {\n    let timer;\n    if (timerActive && timeLeft > 0) {\n      timer = setTimeout(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timerActive && timeLeft === 0) {\n      // Süre doldu\n      handleAnswer(null);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [timerActive, timeLeft]);\n\n  // Yeni soru hazırla\n  const prepareQuestion = () => {\n    // Oyuncu ilerledikçe zorluğu artır\n    let currentDifficulty = 1;\n    if (round > totalRounds / 3) currentDifficulty = 2;\n    if (round > totalRounds * 2 / 3) currentDifficulty = 3;\n    setDifficulty(currentDifficulty);\n    const question = generateMathQuestion(currentDifficulty);\n    setCurrentQuestion(question);\n    setSelectedAnswer(null);\n    setTimeLeft(TIME_LIMIT);\n    setTimerActive(true);\n    setPhase('question');\n  };\n\n  // Cevap kontrolü\n  const handleAnswer = answer => {\n    setTimerActive(false);\n    if (answer === null) {\n      // Süre doldu, cevap vermedi\n      setIsCorrect(false);\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return {\n            ...p,\n            score: Math.max(0, p.score - 5)\n          }; // Minimum 0 puan\n        }\n        return p;\n      }));\n    } else {\n      setSelectedAnswer(answer);\n      const correct = answer === (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.correctAnswer);\n      setIsCorrect(correct);\n\n      // Skoru güncelle\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          const scoreChange = correct ? 10 : -5;\n          return {\n            ...p,\n            score: Math.max(0, p.score + scoreChange)\n          }; // Minimum 0 puan\n        }\n        return p;\n      }));\n    }\n    setPhase('result');\n\n    // 2 saniye sonra sonucu göster ve sonraki tura geç\n    setTimeout(() => {\n      const newRound = round + 1;\n      setRound(newRound);\n      if (newRound >= totalRounds) {\n        setPhase('end');\n      } else {\n        setActivePlayer((activePlayer + 1) % playerCount);\n        setPhase('ready');\n      }\n    }, 2000);\n  };\n\n  // Kazananı bul\n  const winner = players.reduce((max, p) => p.score > max.score ? p : max, players[0]);\n\n  // Beraberlik durumu\n  const isTie = players.filter(p => p.score === winner.score).length > 1;\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"H\\u0131zl\\u0131 Matematik D\\xFCellosu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n        color: PLAYER_COLORS[index],\n        active: activePlayer === index && phase !== 'end',\n        children: [\"Oyuncu \", index + 1, \": \", player.score]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), phase === 'ready' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"S\\u0131ra: Oyuncu \", activePlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: prepareQuestion,\n        children: \"Haz\\u0131r\\u0131m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), phase === 'question' && currentQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: \"Do\\u011Fru cevab\\u0131 se\\xE7!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        urgent: timeLeft <= 3,\n        children: [\"Kalan S\\xFCre: \", timeLeft, \" sn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MathProblem, {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerGrid, {\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(AnswerButton, {\n          onClick: () => handleAnswer(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), phase === 'result' && /*#__PURE__*/_jsxDEV(InfoText, {\n      children: selectedAnswer === null ? '⏱️ Süre Doldu!' : isCorrect ? '✅ Doğru Cevap!' : '❌ Yanlış Cevap!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }, this), phase === 'end' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: isTie ? 'Oyun Bitti! Beraberlik!' : `Oyun Bitti! Kazanan: Oyuncu ${winner.id + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n          color: PLAYER_COLORS[index],\n          active: player.id === winner.id && !isTie,\n          children: [\"Oyuncu \", index + 1, \": \", player.score]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: () => window.location.reload(),\n        children: \"Tekrar Oyna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(QuickMathDuel, \"q8rNS1pORsKgiYPVA9Ho5/Fp9VQ=\");\n_c1 = QuickMathDuel;\nexport default QuickMathDuel;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ScoreBoard\");\n$RefreshReg$(_c4, \"PlayerScore\");\n$RefreshReg$(_c5, \"MathProblem\");\n$RefreshReg$(_c6, \"AnswerGrid\");\n$RefreshReg$(_c7, \"AnswerButton\");\n$RefreshReg$(_c8, \"InfoText\");\n$RefreshReg$(_c9, \"Timer\");\n$RefreshReg$(_c0, \"NextButton\");\n$RefreshReg$(_c1, \"QuickMathDuel\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","jsxDEV","_jsxDEV","Fragment","_Fragment","fadeIn","pulse","shake","GameContainer","div","_c","Header","h2","_c2","ScoreBoard","_c3","PlayerScore","props","color","active","_c4","MathProblem","_c5","AnswerGrid","_c6","AnswerButton","button","wrong","_c7","InfoText","_c8","Timer","urgent","_c9","NextButton","_c0","PLAYER_COLORS","ROUNDS_PER_PLAYER","TIME_LIMIT","generateMathQuestion","difficulty","max","operationType","Math","floor","random","firstNumber","secondNumber","correctAnswer","question","specialType","thirdNumber","fourthNumber","options","length","maxOffset","offset","sign","wrongAnswer","includes","push","sort","QuickMathDuel","playerCount","_s","players","setPlayers","Array","from","_","i","id","score","activePlayer","setActivePlayer","phase","setPhase","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","round","setRound","timeLeft","setTimeLeft","timerActive","setTimerActive","setDifficulty","totalRounds","timer","setTimeout","prev","handleAnswer","clearTimeout","prepareQuestion","currentDifficulty","answer","map","p","correct","scoreChange","newRound","winner","reduce","isTie","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","player","index","onClick","option","window","location","reload","_c1","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/QuickMathDuel/QuickMathDuel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// Animasyonlar\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\nconst shake = keyframes`\n  0% { transform: translateX(0); }\n  25% { transform: translateX(-5px); }\n  50% { transform: translateX(5px); }\n  75% { transform: translateX(-5px); }\n  100% { transform: translateX(0); }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0 2rem;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n\nconst PlayerScore = styled.div<{ color: string, active: boolean }>`\n  color: ${props => props.color};\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n\nconst MathProblem = styled.div`\n  font-size: 3.5rem;\n  font-weight: bold;\n  margin: 2rem 0;\n  color: white;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.3);\n  padding: 20px 40px;\n  border-radius: 15px;\n  background: linear-gradient(45deg, #3498db, #9b59b6);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n  animation: ${pulse} 1.5s infinite;\n`;\n\nconst AnswerGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n  max-width: 500px;\n  margin: 2rem auto;\n`;\n\nconst AnswerButton = styled.button<{ wrong?: boolean }>`\n  background: linear-gradient(45deg, #2ecc71, #1abc9c);\n  color: white;\n  font-size: 2rem;\n  font-weight: bold;\n  padding: 15px 30px;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  animation: ${props => props.wrong ? shake : 'none'} 0.5s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0,0,0,0.15);\n  }\n`;\n\nconst InfoText = styled.div`\n  font-size: 1.8rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1.5rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 15px 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n\nconst Timer = styled.div<{ urgent?: boolean }>`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: white;\n  margin: 1rem 0;\n  padding: 10px 20px;\n  border-radius: 10px;\n  background: ${props => props.urgent ? '#e74c3c' : '#3498db'};\n  animation: ${props => props.urgent ? pulse : 'none'} 0.5s infinite;\n`;\n\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 2rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n\n// Sabitler\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\nconst ROUNDS_PER_PLAYER = 3;\nconst TIME_LIMIT = 5; // Saniye cinsinden (10'dan 5'e düşürüldü)\n\ninterface Player {\n  id: number;\n  score: number;\n}\n\ninterface MathQuestion {\n  question: string;\n  correctAnswer: number;\n  options: number[];\n}\n\nconst generateMathQuestion = (difficulty: number): MathQuestion => {\n  // Zorluk seviyesine göre sayı aralığını belirle\n  const max = difficulty === 1 ? 20 : (difficulty === 2 ? 50 : 100);\n  \n  // İşlem türünü belirle (0: toplama, 1: çıkarma, 2: çarpma, 3: özel zorlu)\n  const operationType = Math.floor(Math.random() * (difficulty > 1 ? 4 : 3));\n  \n  let firstNumber: number, secondNumber: number, correctAnswer: number, question: string;\n  \n  switch (operationType) {\n    case 0: // Toplama\n      firstNumber = Math.floor(Math.random() * max) + 1;\n      secondNumber = Math.floor(Math.random() * max) + 1;\n      correctAnswer = firstNumber + secondNumber;\n      question = `${firstNumber} + ${secondNumber} = ?`;\n      break;\n    case 1: // Çıkarma\n      firstNumber = Math.floor(Math.random() * max) + 30;\n      secondNumber = Math.floor(Math.random() * (firstNumber - 1)) + 1;\n      correctAnswer = firstNumber - secondNumber;\n      question = `${firstNumber} - ${secondNumber} = ?`;\n      break;\n    case 2: // Çarpma\n      // Zorluğa göre çarpma zorluğunu ayarla\n      if (difficulty === 1) {\n        firstNumber = Math.floor(Math.random() * 10) + 1;\n        secondNumber = Math.floor(Math.random() * 10) + 1;\n      } else if (difficulty === 2) {\n        firstNumber = Math.floor(Math.random() * 15) + 5;\n        secondNumber = Math.floor(Math.random() * 10) + 1;\n      } else {\n        firstNumber = Math.floor(Math.random() * 20) + 10;\n        secondNumber = Math.floor(Math.random() * 15) + 5;\n      }\n      correctAnswer = firstNumber * secondNumber;\n      question = `${firstNumber} × ${secondNumber} = ?`;\n      break;\n    case 3: // Özel zorlu işlemler\n      // Zorluğa göre özel işlemler ekle\n      const specialType = Math.floor(Math.random() * 3);\n      \n      if (specialType === 0) {\n        // İki basamaklı sayı çarpma\n        firstNumber = Math.floor(Math.random() * 90) + 10;\n        secondNumber = Math.floor(Math.random() * 90) + 10;\n        correctAnswer = firstNumber * secondNumber;\n        question = `${firstNumber} × ${secondNumber} = ?`;\n      } else if (specialType === 1) {\n        // Kare alma\n        firstNumber = Math.floor(Math.random() * 20) + 5;\n        correctAnswer = firstNumber * firstNumber;\n        question = `${firstNumber}² = ?`;\n      } else {\n        // İki toplamın çarpımı\n        firstNumber = Math.floor(Math.random() * 10) + 5;\n        secondNumber = Math.floor(Math.random() * 10) + 5;\n        const thirdNumber = Math.floor(Math.random() * 10) + 5;\n        const fourthNumber = Math.floor(Math.random() * 10) + 5;\n        correctAnswer = (firstNumber + secondNumber) * (thirdNumber + fourthNumber);\n        question = `(${firstNumber} + ${secondNumber}) × (${thirdNumber} + ${fourthNumber}) = ?`;\n      }\n      break;\n    default:\n      firstNumber = Math.floor(Math.random() * max) + 1;\n      secondNumber = Math.floor(Math.random() * max) + 1;\n      correctAnswer = firstNumber + secondNumber;\n      question = `${firstNumber} + ${secondNumber} = ?`;\n  }\n  \n  // Cevap seçenekleri oluştur\n  const options = [correctAnswer];\n  \n  // Yakın ama yanlış cevaplar ekle\n  while (options.length < 4) {\n    // Daha geniş bir hata aralığı belirle (zor sorularda yakın cevaplar olsun)\n    const maxOffset = Math.max(5, Math.floor(correctAnswer * 0.2)); // Cevabın %20'si kadar sapma olabilir\n    const offset = Math.floor(Math.random() * maxOffset) + 1;\n    const sign = Math.random() > 0.5 ? 1 : -1;\n    const wrongAnswer = correctAnswer + (offset * sign);\n    \n    // Negatif sayılar ve tekrarlar olmasın\n    if (wrongAnswer > 0 && !options.includes(wrongAnswer)) {\n      options.push(wrongAnswer);\n    }\n  }\n  \n  // Seçenekleri karıştır\n  return {\n    question,\n    correctAnswer,\n    options: options.sort(() => Math.random() - 0.5)\n  };\n};\n\nconst QuickMathDuel: React.FC<{ playerCount: number }> = ({ playerCount }) => {\n  const [players, setPlayers] = useState<Player[]>(\n    Array.from({ length: playerCount }, (_, i) => ({ id: i, score: 0 }))\n  );\n  const [activePlayer, setActivePlayer] = useState(0);\n  const [phase, setPhase] = useState<'ready' | 'question' | 'result' | 'end'>('ready');\n  const [currentQuestion, setCurrentQuestion] = useState<MathQuestion | null>(null);\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [isCorrect, setIsCorrect] = useState<boolean>(false);\n  const [round, setRound] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(TIME_LIMIT);\n  const [timerActive, setTimerActive] = useState(false);\n  const [difficulty, setDifficulty] = useState(1);\n  \n  // Toplam tur sayısı\n  const totalRounds = playerCount * ROUNDS_PER_PLAYER;\n  \n  // Zamanlayıcı\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    \n    if (timerActive && timeLeft > 0) {\n      timer = setTimeout(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timerActive && timeLeft === 0) {\n      // Süre doldu\n      handleAnswer(null);\n    }\n    \n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [timerActive, timeLeft]);\n  \n  // Yeni soru hazırla\n  const prepareQuestion = () => {\n    // Oyuncu ilerledikçe zorluğu artır\n    let currentDifficulty = 1;\n    if (round > totalRounds / 3) currentDifficulty = 2;\n    if (round > (totalRounds * 2) / 3) currentDifficulty = 3;\n    \n    setDifficulty(currentDifficulty);\n    const question = generateMathQuestion(currentDifficulty);\n    setCurrentQuestion(question);\n    setSelectedAnswer(null);\n    setTimeLeft(TIME_LIMIT);\n    setTimerActive(true);\n    setPhase('question');\n  };\n  \n  // Cevap kontrolü\n  const handleAnswer = (answer: number | null) => {\n    setTimerActive(false);\n    \n    if (answer === null) {\n      // Süre doldu, cevap vermedi\n      setIsCorrect(false);\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return { ...p, score: Math.max(0, p.score - 5) }; // Minimum 0 puan\n        }\n        return p;\n      }));\n    } else {\n      setSelectedAnswer(answer);\n      const correct = answer === currentQuestion?.correctAnswer;\n      setIsCorrect(correct);\n      \n      // Skoru güncelle\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          const scoreChange = correct ? 10 : -5;\n          return { ...p, score: Math.max(0, p.score + scoreChange) }; // Minimum 0 puan\n        }\n        return p;\n      }));\n    }\n    \n    setPhase('result');\n    \n    // 2 saniye sonra sonucu göster ve sonraki tura geç\n    setTimeout(() => {\n      const newRound = round + 1;\n      setRound(newRound);\n      \n      if (newRound >= totalRounds) {\n        setPhase('end');\n      } else {\n        setActivePlayer((activePlayer + 1) % playerCount);\n        setPhase('ready');\n      }\n    }, 2000);\n  };\n  \n  // Kazananı bul\n  const winner = players.reduce(\n    (max, p) => p.score > max.score ? p : max, \n    players[0]\n  );\n  \n  // Beraberlik durumu\n  const isTie = players.filter(p => p.score === winner.score).length > 1;\n  \n  return (\n    <GameContainer>\n      <Header>Hızlı Matematik Düellosu</Header>\n      \n      <ScoreBoard>\n        {players.map((player, index) => (\n          <PlayerScore \n            key={player.id} \n            color={PLAYER_COLORS[index]} \n            active={activePlayer === index && phase !== 'end'}\n          >\n            Oyuncu {index + 1}: {player.score}\n          </PlayerScore>\n        ))}\n      </ScoreBoard>\n      \n      {phase === 'ready' && (\n        <>\n          <InfoText>Sıra: Oyuncu {activePlayer + 1}</InfoText>\n          <NextButton onClick={prepareQuestion}>Hazırım</NextButton>\n        </>\n      )}\n      \n      {phase === 'question' && currentQuestion && (\n        <>\n          <InfoText>Doğru cevabı seç!</InfoText>\n          <Timer urgent={timeLeft <= 3}>Kalan Süre: {timeLeft} sn</Timer>\n          <MathProblem>{currentQuestion.question}</MathProblem>\n          \n          <AnswerGrid>\n            {currentQuestion.options.map((option, index) => (\n              <AnswerButton \n                key={index} \n                onClick={() => handleAnswer(option)}\n              >\n                {option}\n              </AnswerButton>\n            ))}\n          </AnswerGrid>\n        </>\n      )}\n      \n      {phase === 'result' && (\n        <InfoText>\n          {selectedAnswer === null \n            ? '⏱️ Süre Doldu!' \n            : isCorrect \n              ? '✅ Doğru Cevap!' \n              : '❌ Yanlış Cevap!'\n          }\n        </InfoText>\n      )}\n      \n      {phase === 'end' && (\n        <>\n          <InfoText>\n            {isTie \n              ? 'Oyun Bitti! Beraberlik!' \n              : `Oyun Bitti! Kazanan: Oyuncu ${winner.id + 1}`\n            }\n          </InfoText>\n          <ScoreBoard>\n            {players.map((player, index) => (\n              <PlayerScore \n                key={player.id} \n                color={PLAYER_COLORS[index]}\n                active={player.id === winner.id && !isTie}\n              >\n                Oyuncu {index + 1}: {player.score}\n              </PlayerScore>\n            ))}\n          </ScoreBoard>\n          <NextButton onClick={() => window.location.reload()}>\n            Tekrar Oyna\n          </NextButton>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default QuickMathDuel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}