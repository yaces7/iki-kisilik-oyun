{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Tank from './Tank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n_c = GameArea;\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n_c2 = GameGrid;\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n_c3 = Grass;\nconst Bullet = styled.div`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  transform: rotate(${props => props.rotation}deg);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n`;\n_c4 = Bullet;\nconst HealthBar = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n_c5 = HealthBar;\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n_c6 = Controls;\nconst ControlButton = styled.button`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n_c7 = ControlButton;\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\n_c8 = FireButton;\nconst playerColors = {\n  1: '#e74c3c',\n  // Kırmızı\n  2: '#3498db',\n  // Mavi\n  3: '#2ecc71',\n  // Yeşil\n  4: '#f1c40f' // Sarı\n};\nconst TankGame = ({\n  playerCount,\n  deviceType\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const [activePlayer, setActivePlayer] = useState(1);\n  useEffect(() => {\n    const initialPlayers = Array.from({\n      length: playerCount\n    }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: window.innerWidth / (playerCount + 1) * (i + 1),\n        y: window.innerHeight / 2\n      },\n      rotation: 0,\n      health: 100,\n      isMoving: false\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n  const movePlayer = useCallback((playerId, direction) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => {\n      if (player.id === playerId) {\n        const speed = 5;\n        let newX = player.position.x;\n        let newY = player.position.y;\n        let newRotation = player.rotation;\n        switch (direction) {\n          case 'up':\n            newY -= speed;\n            newRotation = 0;\n            break;\n          case 'down':\n            newY += speed;\n            newRotation = 180;\n            break;\n          case 'left':\n            newX -= speed;\n            newRotation = 270;\n            break;\n          case 'right':\n            newX += speed;\n            newRotation = 90;\n            break;\n        }\n\n        // Sınırları kontrol et\n        newX = Math.max(0, Math.min(window.innerWidth - 60, newX));\n        newY = Math.max(0, Math.min(window.innerHeight - 60, newY));\n        return {\n          ...player,\n          position: {\n            x: newX,\n            y: newY\n          },\n          rotation: newRotation,\n          isMoving: true\n        };\n      }\n      return {\n        ...player,\n        isMoving: false\n      };\n    }));\n  }, []);\n  const fireBullet = useCallback(playerId => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n    const bullet = {\n      id: Date.now(),\n      playerId,\n      position: {\n        ...player.position\n      },\n      rotation: player.rotation\n    };\n    setBullets(prev => [...prev, bullet]);\n  }, [players]);\n\n  // Mermi hareketi ve çarpışma kontrolü\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets.map(bullet => {\n          const speed = 10;\n          let newX = bullet.position.x;\n          let newY = bullet.position.y;\n          switch (bullet.rotation) {\n            case 0:\n              // Yukarı\n              newY -= speed;\n              break;\n            case 90:\n              // Sağ\n              newX += speed;\n              break;\n            case 180:\n              // Aşağı\n              newY += speed;\n              break;\n            case 270:\n              // Sol\n              newX -= speed;\n              break;\n          }\n\n          // Ekran dışına çıkan mermileri sil\n          if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n            return null;\n          }\n          return {\n            ...bullet,\n            position: {\n              x: newX,\n              y: newY\n            }\n          };\n        }).filter(bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (deviceType !== 'computer') return;\n      const keyMap = {\n        'w': {\n          playerId: 1,\n          direction: 'up'\n        },\n        's': {\n          playerId: 1,\n          direction: 'down'\n        },\n        'a': {\n          playerId: 1,\n          direction: 'left'\n        },\n        'd': {\n          playerId: 1,\n          direction: 'right'\n        },\n        'f': {\n          playerId: 2,\n          direction: 'up'\n        },\n        'h': {\n          playerId: 2,\n          direction: 'down'\n        },\n        'g': {\n          playerId: 2,\n          direction: 'left'\n        },\n        't': {\n          playerId: 2,\n          direction: 'right'\n        },\n        'i': {\n          playerId: 3,\n          direction: 'up'\n        },\n        'k': {\n          playerId: 3,\n          direction: 'down'\n        },\n        'j': {\n          playerId: 3,\n          direction: 'left'\n        },\n        'l': {\n          playerId: 3,\n          direction: 'right'\n        }\n      };\n      const action = keyMap[e.key.toLowerCase()];\n      if (action) {\n        movePlayer(action.playerId, action.direction);\n      }\n\n      // Ateş etme tuşları\n      if (e.key === 'e' && activePlayer === 1) fireBullet(1);\n      if (e.key === 'y' && activePlayer === 2) fireBullet(2);\n      if (e.key === 'o' && activePlayer === 3) fireBullet(3);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [deviceType, movePlayer, fireBullet, activePlayer]);\n  return /*#__PURE__*/_jsxDEV(GameArea, {\n    children: [/*#__PURE__*/_jsxDEV(GameGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grass, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), players.map(player => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HealthBar, {\n        health: player.health,\n        color: playerColors[player.id],\n        style: {\n          left: player.position.x + 10,\n          top: player.position.y - 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tank, {\n        color: playerColors[player.id],\n        rotation: player.rotation,\n        position: player.position,\n        isMoving: player.isMoving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, player.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)), bullets.map(bullet => /*#__PURE__*/_jsxDEV(Bullet, {\n      rotation: bullet.rotation,\n      style: {\n        left: bullet.position.x + 26,\n        top: bullet.position.y + 26\n      }\n    }, bullet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)), deviceType === 'phone' && /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[activePlayer],\n        onClick: () => movePlayer(activePlayer, 'left'),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[activePlayer],\n        onClick: () => movePlayer(activePlayer, 'up'),\n        children: \"\\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[activePlayer],\n        onClick: () => movePlayer(activePlayer, 'down'),\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        color: playerColors[activePlayer],\n        onClick: () => movePlayer(activePlayer, 'right'),\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FireButton, {\n        color: playerColors[activePlayer],\n        onClick: () => fireBullet(activePlayer),\n        children: \"\\uD83D\\uDD25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(TankGame, \"WpbH7X9Pme/mDbW5vyDzBcBUB2U=\");\n_c9 = TankGame;\nexport default TankGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameArea\");\n$RefreshReg$(_c2, \"GameGrid\");\n$RefreshReg$(_c3, \"Grass\");\n$RefreshReg$(_c4, \"Bullet\");\n$RefreshReg$(_c5, \"HealthBar\");\n$RefreshReg$(_c6, \"Controls\");\n$RefreshReg$(_c7, \"ControlButton\");\n$RefreshReg$(_c8, \"FireButton\");\n$RefreshReg$(_c9, \"TankGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","Tank","jsxDEV","_jsxDEV","GameArea","div","_c","GameGrid","_c2","Grass","_c3","Bullet","props","rotation","_c4","HealthBar","health","color","_c5","Controls","_c6","ControlButton","button","_c7","FireButton","_c8","playerColors","TankGame","playerCount","deviceType","_s","players","setPlayers","bullets","setBullets","activePlayer","setActivePlayer","initialPlayers","Array","from","length","_","i","id","position","x","window","innerWidth","y","innerHeight","isMoving","movePlayer","playerId","direction","prevPlayers","map","player","speed","newX","newY","newRotation","Math","max","min","fireBullet","find","p","bullet","Date","now","prev","bulletInterval","setInterval","prevBullets","filter","clearInterval","handleKeyDown","e","keyMap","action","key","toLowerCase","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","style","left","top","onClick","_c9","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Tank from './Tank';\n\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n\nconst Bullet = styled.div<{ rotation: number }>`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  transform: rotate(${props => props.rotation}deg);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n`;\n\nconst HealthBar = styled.div<{ health: number; color: string }>`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n\nconst ControlButton = styled.button<{ color: string }>`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\n\nconst playerColors: Record<1 | 2 | 3 | 4, string> = {\n  1: '#e74c3c', // Kırmızı\n  2: '#3498db', // Mavi\n  3: '#2ecc71', // Yeşil\n  4: '#f1c40f'  // Sarı\n};\n\ninterface Player {\n  id: number;\n  position: { x: number; y: number };\n  rotation: number;\n  health: number;\n  isMoving: boolean;\n}\n\ninterface Bullet {\n  id: number;\n  playerId: number;\n  position: { x: number; y: number };\n  rotation: number;\n}\n\nconst TankGame: React.FC<{ \n  playerCount: number;\n  deviceType: 'computer' | 'phone';\n}> = ({ playerCount, deviceType }) => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [bullets, setBullets] = useState<Bullet[]>([]);\n  const [activePlayer, setActivePlayer] = useState<1 | 2 | 3 | 4>(1);\n\n  useEffect(() => {\n    const initialPlayers: Player[] = Array.from({ length: playerCount }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: window.innerWidth / (playerCount + 1) * (i + 1),\n        y: window.innerHeight / 2\n      },\n      rotation: 0,\n      health: 100,\n      isMoving: false\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n\n  const movePlayer = useCallback((playerId: number, direction: 'up' | 'down' | 'left' | 'right') => {\n    setPlayers(prevPlayers => \n      prevPlayers.map(player => {\n        if (player.id === playerId) {\n          const speed = 5;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let newRotation = player.rotation;\n\n          switch (direction) {\n            case 'up':\n              newY -= speed;\n              newRotation = 0;\n              break;\n            case 'down':\n              newY += speed;\n              newRotation = 180;\n              break;\n            case 'left':\n              newX -= speed;\n              newRotation = 270;\n              break;\n            case 'right':\n              newX += speed;\n              newRotation = 90;\n              break;\n          }\n\n          // Sınırları kontrol et\n          newX = Math.max(0, Math.min(window.innerWidth - 60, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - 60, newY));\n\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            rotation: newRotation,\n            isMoving: true\n          };\n        }\n        return {\n          ...player,\n          isMoving: false\n        };\n      })\n    );\n  }, []);\n\n  const fireBullet = useCallback((playerId: number) => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n\n    const bullet: Bullet = {\n      id: Date.now(),\n      playerId,\n      position: { ...player.position },\n      rotation: player.rotation\n    };\n\n    setBullets(prev => [...prev, bullet]);\n  }, [players]);\n\n  // Mermi hareketi ve çarpışma kontrolü\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets\n          .map(bullet => {\n            const speed = 10;\n            let newX = bullet.position.x;\n            let newY = bullet.position.y;\n\n            switch (bullet.rotation) {\n              case 0: // Yukarı\n                newY -= speed;\n                break;\n              case 90: // Sağ\n                newX += speed;\n                break;\n              case 180: // Aşağı\n                newY += speed;\n                break;\n              case 270: // Sol\n                newX -= speed;\n                break;\n            }\n\n            // Ekran dışına çıkan mermileri sil\n            if (newX < 0 || newX > window.innerWidth || \n                newY < 0 || newY > window.innerHeight) {\n              return null;\n            }\n\n            return {\n              ...bullet,\n              position: { x: newX, y: newY }\n            };\n          })\n          .filter((bullet): bullet is Bullet => bullet !== null);\n      });\n    }, 16);\n\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (deviceType !== 'computer') return;\n\n      const keyMap: { [key: string]: { playerId: number; direction: 'up' | 'down' | 'left' | 'right' } } = {\n        'w': { playerId: 1, direction: 'up' },\n        's': { playerId: 1, direction: 'down' },\n        'a': { playerId: 1, direction: 'left' },\n        'd': { playerId: 1, direction: 'right' },\n        'f': { playerId: 2, direction: 'up' },\n        'h': { playerId: 2, direction: 'down' },\n        'g': { playerId: 2, direction: 'left' },\n        't': { playerId: 2, direction: 'right' },\n        'i': { playerId: 3, direction: 'up' },\n        'k': { playerId: 3, direction: 'down' },\n        'j': { playerId: 3, direction: 'left' },\n        'l': { playerId: 3, direction: 'right' },\n      };\n\n      const action = keyMap[e.key.toLowerCase()];\n      if (action) {\n        movePlayer(action.playerId, action.direction);\n      }\n\n      // Ateş etme tuşları\n      if (e.key === 'e' && activePlayer === 1) fireBullet(1);\n      if (e.key === 'y' && activePlayer === 2) fireBullet(2);\n      if (e.key === 'o' && activePlayer === 3) fireBullet(3);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [deviceType, movePlayer, fireBullet, activePlayer]);\n\n  return (\n    <GameArea>\n      <GameGrid />\n      <Grass />\n      {players.map(player => (\n        <React.Fragment key={player.id}>\n          <HealthBar \n            health={player.health}\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            style={{\n              left: player.position.x + 10,\n              top: player.position.y - 10\n            }}\n          />\n          <Tank\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            rotation={player.rotation}\n            position={player.position}\n            isMoving={player.isMoving}\n          />\n        </React.Fragment>\n      ))}\n      {bullets.map(bullet => (\n        <Bullet\n          key={bullet.id}\n          rotation={bullet.rotation}\n          style={{\n            left: bullet.position.x + 26,\n            top: bullet.position.y + 26\n          }}\n        />\n      ))}\n      {deviceType === 'phone' && (\n        <Controls>\n          <ControlButton \n            color={playerColors[activePlayer]}\n            onClick={() => movePlayer(activePlayer, 'left')}\n          >\n            ←\n          </ControlButton>\n          <ControlButton \n            color={playerColors[activePlayer]}\n            onClick={() => movePlayer(activePlayer, 'up')}\n          >\n            ↑\n          </ControlButton>\n          <ControlButton \n            color={playerColors[activePlayer]}\n            onClick={() => movePlayer(activePlayer, 'down')}\n          >\n            ↓\n          </ControlButton>\n          <ControlButton \n            color={playerColors[activePlayer]}\n            onClick={() => movePlayer(activePlayer, 'right')}\n          >\n            →\n          </ControlButton>\n          <FireButton\n            color={playerColors[activePlayer]}\n            onClick={() => fireBullet(activePlayer)}\n          >\n            🔥\n          </FireButton>\n        </Controls>\n      )}\n    </GameArea>\n  );\n};\n\nexport default TankGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}