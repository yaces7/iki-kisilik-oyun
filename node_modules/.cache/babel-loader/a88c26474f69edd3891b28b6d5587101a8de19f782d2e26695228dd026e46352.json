{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Tank from './Tank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n_c = GameArea;\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n_c2 = GameGrid;\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n_c3 = Grass;\nconst Bullet = styled.div`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  transform: rotate(${props => props.rotation}deg);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n`;\n_c4 = Bullet;\nconst HealthBar = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n_c5 = HealthBar;\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\nconst ControlButton = styled.button`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\nconst CornerButton = styled.button`\n  position: absolute;\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  color: #fff;\n  font-size: 2.5rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n  z-index: 10;\n  cursor: pointer;\n  opacity: 0.95;\n  ${props => props.position === 'bottomLeft' && 'left: 30px; bottom: 30px;'}\n  ${props => props.position === 'bottomRight' && 'right: 30px; bottom: 30px;'}\n  ${props => props.position === 'topLeft' && 'left: 30px; top: 30px;'}\n  ${props => props.position === 'topRight' && 'right: 30px; top: 30px;'}\n`;\n_c6 = CornerButton;\nconst playerColors = {\n  1: '#e74c3c',\n  // Kırmızı\n  2: '#3498db',\n  // Mavi\n  3: '#2ecc71',\n  // Yeşil\n  4: '#f1c40f' // Sarı\n};\nconst cornerPositions = ['bottomLeft',\n// 1. oyuncu\n'bottomRight',\n// 2. oyuncu\n'topLeft',\n// 3. oyuncu\n'topRight' // 4. oyuncu\n];\nconst TANK_SIZE = 60;\nconst CANNON_LENGTH = 30;\nconst TankGame = ({\n  playerCount,\n  deviceType\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const [rotating, setRotating] = useState({});\n  const [moving, setMoving] = useState({});\n  const [activePlayer, setActivePlayer] = useState(1);\n  useEffect(() => {\n    const initialPlayers = Array.from({\n      length: playerCount\n    }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: window.innerWidth / (playerCount + 1) * (i + 1),\n        y: window.innerHeight / 2\n      },\n      rotation: 0,\n      health: 100,\n      isMoving: false\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n  const movePlayer = useCallback((playerId, direction) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => {\n      if (player.id === playerId) {\n        const speed = 5;\n        let newX = player.position.x;\n        let newY = player.position.y;\n        let newRotation = player.rotation;\n        switch (direction) {\n          case 'up':\n            newY -= speed;\n            newRotation = 0;\n            break;\n          case 'down':\n            newY += speed;\n            newRotation = 180;\n            break;\n          case 'left':\n            newX -= speed;\n            newRotation = 270;\n            break;\n          case 'right':\n            newX += speed;\n            newRotation = 90;\n            break;\n        }\n\n        // Sınırları kontrol et\n        newX = Math.max(0, Math.min(window.innerWidth - 60, newX));\n        newY = Math.max(0, Math.min(window.innerHeight - 60, newY));\n        return {\n          ...player,\n          position: {\n            x: newX,\n            y: newY\n          },\n          rotation: newRotation,\n          isMoving: true\n        };\n      }\n      return {\n        ...player,\n        isMoving: false\n      };\n    }));\n  }, []);\n  const fireBullet = useCallback(playerId => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n    const rad = player.rotation * Math.PI / 180;\n    // Tankın merkezinden namlu ucuna offset\n    const offsetX = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const offsetY = -Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const bullet = {\n      id: Date.now() + Math.random(),\n      playerId,\n      position: {\n        x: player.position.x + TANK_SIZE / 2 + offsetX - 4,\n        // 4: mermi yarıçapı\n        y: player.position.y + TANK_SIZE / 2 + offsetY - 4\n      },\n      rotation: player.rotation\n    };\n    setBullets(prev => [...prev, bullet]);\n  }, [players]);\n\n  // Mermi hareketi ve çarpışma kontrolü\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets.map(bullet => {\n          const speed = 10;\n          let newX = bullet.position.x + Math.sin(bullet.rotation * Math.PI / 180) * speed;\n          let newY = bullet.position.y - Math.cos(bullet.rotation * Math.PI / 180) * speed;\n          if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n            return null;\n          }\n          return {\n            ...bullet,\n            position: {\n              x: newX,\n              y: newY\n            }\n          };\n        }).filter(bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  // Başlangıçta tanklar dönüyor, hareket etmiyor\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const initialRotating = {};\n    const initialMoving = {};\n    for (let i = 1; i <= playerCount; i++) {\n      initialRotating[i] = true;\n      initialMoving[i] = false;\n    }\n    setRotating(initialRotating);\n    setMoving(initialMoving);\n  }, [playerCount, deviceType]);\n\n  // Tanklar sadece rotating true ise döner\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (rotating[player.id]) {\n          return {\n            ...player,\n            rotation: player.rotation + 2 // Sürekli artar, sıfırlanmaz\n          };\n        }\n        return player;\n      }));\n    }, 30);\n    return () => clearInterval(interval);\n  }, [rotating, deviceType]);\n\n  // Tanklar sadece moving true ise ileri gider\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (moving[player.id]) {\n          const speed = 6;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let rad = (player.rotation - 90) * Math.PI / 180;\n          newX += Math.cos(rad) * speed;\n          newY += Math.sin(rad) * speed;\n          newX = Math.max(0, Math.min(window.innerWidth - TANK_SIZE, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - TANK_SIZE, newY));\n          return {\n            ...player,\n            position: {\n              x: newX,\n              y: newY\n            },\n            isMoving: true\n          };\n        }\n        return {\n          ...player,\n          isMoving: false\n        };\n      }));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [moving, deviceType]);\n\n  // Butona tıklama: ateş et (mermi namlunun ucundan, doğru yöne çıkacak)\n  const handleCornerButtonClick = playerId => {\n    setPlayers(prevPlayers => {\n      const player = prevPlayers.find(p => p.id === playerId);\n      if (!player) return prevPlayers;\n      const rad = (player.rotation - 90) * Math.PI / 180;\n      // Tankın merkezinden namlu ucuna offset\n      const offsetX = Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n      const offsetY = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n      const bullet = {\n        id: Date.now() + Math.random(),\n        playerId,\n        position: {\n          x: player.position.x + TANK_SIZE / 2 + offsetX - 4,\n          // 4: mermi yarıçapı\n          y: player.position.y + TANK_SIZE / 2 + offsetY - 4\n        },\n        rotation: player.rotation\n      };\n      setBullets(prev => [...prev, bullet]);\n      return prevPlayers;\n    });\n  };\n\n  // Butona basılı tutma: hareket başlar, dönme durur\n  const handleCornerButtonDown = playerId => {\n    setRotating(r => ({\n      ...r,\n      [playerId]: false\n    }));\n    setMoving(m => ({\n      ...m,\n      [playerId]: true\n    }));\n  };\n\n  // Butondan el çekilince: hareket durur, dönme başlar\n  const handleCornerButtonUp = playerId => {\n    setRotating(r => ({\n      ...r,\n      [playerId]: true\n    }));\n    setMoving(m => ({\n      ...m,\n      [playerId]: false\n    }));\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (deviceType !== 'computer') return;\n      const keyMap = {\n        'w': {\n          playerId: 1,\n          direction: 'up'\n        },\n        's': {\n          playerId: 1,\n          direction: 'down'\n        },\n        'a': {\n          playerId: 1,\n          direction: 'left'\n        },\n        'd': {\n          playerId: 1,\n          direction: 'right'\n        },\n        'f': {\n          playerId: 2,\n          direction: 'up'\n        },\n        'h': {\n          playerId: 2,\n          direction: 'down'\n        },\n        'g': {\n          playerId: 2,\n          direction: 'left'\n        },\n        't': {\n          playerId: 2,\n          direction: 'right'\n        },\n        'i': {\n          playerId: 3,\n          direction: 'up'\n        },\n        'k': {\n          playerId: 3,\n          direction: 'down'\n        },\n        'j': {\n          playerId: 3,\n          direction: 'left'\n        },\n        'l': {\n          playerId: 3,\n          direction: 'right'\n        }\n      };\n      const action = keyMap[e.key.toLowerCase()];\n      if (action) {\n        movePlayer(action.playerId, action.direction);\n      }\n\n      // Ateş etme tuşları\n      if (e.key === 'e' && activePlayer === 1) fireBullet(1);\n      if (e.key === 'y' && activePlayer === 2) fireBullet(2);\n      if (e.key === 'o' && activePlayer === 3) fireBullet(3);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [deviceType, movePlayer, fireBullet, activePlayer]);\n\n  // Mermiler doğru yöne hareket edecek\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets.map(bullet => {\n          const speed = 10;\n          const rad = (bullet.rotation - 90) * Math.PI / 180;\n          let newX = bullet.position.x + Math.cos(rad) * speed;\n          let newY = bullet.position.y + Math.sin(rad) * speed;\n          if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n            return null;\n          }\n          return {\n            ...bullet,\n            position: {\n              x: newX,\n              y: newY\n            }\n          };\n        }).filter(bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameArea, {\n    children: [/*#__PURE__*/_jsxDEV(GameGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grass, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), players.map(player => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HealthBar, {\n        health: player.health,\n        color: playerColors[player.id],\n        style: {\n          left: player.position.x + 10,\n          top: player.position.y - 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tank, {\n        color: playerColors[player.id],\n        rotation: player.rotation,\n        position: player.position,\n        isMoving: player.isMoving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, player.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this)), bullets.map(bullet => /*#__PURE__*/_jsxDEV(Bullet, {\n      rotation: bullet.rotation,\n      style: {\n        left: bullet.position.x,\n        top: bullet.position.y\n      }\n    }, bullet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this)), deviceType === 'phone' && players.map((player, idx) => /*#__PURE__*/_jsxDEV(CornerButton, {\n      color: playerColors[player.id],\n      position: cornerPositions[idx],\n      onClick: () => handleCornerButtonClick(player.id),\n      onTouchStart: () => handleCornerButtonDown(player.id),\n      onTouchEnd: () => handleCornerButtonUp(player.id),\n      onMouseDown: () => handleCornerButtonDown(player.id),\n      onMouseUp: () => handleCornerButtonUp(player.id),\n      onMouseLeave: () => handleCornerButtonUp(player.id),\n      children: \"\\uD83D\\uDE80\"\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s(TankGame, \"OZ7a7ykW3RccLj2g+xUzLjMDcjI=\");\n_c7 = TankGame;\nexport default TankGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"GameArea\");\n$RefreshReg$(_c2, \"GameGrid\");\n$RefreshReg$(_c3, \"Grass\");\n$RefreshReg$(_c4, \"Bullet\");\n$RefreshReg$(_c5, \"HealthBar\");\n$RefreshReg$(_c6, \"CornerButton\");\n$RefreshReg$(_c7, \"TankGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","Tank","jsxDEV","_jsxDEV","GameArea","div","_c","GameGrid","_c2","Grass","_c3","Bullet","props","rotation","_c4","HealthBar","health","color","_c5","Controls","ControlButton","button","FireButton","CornerButton","position","_c6","playerColors","cornerPositions","TANK_SIZE","CANNON_LENGTH","TankGame","playerCount","deviceType","_s","players","setPlayers","bullets","setBullets","rotating","setRotating","moving","setMoving","activePlayer","setActivePlayer","initialPlayers","Array","from","length","_","i","id","x","window","innerWidth","y","innerHeight","isMoving","movePlayer","playerId","direction","prevPlayers","map","player","speed","newX","newY","newRotation","Math","max","min","fireBullet","find","p","rad","PI","offsetX","sin","offsetY","cos","bullet","Date","now","random","prev","bulletInterval","setInterval","prevBullets","filter","clearInterval","initialRotating","initialMoving","interval","handleCornerButtonClick","handleCornerButtonDown","r","m","handleCornerButtonUp","handleKeyDown","e","keyMap","action","key","toLowerCase","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","style","left","top","idx","onClick","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","_c7","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Tank from './Tank';\n\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n\nconst Bullet = styled.div<{ rotation: number }>`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  transform: rotate(${props => props.rotation}deg);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n`;\n\nconst HealthBar = styled.div<{ health: number; color: string }>`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n\nconst ControlButton = styled.button<{ color: string }>`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\n\nconst CornerButton = styled.button<{ color: string; position: string }>`\n  position: absolute;\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  color: #fff;\n  font-size: 2.5rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n  z-index: 10;\n  cursor: pointer;\n  opacity: 0.95;\n  ${props => props.position === 'bottomLeft' && 'left: 30px; bottom: 30px;'}\n  ${props => props.position === 'bottomRight' && 'right: 30px; bottom: 30px;'}\n  ${props => props.position === 'topLeft' && 'left: 30px; top: 30px;'}\n  ${props => props.position === 'topRight' && 'right: 30px; top: 30px;'}\n`;\n\nconst playerColors: Record<1 | 2 | 3 | 4, string> = {\n  1: '#e74c3c', // Kırmızı\n  2: '#3498db', // Mavi\n  3: '#2ecc71', // Yeşil\n  4: '#f1c40f'  // Sarı\n};\n\ninterface Player {\n  id: number;\n  position: { x: number; y: number };\n  rotation: number;\n  health: number;\n  isMoving: boolean;\n}\n\ninterface Bullet {\n  id: number;\n  playerId: number;\n  position: { x: number; y: number };\n  rotation: number;\n}\n\nconst cornerPositions = [\n  'bottomLeft', // 1. oyuncu\n  'bottomRight', // 2. oyuncu\n  'topLeft', // 3. oyuncu\n  'topRight' // 4. oyuncu\n] as const;\n\ntype CornerPosition = typeof cornerPositions[number];\n\nconst TANK_SIZE = 60;\nconst CANNON_LENGTH = 30;\n\nconst TankGame: React.FC<{ \n  playerCount: number;\n  deviceType: 'computer' | 'phone';\n}> = ({ playerCount, deviceType }) => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [bullets, setBullets] = useState<Bullet[]>([]);\n  const [rotating, setRotating] = useState<{ [id: number]: boolean }>({});\n  const [moving, setMoving] = useState<{ [id: number]: boolean }>({});\n  const [activePlayer, setActivePlayer] = useState<1 | 2 | 3 | 4>(1);\n\n  useEffect(() => {\n    const initialPlayers: Player[] = Array.from({ length: playerCount }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: window.innerWidth / (playerCount + 1) * (i + 1),\n        y: window.innerHeight / 2\n      },\n      rotation: 0,\n      health: 100,\n      isMoving: false\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n\n  const movePlayer = useCallback((playerId: number, direction: 'up' | 'down' | 'left' | 'right') => {\n    setPlayers(prevPlayers => \n      prevPlayers.map(player => {\n        if (player.id === playerId) {\n          const speed = 5;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let newRotation = player.rotation;\n\n          switch (direction) {\n            case 'up':\n              newY -= speed;\n              newRotation = 0;\n              break;\n            case 'down':\n              newY += speed;\n              newRotation = 180;\n              break;\n            case 'left':\n              newX -= speed;\n              newRotation = 270;\n              break;\n            case 'right':\n              newX += speed;\n              newRotation = 90;\n              break;\n          }\n\n          // Sınırları kontrol et\n          newX = Math.max(0, Math.min(window.innerWidth - 60, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - 60, newY));\n\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            rotation: newRotation,\n            isMoving: true\n          };\n        }\n        return {\n          ...player,\n          isMoving: false\n        };\n      })\n    );\n  }, []);\n\n  const fireBullet = useCallback((playerId: number) => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n\n    const rad = player.rotation * Math.PI / 180;\n    // Tankın merkezinden namlu ucuna offset\n    const offsetX = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const offsetY = -Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const bullet: Bullet = {\n      id: Date.now() + Math.random(),\n      playerId,\n      position: {\n        x: player.position.x + TANK_SIZE / 2 + offsetX - 4, // 4: mermi yarıçapı\n        y: player.position.y + TANK_SIZE / 2 + offsetY - 4\n      },\n      rotation: player.rotation\n    };\n\n    setBullets(prev => [...prev, bullet]);\n  }, [players]);\n\n  // Mermi hareketi ve çarpışma kontrolü\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets\n          .map(bullet => {\n            const speed = 10;\n            let newX = bullet.position.x + Math.sin(bullet.rotation * Math.PI / 180) * speed;\n            let newY = bullet.position.y - Math.cos(bullet.rotation * Math.PI / 180) * speed;\n            if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n              return null;\n            }\n            return {\n              ...bullet,\n              position: { x: newX, y: newY }\n            };\n          })\n          .filter((bullet): bullet is Bullet => bullet !== null);\n      });\n    }, 16);\n\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  // Başlangıçta tanklar dönüyor, hareket etmiyor\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const initialRotating: { [id: number]: boolean } = {};\n    const initialMoving: { [id: number]: boolean } = {};\n    for (let i = 1; i <= playerCount; i++) {\n      initialRotating[i] = true;\n      initialMoving[i] = false;\n    }\n    setRotating(initialRotating);\n    setMoving(initialMoving);\n  }, [playerCount, deviceType]);\n\n  // Tanklar sadece rotating true ise döner\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (rotating[player.id]) {\n          return {\n            ...player,\n            rotation: player.rotation + 2 // Sürekli artar, sıfırlanmaz\n          };\n        }\n        return player;\n      }));\n    }, 30);\n    return () => clearInterval(interval);\n  }, [rotating, deviceType]);\n\n  // Tanklar sadece moving true ise ileri gider\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (moving[player.id]) {\n          const speed = 6;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let rad = (player.rotation - 90) * Math.PI / 180;\n          newX += Math.cos(rad) * speed;\n          newY += Math.sin(rad) * speed;\n          newX = Math.max(0, Math.min(window.innerWidth - TANK_SIZE, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - TANK_SIZE, newY));\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            isMoving: true\n          };\n        }\n        return { ...player, isMoving: false };\n      }));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [moving, deviceType]);\n\n  // Butona tıklama: ateş et (mermi namlunun ucundan, doğru yöne çıkacak)\n  const handleCornerButtonClick = (playerId: number) => {\n    setPlayers(prevPlayers => {\n      const player = prevPlayers.find(p => p.id === playerId);\n      if (!player) return prevPlayers;\n      const rad = (player.rotation - 90) * Math.PI / 180;\n      // Tankın merkezinden namlu ucuna offset\n      const offsetX = Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n      const offsetY = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n      const bullet = {\n        id: Date.now() + Math.random(),\n        playerId,\n        position: {\n          x: player.position.x + TANK_SIZE / 2 + offsetX - 4, // 4: mermi yarıçapı\n          y: player.position.y + TANK_SIZE / 2 + offsetY - 4\n        },\n        rotation: player.rotation\n      };\n      setBullets(prev => [...prev, bullet]);\n      return prevPlayers;\n    });\n  };\n\n  // Butona basılı tutma: hareket başlar, dönme durur\n  const handleCornerButtonDown = (playerId: number) => {\n    setRotating(r => ({ ...r, [playerId]: false }));\n    setMoving(m => ({ ...m, [playerId]: true }));\n  };\n\n  // Butondan el çekilince: hareket durur, dönme başlar\n  const handleCornerButtonUp = (playerId: number) => {\n    setRotating(r => ({ ...r, [playerId]: true }));\n    setMoving(m => ({ ...m, [playerId]: false }));\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (deviceType !== 'computer') return;\n\n      const keyMap: { [key: string]: { playerId: number; direction: 'up' | 'down' | 'left' | 'right' } } = {\n        'w': { playerId: 1, direction: 'up' },\n        's': { playerId: 1, direction: 'down' },\n        'a': { playerId: 1, direction: 'left' },\n        'd': { playerId: 1, direction: 'right' },\n        'f': { playerId: 2, direction: 'up' },\n        'h': { playerId: 2, direction: 'down' },\n        'g': { playerId: 2, direction: 'left' },\n        't': { playerId: 2, direction: 'right' },\n        'i': { playerId: 3, direction: 'up' },\n        'k': { playerId: 3, direction: 'down' },\n        'j': { playerId: 3, direction: 'left' },\n        'l': { playerId: 3, direction: 'right' },\n      };\n\n      const action = keyMap[e.key.toLowerCase()];\n      if (action) {\n        movePlayer(action.playerId, action.direction);\n      }\n\n      // Ateş etme tuşları\n      if (e.key === 'e' && activePlayer === 1) fireBullet(1);\n      if (e.key === 'y' && activePlayer === 2) fireBullet(2);\n      if (e.key === 'o' && activePlayer === 3) fireBullet(3);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [deviceType, movePlayer, fireBullet, activePlayer]);\n\n  // Mermiler doğru yöne hareket edecek\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets\n          .map(bullet => {\n            const speed = 10;\n            const rad = (bullet.rotation - 90) * Math.PI / 180;\n            let newX = bullet.position.x + Math.cos(rad) * speed;\n            let newY = bullet.position.y + Math.sin(rad) * speed;\n            if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n              return null;\n            }\n            return {\n              ...bullet,\n              position: { x: newX, y: newY }\n            };\n          })\n          .filter((bullet): bullet is Bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  return (\n    <GameArea>\n      <GameGrid />\n      <Grass />\n      {players.map(player => (\n        <React.Fragment key={player.id}>\n          <HealthBar \n            health={player.health}\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            style={{\n              left: player.position.x + 10,\n              top: player.position.y - 10\n            }}\n          />\n          <Tank\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            rotation={player.rotation}\n            position={player.position}\n            isMoving={player.isMoving}\n          />\n        </React.Fragment>\n      ))}\n      {bullets.map(bullet => (\n        <Bullet\n          key={bullet.id}\n          rotation={bullet.rotation}\n          style={{\n            left: bullet.position.x,\n            top: bullet.position.y\n          }}\n        />\n      ))}\n      {deviceType === 'phone' && players.map((player, idx) => (\n        <CornerButton\n          key={player.id}\n          color={playerColors[player.id as 1 | 2 | 3 | 4]}\n          position={cornerPositions[idx]}\n          onClick={() => handleCornerButtonClick(player.id)}\n          onTouchStart={() => handleCornerButtonDown(player.id)}\n          onTouchEnd={() => handleCornerButtonUp(player.id)}\n          onMouseDown={() => handleCornerButtonDown(player.id)}\n          onMouseUp={() => handleCornerButtonUp(player.id)}\n          onMouseLeave={() => handleCornerButtonUp(player.id)}\n        >\n          🚀\n        </CornerButton>\n      ))}\n    </GameArea>\n  );\n};\n\nexport default TankGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}