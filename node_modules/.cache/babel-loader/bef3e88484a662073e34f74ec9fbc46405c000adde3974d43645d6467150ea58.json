{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/ReactionBattle/ReactionBattle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Animasyonlar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst flash = keyframes`\n  0% { background-color: rgba(255, 255, 255, 0.1); }\n  25% { background-color: #e74c3c; }\n  50% { background-color: rgba(255, 255, 255, 0.1); }\n  75% { background-color: #e74c3c; }\n  100% { background-color: rgba(255, 255, 255, 0.1); }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = GameContainer;\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n_c2 = Header;\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n_c3 = ScoreBoard;\nconst PlayerScore = styled.div`\n  color: ${props => props.color};\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n_c4 = PlayerScore;\nconst ReactionArea = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  margin: 2rem 0;\n  cursor: pointer;\n  transition: all 0.2s;\n  position: relative;\n  overflow: hidden;\n  \n  ${props => props.active && css`\n    animation: ${flash} 0.5s infinite;\n  `}\n  \n  ${props => props.wrong && css`\n    background: rgba(231, 76, 60, 0.3);\n  `}\n`;\n_c5 = ReactionArea;\nconst ActionText = styled.div`\n  font-size: ${props => props.size || '3rem'};\n  font-weight: bold;\n  color: white;\n  text-align: center;\n  text-shadow: 0 0 15px rgba(0,0,0,0.3);\n  \n  ${props => props.warn && css`\n    color: #e74c3c;\n  `}\n`;\n_c6 = ActionText;\nconst InfoText = styled.div`\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 10px 25px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n_c7 = InfoText;\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n_c8 = NextButton;\nconst ResultText = styled.div`\n  font-size: 1.6rem;\n  font-weight: bold;\n  color: ${props => props.positive ? '#2ecc71' : '#e74c3c'};\n  text-align: center;\n  margin-top: 2rem;\n  text-shadow: 0 0 10px rgba(0,0,0,0.2);\n`;\n_c9 = ResultText;\nconst StatText = styled.div`\n  font-size: 1.2rem;\n  color: white;\n  text-align: center;\n  margin: 0.5rem 0;\n`;\n\n// Oyuncu renkleri\n_c0 = StatText;\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\nconst ReactionBattle = ({\n  playerCount\n}) => {\n  _s();\n  // Oyuncu durumları\n  const [players, setPlayers] = useState(Array.from({\n    length: playerCount\n  }, (_, i) => ({\n    id: i,\n    score: 0,\n    reactionTimes: []\n  })));\n  const [activePlayer, setActivePlayer] = useState(0);\n\n  // Oyun durumları\n  const [phase, setPhase] = useState('ready');\n  const [round, setRound] = useState(1);\n  const [reactionStartTime, setReactionStartTime] = useState(null);\n  const [reactionTime, setReactionTime] = useState(null);\n  const [earlyClick, setEarlyClick] = useState(false);\n  const [activeTimeout, setActiveTimeout] = useState(null);\n  const totalRounds = playerCount * 3; // Her oyuncu 3 tur oynasın\n\n  // Turu başlat\n  const startRound = () => {\n    setPhase('waiting');\n    setEarlyClick(false);\n    setReactionTime(null);\n\n    // Rastgele bir süre sonra (2-6 saniye arasında) \"Şimdi Bas!\" yazısı göster\n    const delay = 2000 + Math.random() * 4000;\n    const timeout = setTimeout(() => {\n      setPhase('active');\n      setReactionStartTime(Date.now());\n    }, delay);\n    setActiveTimeout(timeout);\n  };\n\n  // Tıklama işlemi\n  const handleAreaClick = () => {\n    // Bekleme aşamasında erken tıklama\n    if (phase === 'waiting') {\n      if (activeTimeout) {\n        clearTimeout(activeTimeout);\n        setActiveTimeout(null);\n      }\n      setEarlyClick(true);\n\n      // Erken tıklama cezası (-2 puan)\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return {\n            ...p,\n            score: Math.max(0, p.score - 2)\n          };\n        }\n        return p;\n      }));\n      setPhase('result');\n      return;\n    }\n\n    // Aktif aşamada tıklama - reaksiyon süresi ölçümü\n    if (phase === 'active' && reactionStartTime) {\n      const clickTime = Date.now();\n      const timeTaken = clickTime - reactionStartTime;\n      setReactionTime(timeTaken);\n\n      // Tepki süresi puanı (maksimum 5 puan, en hızlı 200ms ve üstü)\n      const maxScore = 5;\n      const scoreEarned = Math.max(1, Math.min(maxScore, Math.ceil(maxScore - (timeTaken - 200) / 100)));\n\n      // Oyuncu puanı ve reaksiyon süresini güncelle\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return {\n            ...p,\n            score: p.score + scoreEarned,\n            reactionTimes: [...p.reactionTimes, timeTaken]\n          };\n        }\n        return p;\n      }));\n      setPhase('result');\n    }\n  };\n\n  // Sonraki aşamaya geç\n  const nextStep = () => {\n    const newRound = round + 1;\n    setRound(newRound);\n    if (newRound > totalRounds) {\n      // Oyun bitti\n      setPhase('end');\n    } else {\n      // Sıradaki oyuncuya geç\n      setActivePlayer((activePlayer + 1) % playerCount);\n      setPhase('ready');\n    }\n  };\n\n  // Temizlik işlemleri\n  useEffect(() => {\n    return () => {\n      if (activeTimeout) {\n        clearTimeout(activeTimeout);\n      }\n    };\n  }, [activeTimeout]);\n\n  // Ortalama reaksiyon süresi hesapla\n  const getAverageReactionTime = playerId => {\n    const times = players[playerId].reactionTimes;\n    if (times.length === 0) return null;\n    const average = times.reduce((sum, time) => sum + time, 0) / times.length;\n    return Math.round(average);\n  };\n\n  // En hızlı reaksiyon süresi bul\n  const getFastestReactionTime = playerId => {\n    const times = players[playerId].reactionTimes;\n    if (times.length === 0) return null;\n    return Math.min(...times);\n  };\n\n  // Kazananı bul\n  const getWinner = () => {\n    return players.reduce((highest, player) => player.score > highest.score ? player : highest, players[0]);\n  };\n\n  // Beraberlik kontrolü\n  const isTie = () => {\n    const winner = getWinner();\n    return players.filter(p => p.score === winner.score).length > 1;\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Refleks Sava\\u015F\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerScore, {\n        color: PLAYER_COLORS[index],\n        active: activePlayer === index && phase !== 'end',\n        children: [\"Oyuncu \", index + 1, \": \", player.score]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), phase === 'ready' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: [\"S\\u0131ra: Oyuncu \", activePlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionText, {\n        size: \"1.4rem\",\n        children: \"\\\"\\u015Eimdi Bas!\\\" yaz\\u0131s\\u0131 g\\xF6r\\xFCnd\\xFC\\u011F\\xFCnde h\\u0131zl\\u0131ca t\\u0131kla. Erken t\\u0131klarsan puan kaybedersin!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: startRound,\n        children: \"Haz\\u0131r\\u0131m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), (phase === 'waiting' || phase === 'active') && /*#__PURE__*/_jsxDEV(ReactionArea, {\n      active: phase === 'active',\n      wrong: false,\n      onClick: handleAreaClick,\n      children: /*#__PURE__*/_jsxDEV(ActionText, {\n        children: phase === 'waiting' ? 'Bekle...' : 'ŞİMDİ BAS!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), phase === 'result' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactionArea, {\n        active: false,\n        wrong: earlyClick,\n        onClick: () => {},\n        children: earlyClick ? /*#__PURE__*/_jsxDEV(ActionText, {\n          warn: true,\n          children: \"\\xC7ok Erken Bast\\u0131n!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ActionText, {\n            children: \"Tepki S\\xFCren\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ActionText, {\n            children: [reactionTime, \" ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultText, {\n        positive: !earlyClick,\n        children: earlyClick ? '2 Puan Kaybettin!' : reactionTime && reactionTime < 300 ? 'Harika Refleks!' : reactionTime && reactionTime < 500 ? 'İyi İş!' : 'Biraz Daha Hızlı Olabilirsin!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: nextStep,\n        children: round >= totalRounds ? 'Sonuçları Gör' : 'Sonraki Tur'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), phase === 'end' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InfoText, {\n        children: isTie() ? 'Oyun Bitti! Beraberlik!' : `Oyun Bitti! Kazanan: Oyuncu ${getWinner().id + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), players.map((player, i) => {\n        const avgTime = getAverageReactionTime(i);\n        const fastestTime = getFastestReactionTime(i);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(StatText, {\n            style: {\n              color: PLAYER_COLORS[i],\n              fontWeight: 'bold'\n            },\n            children: [\"Oyuncu \", i + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), avgTime && /*#__PURE__*/_jsxDEV(StatText, {\n            children: [\"Ortalama Tepki: \", avgTime, \" ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 19\n          }, this), fastestTime && /*#__PURE__*/_jsxDEV(StatText, {\n            children: [\"En H\\u0131zl\\u0131 Tepki: \", fastestTime, \" ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: () => window.location.reload(),\n        children: \"Tekrar Oyna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactionBattle, \"EDXDzLMIlW1L+vKfMz4DiaaJpvw=\");\n_c1 = ReactionBattle;\nexport default ReactionBattle;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ScoreBoard\");\n$RefreshReg$(_c4, \"PlayerScore\");\n$RefreshReg$(_c5, \"ReactionArea\");\n$RefreshReg$(_c6, \"ActionText\");\n$RefreshReg$(_c7, \"InfoText\");\n$RefreshReg$(_c8, \"NextButton\");\n$RefreshReg$(_c9, \"ResultText\");\n$RefreshReg$(_c0, \"StatText\");\n$RefreshReg$(_c1, \"ReactionBattle\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","css","jsxDEV","_jsxDEV","Fragment","_Fragment","fadeIn","pulse","flash","GameContainer","div","_c","Header","h2","_c2","ScoreBoard","_c3","PlayerScore","props","color","active","_c4","ReactionArea","wrong","_c5","ActionText","size","warn","_c6","InfoText","_c7","NextButton","button","_c8","ResultText","positive","_c9","StatText","_c0","PLAYER_COLORS","ReactionBattle","playerCount","_s","players","setPlayers","Array","from","length","_","i","id","score","reactionTimes","activePlayer","setActivePlayer","phase","setPhase","round","setRound","reactionStartTime","setReactionStartTime","reactionTime","setReactionTime","earlyClick","setEarlyClick","activeTimeout","setActiveTimeout","totalRounds","startRound","delay","Math","random","timeout","setTimeout","Date","now","handleAreaClick","clearTimeout","prev","map","p","max","clickTime","timeTaken","maxScore","scoreEarned","min","ceil","nextStep","newRound","getAverageReactionTime","playerId","times","average","reduce","sum","time","getFastestReactionTime","getWinner","highest","player","isTie","winner","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","avgTime","fastestTime","style","marginTop","fontWeight","window","location","reload","_c1","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/ReactionBattle/ReactionBattle.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Animasyonlar\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\nconst flash = keyframes`\n  0% { background-color: rgba(255, 255, 255, 0.1); }\n  25% { background-color: #e74c3c; }\n  50% { background-color: rgba(255, 255, 255, 0.1); }\n  75% { background-color: #e74c3c; }\n  100% { background-color: rgba(255, 255, 255, 0.1); }\n`;\n\n// Stil bileşenleri\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.h2`\n  color: #fff;\n  font-size: 2.2rem;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.2);\n`;\n\nconst ScoreBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: 1rem 0;\n  padding: 12px 20px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.1);\n  animation: ${fadeIn} 0.5s ease-out;\n`;\n\nconst PlayerScore = styled.div<{ color: string, active: boolean }>`\n  color: ${props => props.color};\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 8px 15px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active ? `${props.color}22` : 'transparent'};\n  animation: ${props => props.active ? pulse : 'none'} 1s infinite;\n`;\n\nconst ReactionArea = styled.div<{ active: boolean; wrong: boolean }>`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  margin: 2rem 0;\n  cursor: pointer;\n  transition: all 0.2s;\n  position: relative;\n  overflow: hidden;\n  \n  ${props => props.active && css`\n    animation: ${flash} 0.5s infinite;\n  `}\n  \n  ${props => props.wrong && css`\n    background: rgba(231, 76, 60, 0.3);\n  `}\n`;\n\nconst ActionText = styled.div<{ size?: string, warn?: boolean }>`\n  font-size: ${props => props.size || '3rem'};\n  font-weight: bold;\n  color: white;\n  text-align: center;\n  text-shadow: 0 0 15px rgba(0,0,0,0.3);\n  \n  ${props => props.warn && css`\n    color: #e74c3c;\n  `}\n`;\n\nconst InfoText = styled.div`\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n  color: white;\n  background: linear-gradient(45deg, #3498db, #1abc9c);\n  padding: 10px 25px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\n\nconst NextButton = styled.button`\n  background: linear-gradient(45deg, #2ecc71, #27ae60);\n  color: white;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 12px 40px;\n  border: none;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 15px rgba(0,0,0,0.2);\n  }\n`;\n\nconst ResultText = styled.div<{ positive: boolean }>`\n  font-size: 1.6rem;\n  font-weight: bold;\n  color: ${props => props.positive ? '#2ecc71' : '#e74c3c'};\n  text-align: center;\n  margin-top: 2rem;\n  text-shadow: 0 0 10px rgba(0,0,0,0.2);\n`;\n\nconst StatText = styled.div`\n  font-size: 1.2rem;\n  color: white;\n  text-align: center;\n  margin: 0.5rem 0;\n`;\n\n// Oyuncu renkleri\nconst PLAYER_COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f'];\n\ninterface Player {\n  id: number;\n  score: number;\n  reactionTimes: number[];\n}\n\nconst ReactionBattle: React.FC<{ playerCount: number }> = ({ playerCount }) => {\n  // Oyuncu durumları\n  const [players, setPlayers] = useState<Player[]>(\n    Array.from({ length: playerCount }, (_, i) => ({ \n      id: i, \n      score: 0,\n      reactionTimes: []\n    }))\n  );\n  const [activePlayer, setActivePlayer] = useState(0);\n  \n  // Oyun durumları\n  const [phase, setPhase] = useState<'ready' | 'waiting' | 'active' | 'result' | 'end'>('ready');\n  const [round, setRound] = useState(1);\n  const [reactionStartTime, setReactionStartTime] = useState<number | null>(null);\n  const [reactionTime, setReactionTime] = useState<number | null>(null);\n  const [earlyClick, setEarlyClick] = useState(false);\n  const [activeTimeout, setActiveTimeout] = useState<NodeJS.Timeout | null>(null);\n  \n  const totalRounds = playerCount * 3; // Her oyuncu 3 tur oynasın\n  \n  // Turu başlat\n  const startRound = () => {\n    setPhase('waiting');\n    setEarlyClick(false);\n    setReactionTime(null);\n    \n    // Rastgele bir süre sonra (2-6 saniye arasında) \"Şimdi Bas!\" yazısı göster\n    const delay = 2000 + Math.random() * 4000;\n    const timeout = setTimeout(() => {\n      setPhase('active');\n      setReactionStartTime(Date.now());\n    }, delay);\n    \n    setActiveTimeout(timeout);\n  };\n  \n  // Tıklama işlemi\n  const handleAreaClick = () => {\n    // Bekleme aşamasında erken tıklama\n    if (phase === 'waiting') {\n      if (activeTimeout) {\n        clearTimeout(activeTimeout);\n        setActiveTimeout(null);\n      }\n      setEarlyClick(true);\n      \n      // Erken tıklama cezası (-2 puan)\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return { ...p, score: Math.max(0, p.score - 2) };\n        }\n        return p;\n      }));\n      \n      setPhase('result');\n      return;\n    }\n    \n    // Aktif aşamada tıklama - reaksiyon süresi ölçümü\n    if (phase === 'active' && reactionStartTime) {\n      const clickTime = Date.now();\n      const timeTaken = clickTime - reactionStartTime;\n      setReactionTime(timeTaken);\n      \n      // Tepki süresi puanı (maksimum 5 puan, en hızlı 200ms ve üstü)\n      const maxScore = 5;\n      const scoreEarned = Math.max(1, Math.min(maxScore, Math.ceil(maxScore - (timeTaken - 200) / 100)));\n      \n      // Oyuncu puanı ve reaksiyon süresini güncelle\n      setPlayers(prev => prev.map((p, i) => {\n        if (i === activePlayer) {\n          return { \n            ...p, \n            score: p.score + scoreEarned,\n            reactionTimes: [...p.reactionTimes, timeTaken]\n          };\n        }\n        return p;\n      }));\n      \n      setPhase('result');\n    }\n  };\n  \n  // Sonraki aşamaya geç\n  const nextStep = () => {\n    const newRound = round + 1;\n    setRound(newRound);\n    \n    if (newRound > totalRounds) {\n      // Oyun bitti\n      setPhase('end');\n    } else {\n      // Sıradaki oyuncuya geç\n      setActivePlayer((activePlayer + 1) % playerCount);\n      setPhase('ready');\n    }\n  };\n  \n  // Temizlik işlemleri\n  useEffect(() => {\n    return () => {\n      if (activeTimeout) {\n        clearTimeout(activeTimeout);\n      }\n    };\n  }, [activeTimeout]);\n  \n  // Ortalama reaksiyon süresi hesapla\n  const getAverageReactionTime = (playerId: number) => {\n    const times = players[playerId].reactionTimes;\n    if (times.length === 0) return null;\n    const average = times.reduce((sum, time) => sum + time, 0) / times.length;\n    return Math.round(average);\n  };\n  \n  // En hızlı reaksiyon süresi bul\n  const getFastestReactionTime = (playerId: number) => {\n    const times = players[playerId].reactionTimes;\n    if (times.length === 0) return null;\n    return Math.min(...times);\n  };\n  \n  // Kazananı bul\n  const getWinner = () => {\n    return players.reduce((highest, player) => \n      player.score > highest.score ? player : highest, players[0]);\n  };\n  \n  // Beraberlik kontrolü\n  const isTie = () => {\n    const winner = getWinner();\n    return players.filter(p => p.score === winner.score).length > 1;\n  };\n  \n  return (\n    <GameContainer>\n      <Header>Refleks Savaşı</Header>\n      \n      <ScoreBoard>\n        {players.map((player, index) => (\n          <PlayerScore \n            key={player.id} \n            color={PLAYER_COLORS[index]} \n            active={activePlayer === index && phase !== 'end'}\n          >\n            Oyuncu {index + 1}: {player.score}\n          </PlayerScore>\n        ))}\n      </ScoreBoard>\n      \n      {phase === 'ready' && (\n        <>\n          <InfoText>Sıra: Oyuncu {activePlayer + 1}</InfoText>\n          <ActionText size=\"1.4rem\">\n            \"Şimdi Bas!\" yazısı göründüğünde hızlıca tıkla. Erken tıklarsan puan kaybedersin!\n          </ActionText>\n          <NextButton onClick={startRound}>Hazırım</NextButton>\n        </>\n      )}\n      \n      {(phase === 'waiting' || phase === 'active') && (\n        <ReactionArea \n          active={phase === 'active'} \n          wrong={false}\n          onClick={handleAreaClick}\n        >\n          <ActionText>\n            {phase === 'waiting' ? 'Bekle...' : 'ŞİMDİ BAS!'}\n          </ActionText>\n        </ReactionArea>\n      )}\n      \n      {phase === 'result' && (\n        <>\n          <ReactionArea \n            active={false} \n            wrong={earlyClick}\n            onClick={() => {}}\n          >\n            {earlyClick ? (\n              <ActionText warn>Çok Erken Bastın!</ActionText>\n            ) : (\n              <>\n                <ActionText>Tepki Süren</ActionText>\n                <ActionText>{reactionTime} ms</ActionText>\n              </>\n            )}\n          </ReactionArea>\n          \n          <ResultText positive={!earlyClick}>\n            {earlyClick \n              ? '2 Puan Kaybettin!' \n              : reactionTime && reactionTime < 300 \n                ? 'Harika Refleks!'\n                : reactionTime && reactionTime < 500\n                  ? 'İyi İş!'\n                  : 'Biraz Daha Hızlı Olabilirsin!'}\n          </ResultText>\n          \n          <NextButton onClick={nextStep}>\n            {round >= totalRounds ? 'Sonuçları Gör' : 'Sonraki Tur'}\n          </NextButton>\n        </>\n      )}\n      \n      {phase === 'end' && (\n        <>\n          <InfoText>\n            {isTie() \n              ? 'Oyun Bitti! Beraberlik!' \n              : `Oyun Bitti! Kazanan: Oyuncu ${getWinner().id + 1}`\n            }\n          </InfoText>\n          \n          {players.map((player, i) => {\n            const avgTime = getAverageReactionTime(i);\n            const fastestTime = getFastestReactionTime(i);\n            \n            return (\n              <div key={i} style={{marginTop: '1rem'}}>\n                <StatText style={{color: PLAYER_COLORS[i], fontWeight: 'bold'}}>\n                  Oyuncu {i + 1}\n                </StatText>\n                {avgTime && (\n                  <StatText>Ortalama Tepki: {avgTime} ms</StatText>\n                )}\n                {fastestTime && (\n                  <StatText>En Hızlı Tepki: {fastestTime} ms</StatText>\n                )}\n              </div>\n            );\n          })}\n          \n          <NextButton onClick={() => window.location.reload()}>\n            Tekrar Oyna\n          </NextButton>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default ReactionBattle; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}