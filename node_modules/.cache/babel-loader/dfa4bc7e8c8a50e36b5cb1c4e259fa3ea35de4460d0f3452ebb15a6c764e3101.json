{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/Tank.tsx\";\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst TankContainer = styled.div`\n  position: absolute;\n  width: 60px;\n  height: 60px;\n  left: 0;\n  top: 0;\n  transform: translate(${props => {\n  var _props$position;\n  return ((_props$position = props.position) === null || _props$position === void 0 ? void 0 : _props$position.x) || 0;\n}}px, ${props => {\n  var _props$position2;\n  return ((_props$position2 = props.position) === null || _props$position2 === void 0 ? void 0 : _props$position2.y) || 0;\n}}px) rotate(${props => props.rotation}deg);\n  transition: transform 0.2s ease;\n`;\n_c = TankContainer;\nconst TankBody = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: ${props => props.color};\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 80%;\n    height: 80%;\n    background: ${props => props.color}dd;\n    border-radius: 8px;\n  }\n`;\n_c2 = TankBody;\nconst TankCannon = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 40px;\n  height: 12px;\n  background: ${props => props.color}dd;\n  transform: translate(-10%, -50%);\n  border-radius: 6px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n`;\n_c3 = TankCannon;\nconst TankTracks = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  \n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 8px;\n    height: 100%;\n    background: ${props => props.color}99;\n    border-radius: 4px;\n  }\n  \n  &::before {\n    left: 0;\n  }\n  \n  &::after {\n    right: 0;\n  }\n`;\n_c4 = TankTracks;\nconst Tank = ({\n  color,\n  rotation,\n  position,\n  isMoving\n}) => {\n  return /*#__PURE__*/_jsxDEV(TankContainer, {\n    color: color,\n    rotation: rotation,\n    isMoving: isMoving,\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(TankBody, {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TankCannon, {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TankTracks, {\n      color: color,\n      isMoving: isMoving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Tank;\nexport default Tank;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TankContainer\");\n$RefreshReg$(_c2, \"TankBody\");\n$RefreshReg$(_c3, \"TankCannon\");\n$RefreshReg$(_c4, \"TankTracks\");\n$RefreshReg$(_c5, \"Tank\");","map":{"version":3,"names":["React","styled","keyframes","jsxDEV","_jsxDEV","rotate","TankContainer","div","props","_props$position","position","x","_props$position2","y","rotation","_c","TankBody","color","_c2","TankCannon","_c3","TankTracks","_c4","Tank","isMoving","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/Tank.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst TankContainer = styled.div<{ color: string; rotation: number; isMoving: boolean }>`\n  position: absolute;\n  width: 60px;\n  height: 60px;\n  left: 0;\n  top: 0;\n  transform: translate(${props => props.position?.x || 0}px, ${props => props.position?.y || 0}px) rotate(${props => props.rotation}deg);\n  transition: transform 0.2s ease;\n`;\n\nconst TankBody = styled.div<{ color: string }>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: ${props => props.color};\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 80%;\n    height: 80%;\n    background: ${props => props.color}dd;\n    border-radius: 8px;\n  }\n`;\n\nconst TankCannon = styled.div<{ color: string }>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 40px;\n  height: 12px;\n  background: ${props => props.color}dd;\n  transform: translate(-10%, -50%);\n  border-radius: 6px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n`;\n\nconst TankTracks = styled.div<{ color: string; isMoving: boolean }>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  \n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 8px;\n    height: 100%;\n    background: ${props => props.color}99;\n    border-radius: 4px;\n  }\n  \n  &::before {\n    left: 0;\n  }\n  \n  &::after {\n    right: 0;\n  }\n`;\n\ninterface TankProps {\n  color: string;\n  rotation: number;\n  position: { x: number; y: number };\n  isMoving: boolean;\n}\n\nconst Tank: React.FC<TankProps> = ({ color, rotation, position, isMoving }) => {\n  return (\n    <TankContainer \n      color={color} \n      rotation={rotation}\n      isMoving={isMoving}\n      position={position}\n    >\n      <TankBody color={color} />\n      <TankCannon color={color} />\n      <TankTracks color={color} isMoving={isMoving} />\n    </TankContainer>\n  );\n};\n\nexport default Tank; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAGH,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,aAAa,GAAGL,MAAM,CAACM,GAA2D;AACxF;AACA;AACA;AACA;AACA;AACA,yBAAyBC,KAAK;EAAA,IAAAC,eAAA;EAAA,OAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,CAAC,KAAI,CAAC;AAAA,QAAOH,KAAK;EAAA,IAAAI,gBAAA;EAAA,OAAI,EAAAA,gBAAA,GAAAJ,KAAK,CAACE,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBC,CAAC,KAAI,CAAC;AAAA,eAAcL,KAAK,IAAIA,KAAK,CAACM,QAAQ;AACnI;AACA,CAAC;AAACC,EAAA,GARIT,aAAa;AAUnB,MAAMU,QAAQ,GAAGf,MAAM,CAACM,GAAsB;AAC9C;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACS,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBT,KAAK,IAAIA,KAAK,CAACS,KAAK;AACtC;AACA;AACA,CAAC;AAACC,GAAA,GAnBIF,QAAQ;AAqBd,MAAMG,UAAU,GAAGlB,MAAM,CAACM,GAAsB;AAChD;AACA;AACA;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACS,KAAK;AACpC;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAVID,UAAU;AAYhB,MAAME,UAAU,GAAGpB,MAAM,CAACM,GAAyC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBC,KAAK,IAAIA,KAAK,CAACS,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAtBID,UAAU;AA+BhB,MAAME,IAAyB,GAAGA,CAAC;EAAEN,KAAK;EAAEH,QAAQ;EAAEJ,QAAQ;EAAEc;AAAS,CAAC,KAAK;EAC7E,oBACEpB,OAAA,CAACE,aAAa;IACZW,KAAK,EAAEA,KAAM;IACbH,QAAQ,EAAEA,QAAS;IACnBU,QAAQ,EAAEA,QAAS;IACnBd,QAAQ,EAAEA,QAAS;IAAAe,QAAA,gBAEnBrB,OAAA,CAACY,QAAQ;MAACC,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BzB,OAAA,CAACe,UAAU;MAACF,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5BzB,OAAA,CAACiB,UAAU;MAACJ,KAAK,EAAEA,KAAM;MAACO,QAAQ,EAAEA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEpB,CAAC;AAACC,GAAA,GAbIP,IAAyB;AAe/B,eAAeA,IAAI;AAAC,IAAAR,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAT,GAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}