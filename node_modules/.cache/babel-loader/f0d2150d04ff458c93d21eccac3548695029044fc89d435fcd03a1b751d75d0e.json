{"ast":null,"code":"var _jsxFileName = \"/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Tank from './Tank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n_c = GameArea;\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n_c2 = GameGrid;\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n_c3 = Grass;\nconst Bullet = styled.div`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  transform: rotate(${props => props.rotation}deg);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n`;\n_c4 = Bullet;\nconst HealthBar = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n_c5 = HealthBar;\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\nconst ControlButton = styled.button`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\nconst CornerButton = styled.button`\n  position: absolute;\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  color: #fff;\n  font-size: 2.5rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n  z-index: 10;\n  cursor: pointer;\n  opacity: 0.95;\n  ${props => props.position === 'bottomLeft' && 'left: 30px; bottom: 30px;'}\n  ${props => props.position === 'bottomRight' && 'right: 30px; bottom: 30px;'}\n  ${props => props.position === 'topLeft' && 'left: 30px; top: 30px;'}\n  ${props => props.position === 'topRight' && 'right: 30px; top: 30px;'}\n`;\n_c6 = CornerButton;\nconst playerColors = {\n  1: '#e74c3c',\n  // Kırmızı\n  2: '#3498db',\n  // Mavi\n  3: '#2ecc71',\n  // Yeşil\n  4: '#f1c40f' // Sarı\n};\nconst cornerPositions = ['bottomLeft',\n// 1. oyuncu\n'bottomRight',\n// 2. oyuncu\n'topLeft',\n// 3. oyuncu\n'topRight' // 4. oyuncu\n];\nconst TANK_SIZE = 60;\nconst CANNON_LENGTH = 30;\nconst WALL_COUNT = 8;\nconst GRASS_COUNT = 20;\nconst Wall = styled.div`\n  position: absolute;\n  background: #a67c52;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.15);\n`;\n_c7 = Wall;\nconst GrassPatch = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background: radial-gradient(circle at 60% 40%, #4caf50 70%, #388e3c 100%);\n  border-radius: 50%;\n  opacity: 0.7;\n`;\n_c8 = GrassPatch;\nconst TankGame = ({\n  playerCount,\n  deviceType\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const [rotating, setRotating] = useState({});\n  const [moving, setMoving] = useState({});\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [walls, setWalls] = useState([]);\n  const [grasses, setGrasses] = useState([]);\n  useEffect(() => {\n    const initialPlayers = Array.from({\n      length: playerCount\n    }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: window.innerWidth / (playerCount + 1) * (i + 1),\n        y: window.innerHeight / 2\n      },\n      rotation: 0,\n      health: 100,\n      isMoving: false\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n  const movePlayer = useCallback((playerId, direction) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => {\n      if (player.id === playerId) {\n        const speed = 5;\n        let newX = player.position.x;\n        let newY = player.position.y;\n        let newRotation = player.rotation;\n        switch (direction) {\n          case 'up':\n            newY -= speed;\n            newRotation = 0;\n            break;\n          case 'down':\n            newY += speed;\n            newRotation = 180;\n            break;\n          case 'left':\n            newX -= speed;\n            newRotation = 270;\n            break;\n          case 'right':\n            newX += speed;\n            newRotation = 90;\n            break;\n        }\n\n        // Sınırları kontrol et\n        newX = Math.max(0, Math.min(window.innerWidth - 60, newX));\n        newY = Math.max(0, Math.min(window.innerHeight - 60, newY));\n        return {\n          ...player,\n          position: {\n            x: newX,\n            y: newY\n          },\n          rotation: newRotation,\n          isMoving: true\n        };\n      }\n      return {\n        ...player,\n        isMoving: false\n      };\n    }));\n  }, []);\n  const fireBullet = useCallback(playerId => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n    const rad = player.rotation * Math.PI / 180;\n    // Tankın merkezinden namlu ucuna offset\n    const offsetX = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const offsetY = -Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const bullet = {\n      id: Date.now() + Math.random(),\n      playerId,\n      position: {\n        x: player.position.x + TANK_SIZE / 2 + offsetX - 4,\n        // 4: mermi yarıçapı\n        y: player.position.y + TANK_SIZE / 2 + offsetY - 4\n      },\n      rotation: player.rotation\n    };\n    setBullets(prev => [...prev, bullet]);\n  }, [players]);\n\n  // Mermi hareketi ve çarpışma kontrolü\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets.map(bullet => {\n          const speed = 10;\n          let newX = bullet.position.x + Math.sin(bullet.rotation * Math.PI / 180) * speed;\n          let newY = bullet.position.y - Math.cos(bullet.rotation * Math.PI / 180) * speed;\n          if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n            return null;\n          }\n          return {\n            ...bullet,\n            position: {\n              x: newX,\n              y: newY\n            }\n          };\n        }).filter(bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  // Başlangıçta tanklar dönüyor, hareket etmiyor\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const initialRotating = {};\n    const initialMoving = {};\n    for (let i = 1; i <= playerCount; i++) {\n      initialRotating[i] = true;\n      initialMoving[i] = false;\n    }\n    setRotating(initialRotating);\n    setMoving(initialMoving);\n  }, [playerCount, deviceType]);\n\n  // Tanklar sadece rotating true ise döner\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (rotating[player.id]) {\n          return {\n            ...player,\n            rotation: player.rotation + 2 // Sürekli artar, sıfırlanmaz\n          };\n        }\n        return player;\n      }));\n    }, 30);\n    return () => clearInterval(interval);\n  }, [rotating, deviceType]);\n\n  // Tanklar sadece moving true ise ileri gider\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (moving[player.id]) {\n          const speed = 6;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let rad = player.rotation * Math.PI / 180;\n          newX += Math.cos(rad) * speed;\n          newY += Math.sin(rad) * speed;\n          newX = Math.max(0, Math.min(window.innerWidth - TANK_SIZE, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - TANK_SIZE, newY));\n          return {\n            ...player,\n            position: {\n              x: newX,\n              y: newY\n            },\n            isMoving: true\n          };\n        }\n        return {\n          ...player,\n          isMoving: false\n        };\n      }));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [moving, deviceType]);\n\n  // Butona tıklama: ateş et (mermi namlunun ucundan, doğru yöne çıkacak)\n  const handleCornerButtonClick = playerId => {\n    setPlayers(prevPlayers => {\n      const player = prevPlayers.find(p => p.id === playerId);\n      if (!player) return prevPlayers;\n      const rad = player.rotation * Math.PI / 180;\n      const centerX = player.position.x + TANK_SIZE / 2;\n      const centerY = player.position.y + TANK_SIZE / 2;\n      const offsetX = Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH);\n      const offsetY = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH);\n      const bullet = {\n        id: Date.now() + Math.random(),\n        playerId,\n        position: {\n          x: centerX + offsetX - 4,\n          y: centerY + offsetY - 4\n        },\n        rotation: player.rotation\n      };\n      setBullets(prev => [...prev, bullet]);\n      return prevPlayers;\n    });\n  };\n\n  // Butona basılı tutma: hareket başlar, dönme durur\n  const handleCornerButtonDown = playerId => {\n    setRotating(r => ({\n      ...r,\n      [playerId]: false\n    }));\n    setMoving(m => ({\n      ...m,\n      [playerId]: true\n    }));\n  };\n\n  // Butondan el çekilince: hareket durur, dönme başlar\n  const handleCornerButtonUp = playerId => {\n    setRotating(r => ({\n      ...r,\n      [playerId]: true\n    }));\n    setMoving(m => ({\n      ...m,\n      [playerId]: false\n    }));\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (deviceType !== 'computer') return;\n      const keyMap = {\n        'w': {\n          playerId: 1,\n          direction: 'up'\n        },\n        's': {\n          playerId: 1,\n          direction: 'down'\n        },\n        'a': {\n          playerId: 1,\n          direction: 'left'\n        },\n        'd': {\n          playerId: 1,\n          direction: 'right'\n        },\n        'f': {\n          playerId: 2,\n          direction: 'up'\n        },\n        'h': {\n          playerId: 2,\n          direction: 'down'\n        },\n        'g': {\n          playerId: 2,\n          direction: 'left'\n        },\n        't': {\n          playerId: 2,\n          direction: 'right'\n        },\n        'i': {\n          playerId: 3,\n          direction: 'up'\n        },\n        'k': {\n          playerId: 3,\n          direction: 'down'\n        },\n        'j': {\n          playerId: 3,\n          direction: 'left'\n        },\n        'l': {\n          playerId: 3,\n          direction: 'right'\n        }\n      };\n      const action = keyMap[e.key.toLowerCase()];\n      if (action) {\n        movePlayer(action.playerId, action.direction);\n      }\n\n      // Ateş etme tuşları\n      if (e.key === 'e' && activePlayer === 1) fireBullet(1);\n      if (e.key === 'y' && activePlayer === 2) fireBullet(2);\n      if (e.key === 'o' && activePlayer === 3) fireBullet(3);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [deviceType, movePlayer, fireBullet, activePlayer]);\n\n  // Mermiler doğru yöne hareket edecek\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets.map(bullet => {\n          const speed = 10;\n          const rad = bullet.rotation * Math.PI / 180;\n          let newX = bullet.position.x + Math.cos(rad) * speed;\n          let newY = bullet.position.y + Math.sin(rad) * speed;\n          if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n            return null;\n          }\n          return {\n            ...bullet,\n            position: {\n              x: newX,\n              y: newY\n            }\n          };\n        }).filter(bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  // Rastgele duvar ve çimen oluşturma (ilk renderda bir kez)\n  useEffect(() => {\n    // Duvarlar\n    const newWalls = Array.from({\n      length: WALL_COUNT\n    }, () => {\n      const w = 80 + Math.random() * 120;\n      const h = 40 + Math.random() * 80;\n      const x = Math.random() * (window.innerWidth - w - 40) + 20;\n      const y = Math.random() * (window.innerHeight - h - 40) + 20;\n      return {\n        x,\n        y,\n        w,\n        h\n      };\n    });\n    setWalls(newWalls);\n    // Çimenler\n    const newGrasses = Array.from({\n      length: GRASS_COUNT\n    }, () => {\n      const x = Math.random() * (window.innerWidth - 40);\n      const y = Math.random() * (window.innerHeight - 40);\n      return {\n        x,\n        y\n      };\n    });\n    setGrasses(newGrasses);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameArea, {\n    children: [/*#__PURE__*/_jsxDEV(GameGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grass, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), grasses.map((g, i) => /*#__PURE__*/_jsxDEV(GrassPatch, {\n      style: {\n        left: g.x,\n        top: g.y\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this)), walls.map((w, i) => /*#__PURE__*/_jsxDEV(Wall, {\n      style: {\n        left: w.x,\n        top: w.y,\n        width: w.w,\n        height: w.h\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }, this)), players.map(player => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HealthBar, {\n        health: player.health,\n        color: playerColors[player.id],\n        style: {\n          left: player.position.x + 10,\n          top: player.position.y - 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tank, {\n        color: playerColors[player.id],\n        rotation: player.rotation,\n        position: player.position,\n        isMoving: player.isMoving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, player.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this)), bullets.map(bullet => /*#__PURE__*/_jsxDEV(Bullet, {\n      rotation: bullet.rotation,\n      style: {\n        left: bullet.position.x,\n        top: bullet.position.y\n      }\n    }, bullet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }, this)), deviceType === 'phone' && players.map((player, idx) => /*#__PURE__*/_jsxDEV(CornerButton, {\n      color: playerColors[player.id],\n      position: cornerPositions[idx],\n      onClick: () => handleCornerButtonClick(player.id),\n      onTouchStart: () => handleCornerButtonDown(player.id),\n      onTouchEnd: () => handleCornerButtonUp(player.id),\n      onMouseDown: () => handleCornerButtonDown(player.id),\n      onMouseUp: () => handleCornerButtonUp(player.id),\n      onMouseLeave: () => handleCornerButtonUp(player.id),\n      children: \"\\uD83D\\uDE80\"\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n};\n_s(TankGame, \"H83lolHOdWSLN6I9WNQyPHExz+c=\");\n_c9 = TankGame;\nexport default TankGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameArea\");\n$RefreshReg$(_c2, \"GameGrid\");\n$RefreshReg$(_c3, \"Grass\");\n$RefreshReg$(_c4, \"Bullet\");\n$RefreshReg$(_c5, \"HealthBar\");\n$RefreshReg$(_c6, \"CornerButton\");\n$RefreshReg$(_c7, \"Wall\");\n$RefreshReg$(_c8, \"GrassPatch\");\n$RefreshReg$(_c9, \"TankGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","Tank","jsxDEV","_jsxDEV","GameArea","div","_c","GameGrid","_c2","Grass","_c3","Bullet","props","rotation","_c4","HealthBar","health","color","_c5","Controls","ControlButton","button","FireButton","CornerButton","position","_c6","playerColors","cornerPositions","TANK_SIZE","CANNON_LENGTH","WALL_COUNT","GRASS_COUNT","Wall","_c7","GrassPatch","_c8","TankGame","playerCount","deviceType","_s","players","setPlayers","bullets","setBullets","rotating","setRotating","moving","setMoving","activePlayer","setActivePlayer","walls","setWalls","grasses","setGrasses","initialPlayers","Array","from","length","_","i","id","x","window","innerWidth","y","innerHeight","isMoving","movePlayer","playerId","direction","prevPlayers","map","player","speed","newX","newY","newRotation","Math","max","min","fireBullet","find","p","rad","PI","offsetX","sin","offsetY","cos","bullet","Date","now","random","prev","bulletInterval","setInterval","prevBullets","filter","clearInterval","initialRotating","initialMoving","interval","handleCornerButtonClick","centerX","centerY","handleCornerButtonDown","r","m","handleCornerButtonUp","handleKeyDown","e","keyMap","action","key","toLowerCase","addEventListener","removeEventListener","newWalls","w","h","newGrasses","children","fileName","_jsxFileName","lineNumber","columnNumber","g","style","left","top","width","height","Fragment","idx","onClick","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","_c9","$RefreshReg$"],"sources":["/home/cesur/Documents/Projects/iki-kisilik-web/src/components/games/TankGame/TankGame.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Tank from './Tank';\n\nconst GameArea = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #d2b48c; // Çöl rengi\n  position: relative;\n  overflow: hidden;\n`;\n\nconst GameGrid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: \n    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n  background-size: 40px 40px;\n  pointer-events: none;\n`;\n\nconst Grass = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 0 L100 50 L50 100 L0 50 Z' fill='%232ecc71' fill-opacity='0.1'/%3E%3C/svg%3E\");\n  background-size: 20px 20px;\n  pointer-events: none;\n`;\n\nconst Bullet = styled.div<{ rotation: number }>`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border-radius: 50%;\n  transform: rotate(${props => props.rotation}deg);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n`;\n\nconst HealthBar = styled.div<{ health: number; color: string }>`\n  position: absolute;\n  width: 40px;\n  height: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.health}%;\n    height: 100%;\n    background: ${props => props.color};\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  z-index: 1;\n`;\n\nconst ControlButton = styled.button<{ color: string }>`\n  background: ${props => props.color};\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst FireButton = styled(ControlButton)`\n  background: #e74c3c;\n  width: 60px;\n  height: 60px;\n  font-size: 20px;\n`;\n\nconst CornerButton = styled.button<{ color: string; position: string }>`\n  position: absolute;\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  color: #fff;\n  font-size: 2.5rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n  z-index: 10;\n  cursor: pointer;\n  opacity: 0.95;\n  ${props => props.position === 'bottomLeft' && 'left: 30px; bottom: 30px;'}\n  ${props => props.position === 'bottomRight' && 'right: 30px; bottom: 30px;'}\n  ${props => props.position === 'topLeft' && 'left: 30px; top: 30px;'}\n  ${props => props.position === 'topRight' && 'right: 30px; top: 30px;'}\n`;\n\nconst playerColors: Record<1 | 2 | 3 | 4, string> = {\n  1: '#e74c3c', // Kırmızı\n  2: '#3498db', // Mavi\n  3: '#2ecc71', // Yeşil\n  4: '#f1c40f'  // Sarı\n};\n\ninterface Player {\n  id: number;\n  position: { x: number; y: number };\n  rotation: number;\n  health: number;\n  isMoving: boolean;\n}\n\ninterface Bullet {\n  id: number;\n  playerId: number;\n  position: { x: number; y: number };\n  rotation: number;\n}\n\nconst cornerPositions = [\n  'bottomLeft', // 1. oyuncu\n  'bottomRight', // 2. oyuncu\n  'topLeft', // 3. oyuncu\n  'topRight' // 4. oyuncu\n] as const;\n\ntype CornerPosition = typeof cornerPositions[number];\n\nconst TANK_SIZE = 60;\nconst CANNON_LENGTH = 30;\nconst WALL_COUNT = 8;\nconst GRASS_COUNT = 20;\n\nconst Wall = styled.div`\n  position: absolute;\n  background: #a67c52;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.15);\n`;\n\nconst GrassPatch = styled.div`\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background: radial-gradient(circle at 60% 40%, #4caf50 70%, #388e3c 100%);\n  border-radius: 50%;\n  opacity: 0.7;\n`;\n\nconst TankGame: React.FC<{ \n  playerCount: number;\n  deviceType: 'computer' | 'phone';\n}> = ({ playerCount, deviceType }) => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [bullets, setBullets] = useState<Bullet[]>([]);\n  const [rotating, setRotating] = useState<{ [id: number]: boolean }>({});\n  const [moving, setMoving] = useState<{ [id: number]: boolean }>({});\n  const [activePlayer, setActivePlayer] = useState<1 | 2 | 3 | 4>(1);\n  const [walls, setWalls] = useState<{ x: number; y: number; w: number; h: number }[]>([]);\n  const [grasses, setGrasses] = useState<{ x: number; y: number }[]>([]);\n\n  useEffect(() => {\n    const initialPlayers: Player[] = Array.from({ length: playerCount }, (_, i) => ({\n      id: i + 1,\n      position: {\n        x: window.innerWidth / (playerCount + 1) * (i + 1),\n        y: window.innerHeight / 2\n      },\n      rotation: 0,\n      health: 100,\n      isMoving: false\n    }));\n    setPlayers(initialPlayers);\n  }, [playerCount]);\n\n  const movePlayer = useCallback((playerId: number, direction: 'up' | 'down' | 'left' | 'right') => {\n    setPlayers(prevPlayers => \n      prevPlayers.map(player => {\n        if (player.id === playerId) {\n          const speed = 5;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let newRotation = player.rotation;\n\n          switch (direction) {\n            case 'up':\n              newY -= speed;\n              newRotation = 0;\n              break;\n            case 'down':\n              newY += speed;\n              newRotation = 180;\n              break;\n            case 'left':\n              newX -= speed;\n              newRotation = 270;\n              break;\n            case 'right':\n              newX += speed;\n              newRotation = 90;\n              break;\n          }\n\n          // Sınırları kontrol et\n          newX = Math.max(0, Math.min(window.innerWidth - 60, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - 60, newY));\n\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            rotation: newRotation,\n            isMoving: true\n          };\n        }\n        return {\n          ...player,\n          isMoving: false\n        };\n      })\n    );\n  }, []);\n\n  const fireBullet = useCallback((playerId: number) => {\n    const player = players.find(p => p.id === playerId);\n    if (!player) return;\n\n    const rad = player.rotation * Math.PI / 180;\n    // Tankın merkezinden namlu ucuna offset\n    const offsetX = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const offsetY = -Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH / 2);\n    const bullet: Bullet = {\n      id: Date.now() + Math.random(),\n      playerId,\n      position: {\n        x: player.position.x + TANK_SIZE / 2 + offsetX - 4, // 4: mermi yarıçapı\n        y: player.position.y + TANK_SIZE / 2 + offsetY - 4\n      },\n      rotation: player.rotation\n    };\n\n    setBullets(prev => [...prev, bullet]);\n  }, [players]);\n\n  // Mermi hareketi ve çarpışma kontrolü\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets\n          .map(bullet => {\n            const speed = 10;\n            let newX = bullet.position.x + Math.sin(bullet.rotation * Math.PI / 180) * speed;\n            let newY = bullet.position.y - Math.cos(bullet.rotation * Math.PI / 180) * speed;\n            if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n              return null;\n            }\n            return {\n              ...bullet,\n              position: { x: newX, y: newY }\n            };\n          })\n          .filter((bullet): bullet is Bullet => bullet !== null);\n      });\n    }, 16);\n\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  // Başlangıçta tanklar dönüyor, hareket etmiyor\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const initialRotating: { [id: number]: boolean } = {};\n    const initialMoving: { [id: number]: boolean } = {};\n    for (let i = 1; i <= playerCount; i++) {\n      initialRotating[i] = true;\n      initialMoving[i] = false;\n    }\n    setRotating(initialRotating);\n    setMoving(initialMoving);\n  }, [playerCount, deviceType]);\n\n  // Tanklar sadece rotating true ise döner\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (rotating[player.id]) {\n          return {\n            ...player,\n            rotation: player.rotation + 2 // Sürekli artar, sıfırlanmaz\n          };\n        }\n        return player;\n      }));\n    }, 30);\n    return () => clearInterval(interval);\n  }, [rotating, deviceType]);\n\n  // Tanklar sadece moving true ise ileri gider\n  useEffect(() => {\n    if (deviceType !== 'phone') return;\n    const interval = setInterval(() => {\n      setPlayers(prevPlayers => prevPlayers.map(player => {\n        if (moving[player.id]) {\n          const speed = 6;\n          let newX = player.position.x;\n          let newY = player.position.y;\n          let rad = player.rotation * Math.PI / 180;\n          newX += Math.cos(rad) * speed;\n          newY += Math.sin(rad) * speed;\n          newX = Math.max(0, Math.min(window.innerWidth - TANK_SIZE, newX));\n          newY = Math.max(0, Math.min(window.innerHeight - TANK_SIZE, newY));\n          return {\n            ...player,\n            position: { x: newX, y: newY },\n            isMoving: true\n          };\n        }\n        return { ...player, isMoving: false };\n      }));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [moving, deviceType]);\n\n  // Butona tıklama: ateş et (mermi namlunun ucundan, doğru yöne çıkacak)\n  const handleCornerButtonClick = (playerId: number) => {\n    setPlayers(prevPlayers => {\n      const player = prevPlayers.find(p => p.id === playerId);\n      if (!player) return prevPlayers;\n      const rad = player.rotation * Math.PI / 180;\n      const centerX = player.position.x + TANK_SIZE / 2;\n      const centerY = player.position.y + TANK_SIZE / 2;\n      const offsetX = Math.cos(rad) * (TANK_SIZE / 2 + CANNON_LENGTH);\n      const offsetY = Math.sin(rad) * (TANK_SIZE / 2 + CANNON_LENGTH);\n      const bullet = {\n        id: Date.now() + Math.random(),\n        playerId,\n        position: {\n          x: centerX + offsetX - 4,\n          y: centerY + offsetY - 4\n        },\n        rotation: player.rotation\n      };\n      setBullets(prev => [...prev, bullet]);\n      return prevPlayers;\n    });\n  };\n\n  // Butona basılı tutma: hareket başlar, dönme durur\n  const handleCornerButtonDown = (playerId: number) => {\n    setRotating(r => ({ ...r, [playerId]: false }));\n    setMoving(m => ({ ...m, [playerId]: true }));\n  };\n\n  // Butondan el çekilince: hareket durur, dönme başlar\n  const handleCornerButtonUp = (playerId: number) => {\n    setRotating(r => ({ ...r, [playerId]: true }));\n    setMoving(m => ({ ...m, [playerId]: false }));\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (deviceType !== 'computer') return;\n\n      const keyMap: { [key: string]: { playerId: number; direction: 'up' | 'down' | 'left' | 'right' } } = {\n        'w': { playerId: 1, direction: 'up' },\n        's': { playerId: 1, direction: 'down' },\n        'a': { playerId: 1, direction: 'left' },\n        'd': { playerId: 1, direction: 'right' },\n        'f': { playerId: 2, direction: 'up' },\n        'h': { playerId: 2, direction: 'down' },\n        'g': { playerId: 2, direction: 'left' },\n        't': { playerId: 2, direction: 'right' },\n        'i': { playerId: 3, direction: 'up' },\n        'k': { playerId: 3, direction: 'down' },\n        'j': { playerId: 3, direction: 'left' },\n        'l': { playerId: 3, direction: 'right' },\n      };\n\n      const action = keyMap[e.key.toLowerCase()];\n      if (action) {\n        movePlayer(action.playerId, action.direction);\n      }\n\n      // Ateş etme tuşları\n      if (e.key === 'e' && activePlayer === 1) fireBullet(1);\n      if (e.key === 'y' && activePlayer === 2) fireBullet(2);\n      if (e.key === 'o' && activePlayer === 3) fireBullet(3);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [deviceType, movePlayer, fireBullet, activePlayer]);\n\n  // Mermiler doğru yöne hareket edecek\n  useEffect(() => {\n    const bulletInterval = setInterval(() => {\n      setBullets(prevBullets => {\n        return prevBullets\n          .map(bullet => {\n            const speed = 10;\n            const rad = bullet.rotation * Math.PI / 180;\n            let newX = bullet.position.x + Math.cos(rad) * speed;\n            let newY = bullet.position.y + Math.sin(rad) * speed;\n            if (newX < 0 || newX > window.innerWidth || newY < 0 || newY > window.innerHeight) {\n              return null;\n            }\n            return {\n              ...bullet,\n              position: { x: newX, y: newY }\n            };\n          })\n          .filter((bullet): bullet is Bullet => bullet !== null);\n      });\n    }, 16);\n    return () => clearInterval(bulletInterval);\n  }, []);\n\n  // Rastgele duvar ve çimen oluşturma (ilk renderda bir kez)\n  useEffect(() => {\n    // Duvarlar\n    const newWalls = Array.from({ length: WALL_COUNT }, () => {\n      const w = 80 + Math.random() * 120;\n      const h = 40 + Math.random() * 80;\n      const x = Math.random() * (window.innerWidth - w - 40) + 20;\n      const y = Math.random() * (window.innerHeight - h - 40) + 20;\n      return { x, y, w, h };\n    });\n    setWalls(newWalls);\n    // Çimenler\n    const newGrasses = Array.from({ length: GRASS_COUNT }, () => {\n      const x = Math.random() * (window.innerWidth - 40);\n      const y = Math.random() * (window.innerHeight - 40);\n      return { x, y };\n    });\n    setGrasses(newGrasses);\n  }, []);\n\n  return (\n    <GameArea>\n      <GameGrid />\n      <Grass />\n      {/* Çimenler */}\n      {grasses.map((g, i) => (\n        <GrassPatch key={i} style={{ left: g.x, top: g.y }} />\n      ))}\n      {/* Duvarlar */}\n      {walls.map((w, i) => (\n        <Wall key={i} style={{ left: w.x, top: w.y, width: w.w, height: w.h }} />\n      ))}\n      {players.map(player => (\n        <React.Fragment key={player.id}>\n          <HealthBar \n            health={player.health}\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            style={{\n              left: player.position.x + 10,\n              top: player.position.y - 10\n            }}\n          />\n          <Tank\n            color={playerColors[player.id as 1 | 2 | 3 | 4]}\n            rotation={player.rotation}\n            position={player.position}\n            isMoving={player.isMoving}\n          />\n        </React.Fragment>\n      ))}\n      {bullets.map(bullet => (\n        <Bullet\n          key={bullet.id}\n          rotation={bullet.rotation}\n          style={{\n            left: bullet.position.x,\n            top: bullet.position.y\n          }}\n        />\n      ))}\n      {deviceType === 'phone' && players.map((player, idx) => (\n        <CornerButton\n          key={player.id}\n          color={playerColors[player.id as 1 | 2 | 3 | 4]}\n          position={cornerPositions[idx]}\n          onClick={() => handleCornerButtonClick(player.id)}\n          onTouchStart={() => handleCornerButtonDown(player.id)}\n          onTouchEnd={() => handleCornerButtonUp(player.id)}\n          onMouseDown={() => handleCornerButtonDown(player.id)}\n          onMouseUp={() => handleCornerButtonUp(player.id)}\n          onMouseLeave={() => handleCornerButtonUp(player.id)}\n        >\n          🚀\n        </CornerButton>\n      ))}\n    </GameArea>\n  );\n};\n\nexport default TankGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAqB,mBAAmB;AACrD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,QAAQ;AAQd,MAAMG,QAAQ,GAAGP,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GATID,QAAQ;AAWd,MAAME,KAAK,GAAGT,MAAM,CAACK,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAPID,KAAK;AASX,MAAME,MAAM,GAAGX,MAAM,CAACK,GAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA,sBAAsBO,KAAK,IAAIA,KAAK,CAACC,QAAQ;AAC7C;AACA,CAAC;AAACC,GAAA,GARIH,MAAM;AAUZ,MAAMI,SAAS,GAAGf,MAAM,CAACK,GAAsC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaO,KAAK,IAAIA,KAAK,CAACI,MAAM;AAClC;AACA,kBAAkBJ,KAAK,IAAIA,KAAK,CAACK,KAAK;AACtC;AACA;AACA,CAAC;AAACC,GAAA,GAlBIH,SAAS;AAoBf,MAAMI,QAAQ,GAAGnB,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMe,aAAa,GAAGpB,MAAM,CAACqB,MAAyB;AACtD,gBAAgBT,KAAK,IAAIA,KAAK,CAACK,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,UAAU,GAAGtB,MAAM,CAACoB,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMG,YAAY,GAAGvB,MAAM,CAACqB,MAA2C;AACvE;AACA;AACA;AACA;AACA,gBAAgBT,KAAK,IAAIA,KAAK,CAACK,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIL,KAAK,IAAIA,KAAK,CAACY,QAAQ,KAAK,YAAY,IAAI,2BAA2B;AAC3E,IAAIZ,KAAK,IAAIA,KAAK,CAACY,QAAQ,KAAK,aAAa,IAAI,4BAA4B;AAC7E,IAAIZ,KAAK,IAAIA,KAAK,CAACY,QAAQ,KAAK,SAAS,IAAI,wBAAwB;AACrE,IAAIZ,KAAK,IAAIA,KAAK,CAACY,QAAQ,KAAK,UAAU,IAAI,yBAAyB;AACvE,CAAC;AAACC,GAAA,GApBIF,YAAY;AAsBlB,MAAMG,YAA2C,GAAG;EAClD,CAAC,EAAE,SAAS;EAAE;EACd,CAAC,EAAE,SAAS;EAAE;EACd,CAAC,EAAE,SAAS;EAAE;EACd,CAAC,EAAE,SAAS,CAAE;AAChB,CAAC;AAiBD,MAAMC,eAAe,GAAG,CACtB,YAAY;AAAE;AACd,aAAa;AAAE;AACf,SAAS;AAAE;AACX,UAAU,CAAC;AAAA,CACH;AAIV,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,aAAa,GAAG,EAAE;AACxB,MAAMC,UAAU,GAAG,CAAC;AACpB,MAAMC,WAAW,GAAG,EAAE;AAEtB,MAAMC,IAAI,GAAGhC,MAAM,CAACK,GAAG;AACvB;AACA;AACA;AACA;AACA,CAAC;AAAC4B,GAAA,GALID,IAAI;AAOV,MAAME,UAAU,GAAGlC,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,GAAA,GAPID,UAAU;AAShB,MAAME,QAGJ,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG5C,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC+C,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAA4B,CAAC,CAAC,CAAC;EACvE,MAAM,CAACiD,MAAM,EAAEC,SAAS,CAAC,GAAGlD,QAAQ,CAA4B,CAAC,CAAC,CAAC;EACnE,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAgB,CAAC,CAAC;EAClE,MAAM,CAACqD,KAAK,EAAEC,QAAQ,CAAC,GAAGtD,QAAQ,CAAmD,EAAE,CAAC;EACxF,MAAM,CAACuD,OAAO,EAAEC,UAAU,CAAC,GAAGxD,QAAQ,CAA6B,EAAE,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACd,MAAMwD,cAAwB,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEpB;IAAY,CAAC,EAAE,CAACqB,CAAC,EAAEC,CAAC,MAAM;MAC9EC,EAAE,EAAED,CAAC,GAAG,CAAC;MACTnC,QAAQ,EAAE;QACRqC,CAAC,EAAEC,MAAM,CAACC,UAAU,IAAI1B,WAAW,GAAG,CAAC,CAAC,IAAIsB,CAAC,GAAG,CAAC,CAAC;QAClDK,CAAC,EAAEF,MAAM,CAACG,WAAW,GAAG;MAC1B,CAAC;MACDpD,QAAQ,EAAE,CAAC;MACXG,MAAM,EAAE,GAAG;MACXkD,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC;IACHzB,UAAU,CAACa,cAAc,CAAC;EAC5B,CAAC,EAAE,CAACjB,WAAW,CAAC,CAAC;EAEjB,MAAM8B,UAAU,GAAGpE,WAAW,CAAC,CAACqE,QAAgB,EAAEC,SAA2C,KAAK;IAChG5B,UAAU,CAAC6B,WAAW,IACpBA,WAAW,CAACC,GAAG,CAACC,MAAM,IAAI;MACxB,IAAIA,MAAM,CAACZ,EAAE,KAAKQ,QAAQ,EAAE;QAC1B,MAAMK,KAAK,GAAG,CAAC;QACf,IAAIC,IAAI,GAAGF,MAAM,CAAChD,QAAQ,CAACqC,CAAC;QAC5B,IAAIc,IAAI,GAAGH,MAAM,CAAChD,QAAQ,CAACwC,CAAC;QAC5B,IAAIY,WAAW,GAAGJ,MAAM,CAAC3D,QAAQ;QAEjC,QAAQwD,SAAS;UACf,KAAK,IAAI;YACPM,IAAI,IAAIF,KAAK;YACbG,WAAW,GAAG,CAAC;YACf;UACF,KAAK,MAAM;YACTD,IAAI,IAAIF,KAAK;YACbG,WAAW,GAAG,GAAG;YACjB;UACF,KAAK,MAAM;YACTF,IAAI,IAAID,KAAK;YACbG,WAAW,GAAG,GAAG;YACjB;UACF,KAAK,OAAO;YACVF,IAAI,IAAID,KAAK;YACbG,WAAW,GAAG,EAAE;YAChB;QACJ;;QAEA;QACAF,IAAI,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACjB,MAAM,CAACC,UAAU,GAAG,EAAE,EAAEW,IAAI,CAAC,CAAC;QAC1DC,IAAI,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACjB,MAAM,CAACG,WAAW,GAAG,EAAE,EAAEU,IAAI,CAAC,CAAC;QAE3D,OAAO;UACL,GAAGH,MAAM;UACThD,QAAQ,EAAE;YAAEqC,CAAC,EAAEa,IAAI;YAAEV,CAAC,EAAEW;UAAK,CAAC;UAC9B9D,QAAQ,EAAE+D,WAAW;UACrBV,QAAQ,EAAE;QACZ,CAAC;MACH;MACA,OAAO;QACL,GAAGM,MAAM;QACTN,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC,CACH,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,UAAU,GAAGjF,WAAW,CAAEqE,QAAgB,IAAK;IACnD,MAAMI,MAAM,GAAGhC,OAAO,CAACyC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACtB,EAAE,KAAKQ,QAAQ,CAAC;IACnD,IAAI,CAACI,MAAM,EAAE;IAEb,MAAMW,GAAG,GAAGX,MAAM,CAAC3D,QAAQ,GAAGgE,IAAI,CAACO,EAAE,GAAG,GAAG;IAC3C;IACA,MAAMC,OAAO,GAAGR,IAAI,CAACS,GAAG,CAACH,GAAG,CAAC,IAAIvD,SAAS,GAAG,CAAC,GAAGC,aAAa,GAAG,CAAC,CAAC;IACnE,MAAM0D,OAAO,GAAG,CAACV,IAAI,CAACW,GAAG,CAACL,GAAG,CAAC,IAAIvD,SAAS,GAAG,CAAC,GAAGC,aAAa,GAAG,CAAC,CAAC;IACpE,MAAM4D,MAAc,GAAG;MACrB7B,EAAE,EAAE8B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGd,IAAI,CAACe,MAAM,CAAC,CAAC;MAC9BxB,QAAQ;MACR5C,QAAQ,EAAE;QACRqC,CAAC,EAAEW,MAAM,CAAChD,QAAQ,CAACqC,CAAC,GAAGjC,SAAS,GAAG,CAAC,GAAGyD,OAAO,GAAG,CAAC;QAAE;QACpDrB,CAAC,EAAEQ,MAAM,CAAChD,QAAQ,CAACwC,CAAC,GAAGpC,SAAS,GAAG,CAAC,GAAG2D,OAAO,GAAG;MACnD,CAAC;MACD1E,QAAQ,EAAE2D,MAAM,CAAC3D;IACnB,CAAC;IAED8B,UAAU,CAACkD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,MAAM,CAAC,CAAC;EACvC,CAAC,EAAE,CAACjD,OAAO,CAAC,CAAC;;EAEb;EACA1C,SAAS,CAAC,MAAM;IACd,MAAMgG,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvCpD,UAAU,CAACqD,WAAW,IAAI;QACxB,OAAOA,WAAW,CACfzB,GAAG,CAACkB,MAAM,IAAI;UACb,MAAMhB,KAAK,GAAG,EAAE;UAChB,IAAIC,IAAI,GAAGe,MAAM,CAACjE,QAAQ,CAACqC,CAAC,GAAGgB,IAAI,CAACS,GAAG,CAACG,MAAM,CAAC5E,QAAQ,GAAGgE,IAAI,CAACO,EAAE,GAAG,GAAG,CAAC,GAAGX,KAAK;UAChF,IAAIE,IAAI,GAAGc,MAAM,CAACjE,QAAQ,CAACwC,CAAC,GAAGa,IAAI,CAACW,GAAG,CAACC,MAAM,CAAC5E,QAAQ,GAAGgE,IAAI,CAACO,EAAE,GAAG,GAAG,CAAC,GAAGX,KAAK;UAChF,IAAIC,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGZ,MAAM,CAACC,UAAU,IAAIY,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGb,MAAM,CAACG,WAAW,EAAE;YACjF,OAAO,IAAI;UACb;UACA,OAAO;YACL,GAAGwB,MAAM;YACTjE,QAAQ,EAAE;cAAEqC,CAAC,EAAEa,IAAI;cAAEV,CAAC,EAAEW;YAAK;UAC/B,CAAC;QACH,CAAC,CAAC,CACDsB,MAAM,CAAER,MAAM,IAAuBA,MAAM,KAAK,IAAI,CAAC;MAC1D,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMS,aAAa,CAACJ,cAAc,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhG,SAAS,CAAC,MAAM;IACd,IAAIwC,UAAU,KAAK,OAAO,EAAE;IAC5B,MAAM6D,eAA0C,GAAG,CAAC,CAAC;IACrD,MAAMC,aAAwC,GAAG,CAAC,CAAC;IACnD,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAItB,WAAW,EAAEsB,CAAC,EAAE,EAAE;MACrCwC,eAAe,CAACxC,CAAC,CAAC,GAAG,IAAI;MACzByC,aAAa,CAACzC,CAAC,CAAC,GAAG,KAAK;IAC1B;IACAd,WAAW,CAACsD,eAAe,CAAC;IAC5BpD,SAAS,CAACqD,aAAa,CAAC;EAC1B,CAAC,EAAE,CAAC/D,WAAW,EAAEC,UAAU,CAAC,CAAC;;EAE7B;EACAxC,SAAS,CAAC,MAAM;IACd,IAAIwC,UAAU,KAAK,OAAO,EAAE;IAC5B,MAAM+D,QAAQ,GAAGN,WAAW,CAAC,MAAM;MACjCtD,UAAU,CAAC6B,WAAW,IAAIA,WAAW,CAACC,GAAG,CAACC,MAAM,IAAI;QAClD,IAAI5B,QAAQ,CAAC4B,MAAM,CAACZ,EAAE,CAAC,EAAE;UACvB,OAAO;YACL,GAAGY,MAAM;YACT3D,QAAQ,EAAE2D,MAAM,CAAC3D,QAAQ,GAAG,CAAC,CAAC;UAChC,CAAC;QACH;QACA,OAAO2D,MAAM;MACf,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAM0B,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACzD,QAAQ,EAAEN,UAAU,CAAC,CAAC;;EAE1B;EACAxC,SAAS,CAAC,MAAM;IACd,IAAIwC,UAAU,KAAK,OAAO,EAAE;IAC5B,MAAM+D,QAAQ,GAAGN,WAAW,CAAC,MAAM;MACjCtD,UAAU,CAAC6B,WAAW,IAAIA,WAAW,CAACC,GAAG,CAACC,MAAM,IAAI;QAClD,IAAI1B,MAAM,CAAC0B,MAAM,CAACZ,EAAE,CAAC,EAAE;UACrB,MAAMa,KAAK,GAAG,CAAC;UACf,IAAIC,IAAI,GAAGF,MAAM,CAAChD,QAAQ,CAACqC,CAAC;UAC5B,IAAIc,IAAI,GAAGH,MAAM,CAAChD,QAAQ,CAACwC,CAAC;UAC5B,IAAImB,GAAG,GAAGX,MAAM,CAAC3D,QAAQ,GAAGgE,IAAI,CAACO,EAAE,GAAG,GAAG;UACzCV,IAAI,IAAIG,IAAI,CAACW,GAAG,CAACL,GAAG,CAAC,GAAGV,KAAK;UAC7BE,IAAI,IAAIE,IAAI,CAACS,GAAG,CAACH,GAAG,CAAC,GAAGV,KAAK;UAC7BC,IAAI,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACjB,MAAM,CAACC,UAAU,GAAGnC,SAAS,EAAE8C,IAAI,CAAC,CAAC;UACjEC,IAAI,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACjB,MAAM,CAACG,WAAW,GAAGrC,SAAS,EAAE+C,IAAI,CAAC,CAAC;UAClE,OAAO;YACL,GAAGH,MAAM;YACThD,QAAQ,EAAE;cAAEqC,CAAC,EAAEa,IAAI;cAAEV,CAAC,EAAEW;YAAK,CAAC;YAC9BT,QAAQ,EAAE;UACZ,CAAC;QACH;QACA,OAAO;UAAE,GAAGM,MAAM;UAAEN,QAAQ,EAAE;QAAM,CAAC;MACvC,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMgC,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACvD,MAAM,EAAER,UAAU,CAAC,CAAC;;EAExB;EACA,MAAMgE,uBAAuB,GAAIlC,QAAgB,IAAK;IACpD3B,UAAU,CAAC6B,WAAW,IAAI;MACxB,MAAME,MAAM,GAAGF,WAAW,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACtB,EAAE,KAAKQ,QAAQ,CAAC;MACvD,IAAI,CAACI,MAAM,EAAE,OAAOF,WAAW;MAC/B,MAAMa,GAAG,GAAGX,MAAM,CAAC3D,QAAQ,GAAGgE,IAAI,CAACO,EAAE,GAAG,GAAG;MAC3C,MAAMmB,OAAO,GAAG/B,MAAM,CAAChD,QAAQ,CAACqC,CAAC,GAAGjC,SAAS,GAAG,CAAC;MACjD,MAAM4E,OAAO,GAAGhC,MAAM,CAAChD,QAAQ,CAACwC,CAAC,GAAGpC,SAAS,GAAG,CAAC;MACjD,MAAMyD,OAAO,GAAGR,IAAI,CAACW,GAAG,CAACL,GAAG,CAAC,IAAIvD,SAAS,GAAG,CAAC,GAAGC,aAAa,CAAC;MAC/D,MAAM0D,OAAO,GAAGV,IAAI,CAACS,GAAG,CAACH,GAAG,CAAC,IAAIvD,SAAS,GAAG,CAAC,GAAGC,aAAa,CAAC;MAC/D,MAAM4D,MAAM,GAAG;QACb7B,EAAE,EAAE8B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGd,IAAI,CAACe,MAAM,CAAC,CAAC;QAC9BxB,QAAQ;QACR5C,QAAQ,EAAE;UACRqC,CAAC,EAAE0C,OAAO,GAAGlB,OAAO,GAAG,CAAC;UACxBrB,CAAC,EAAEwC,OAAO,GAAGjB,OAAO,GAAG;QACzB,CAAC;QACD1E,QAAQ,EAAE2D,MAAM,CAAC3D;MACnB,CAAC;MACD8B,UAAU,CAACkD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,MAAM,CAAC,CAAC;MACrC,OAAOnB,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMmC,sBAAsB,GAAIrC,QAAgB,IAAK;IACnDvB,WAAW,CAAC6D,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAACtC,QAAQ,GAAG;IAAM,CAAC,CAAC,CAAC;IAC/CrB,SAAS,CAAC4D,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAACvC,QAAQ,GAAG;IAAK,CAAC,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMwC,oBAAoB,GAAIxC,QAAgB,IAAK;IACjDvB,WAAW,CAAC6D,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAACtC,QAAQ,GAAG;IAAK,CAAC,CAAC,CAAC;IAC9CrB,SAAS,CAAC4D,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,CAACvC,QAAQ,GAAG;IAAM,CAAC,CAAC,CAAC;EAC/C,CAAC;EAEDtE,SAAS,CAAC,MAAM;IACd,MAAM+G,aAAa,GAAIC,CAAgB,IAAK;MAC1C,IAAIxE,UAAU,KAAK,UAAU,EAAE;MAE/B,MAAMyE,MAA4F,GAAG;QACnG,GAAG,EAAE;UAAE3C,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAK,CAAC;QACrC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAO,CAAC;QACvC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAO,CAAC;QACvC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAQ,CAAC;QACxC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAK,CAAC;QACrC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAO,CAAC;QACvC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAO,CAAC;QACvC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAQ,CAAC;QACxC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAK,CAAC;QACrC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAO,CAAC;QACvC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAO,CAAC;QACvC,GAAG,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAQ;MACzC,CAAC;MAED,MAAM2C,MAAM,GAAGD,MAAM,CAACD,CAAC,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC;MAC1C,IAAIF,MAAM,EAAE;QACV7C,UAAU,CAAC6C,MAAM,CAAC5C,QAAQ,EAAE4C,MAAM,CAAC3C,SAAS,CAAC;MAC/C;;MAEA;MACA,IAAIyC,CAAC,CAACG,GAAG,KAAK,GAAG,IAAIjE,YAAY,KAAK,CAAC,EAAEgC,UAAU,CAAC,CAAC,CAAC;MACtD,IAAI8B,CAAC,CAACG,GAAG,KAAK,GAAG,IAAIjE,YAAY,KAAK,CAAC,EAAEgC,UAAU,CAAC,CAAC,CAAC;MACtD,IAAI8B,CAAC,CAACG,GAAG,KAAK,GAAG,IAAIjE,YAAY,KAAK,CAAC,EAAEgC,UAAU,CAAC,CAAC,CAAC;IACxD,CAAC;IAEDlB,MAAM,CAACqD,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACjD,OAAO,MAAM/C,MAAM,CAACsD,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;EACnE,CAAC,EAAE,CAACvE,UAAU,EAAE6B,UAAU,EAAEa,UAAU,EAAEhC,YAAY,CAAC,CAAC;;EAEtD;EACAlD,SAAS,CAAC,MAAM;IACd,MAAMgG,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvCpD,UAAU,CAACqD,WAAW,IAAI;QACxB,OAAOA,WAAW,CACfzB,GAAG,CAACkB,MAAM,IAAI;UACb,MAAMhB,KAAK,GAAG,EAAE;UAChB,MAAMU,GAAG,GAAGM,MAAM,CAAC5E,QAAQ,GAAGgE,IAAI,CAACO,EAAE,GAAG,GAAG;UAC3C,IAAIV,IAAI,GAAGe,MAAM,CAACjE,QAAQ,CAACqC,CAAC,GAAGgB,IAAI,CAACW,GAAG,CAACL,GAAG,CAAC,GAAGV,KAAK;UACpD,IAAIE,IAAI,GAAGc,MAAM,CAACjE,QAAQ,CAACwC,CAAC,GAAGa,IAAI,CAACS,GAAG,CAACH,GAAG,CAAC,GAAGV,KAAK;UACpD,IAAIC,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGZ,MAAM,CAACC,UAAU,IAAIY,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGb,MAAM,CAACG,WAAW,EAAE;YACjF,OAAO,IAAI;UACb;UACA,OAAO;YACL,GAAGwB,MAAM;YACTjE,QAAQ,EAAE;cAAEqC,CAAC,EAAEa,IAAI;cAAEV,CAAC,EAAEW;YAAK;UAC/B,CAAC;QACH,CAAC,CAAC,CACDsB,MAAM,CAAER,MAAM,IAAuBA,MAAM,KAAK,IAAI,CAAC;MAC1D,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMS,aAAa,CAACJ,cAAc,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhG,SAAS,CAAC,MAAM;IACd;IACA,MAAMuH,QAAQ,GAAG9D,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE3B;IAAW,CAAC,EAAE,MAAM;MACxD,MAAMwF,CAAC,GAAG,EAAE,GAAGzC,IAAI,CAACe,MAAM,CAAC,CAAC,GAAG,GAAG;MAClC,MAAM2B,CAAC,GAAG,EAAE,GAAG1C,IAAI,CAACe,MAAM,CAAC,CAAC,GAAG,EAAE;MACjC,MAAM/B,CAAC,GAAGgB,IAAI,CAACe,MAAM,CAAC,CAAC,IAAI9B,MAAM,CAACC,UAAU,GAAGuD,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;MAC3D,MAAMtD,CAAC,GAAGa,IAAI,CAACe,MAAM,CAAC,CAAC,IAAI9B,MAAM,CAACG,WAAW,GAAGsD,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;MAC5D,OAAO;QAAE1D,CAAC;QAAEG,CAAC;QAAEsD,CAAC;QAAEC;MAAE,CAAC;IACvB,CAAC,CAAC;IACFpE,QAAQ,CAACkE,QAAQ,CAAC;IAClB;IACA,MAAMG,UAAU,GAAGjE,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE1B;IAAY,CAAC,EAAE,MAAM;MAC3D,MAAM8B,CAAC,GAAGgB,IAAI,CAACe,MAAM,CAAC,CAAC,IAAI9B,MAAM,CAACC,UAAU,GAAG,EAAE,CAAC;MAClD,MAAMC,CAAC,GAAGa,IAAI,CAACe,MAAM,CAAC,CAAC,IAAI9B,MAAM,CAACG,WAAW,GAAG,EAAE,CAAC;MACnD,OAAO;QAAEJ,CAAC;QAAEG;MAAE,CAAC;IACjB,CAAC,CAAC;IACFX,UAAU,CAACmE,UAAU,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErH,OAAA,CAACC,QAAQ;IAAAqH,QAAA,gBACPtH,OAAA,CAACI,QAAQ;MAAAmH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ1H,OAAA,CAACM,KAAK;MAAAiH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAERzE,OAAO,CAACmB,GAAG,CAAC,CAACuD,CAAC,EAAEnE,CAAC,kBAChBxD,OAAA,CAAC+B,UAAU;MAAS6F,KAAK,EAAE;QAAEC,IAAI,EAAEF,CAAC,CAACjE,CAAC;QAAEoE,GAAG,EAAEH,CAAC,CAAC9D;MAAE;IAAE,GAAlCL,CAAC;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmC,CACtD,CAAC,EAED3E,KAAK,CAACqB,GAAG,CAAC,CAAC+C,CAAC,EAAE3D,CAAC,kBACdxD,OAAA,CAAC6B,IAAI;MAAS+F,KAAK,EAAE;QAAEC,IAAI,EAAEV,CAAC,CAACzD,CAAC;QAAEoE,GAAG,EAAEX,CAAC,CAACtD,CAAC;QAAEkE,KAAK,EAAEZ,CAAC,CAACA,CAAC;QAAEa,MAAM,EAAEb,CAAC,CAACC;MAAE;IAAE,GAA3D5D,CAAC;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4D,CACzE,CAAC,EACDrF,OAAO,CAAC+B,GAAG,CAACC,MAAM,iBACjBrE,OAAA,CAACP,KAAK,CAACwI,QAAQ;MAAAX,QAAA,gBACbtH,OAAA,CAACY,SAAS;QACRC,MAAM,EAAEwD,MAAM,CAACxD,MAAO;QACtBC,KAAK,EAAES,YAAY,CAAC8C,MAAM,CAACZ,EAAE,CAAmB;QAChDmE,KAAK,EAAE;UACLC,IAAI,EAAExD,MAAM,CAAChD,QAAQ,CAACqC,CAAC,GAAG,EAAE;UAC5BoE,GAAG,EAAEzD,MAAM,CAAChD,QAAQ,CAACwC,CAAC,GAAG;QAC3B;MAAE;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF1H,OAAA,CAACF,IAAI;QACHgB,KAAK,EAAES,YAAY,CAAC8C,MAAM,CAACZ,EAAE,CAAmB;QAChD/C,QAAQ,EAAE2D,MAAM,CAAC3D,QAAS;QAC1BW,QAAQ,EAAEgD,MAAM,CAAChD,QAAS;QAC1B0C,QAAQ,EAAEM,MAAM,CAACN;MAAS;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA,GAdiBrD,MAAM,CAACZ,EAAE;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAed,CACjB,CAAC,EACDnF,OAAO,CAAC6B,GAAG,CAACkB,MAAM,iBACjBtF,OAAA,CAACQ,MAAM;MAELE,QAAQ,EAAE4E,MAAM,CAAC5E,QAAS;MAC1BkH,KAAK,EAAE;QACLC,IAAI,EAAEvC,MAAM,CAACjE,QAAQ,CAACqC,CAAC;QACvBoE,GAAG,EAAExC,MAAM,CAACjE,QAAQ,CAACwC;MACvB;IAAE,GALGyB,MAAM,CAAC7B,EAAE;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACF,CAAC,EACDvF,UAAU,KAAK,OAAO,IAAIE,OAAO,CAAC+B,GAAG,CAAC,CAACC,MAAM,EAAE6D,GAAG,kBACjDlI,OAAA,CAACoB,YAAY;MAEXN,KAAK,EAAES,YAAY,CAAC8C,MAAM,CAACZ,EAAE,CAAmB;MAChDpC,QAAQ,EAAEG,eAAe,CAAC0G,GAAG,CAAE;MAC/BC,OAAO,EAAEA,CAAA,KAAMhC,uBAAuB,CAAC9B,MAAM,CAACZ,EAAE,CAAE;MAClD2E,YAAY,EAAEA,CAAA,KAAM9B,sBAAsB,CAACjC,MAAM,CAACZ,EAAE,CAAE;MACtD4E,UAAU,EAAEA,CAAA,KAAM5B,oBAAoB,CAACpC,MAAM,CAACZ,EAAE,CAAE;MAClD6E,WAAW,EAAEA,CAAA,KAAMhC,sBAAsB,CAACjC,MAAM,CAACZ,EAAE,CAAE;MACrD8E,SAAS,EAAEA,CAAA,KAAM9B,oBAAoB,CAACpC,MAAM,CAACZ,EAAE,CAAE;MACjD+E,YAAY,EAAEA,CAAA,KAAM/B,oBAAoB,CAACpC,MAAM,CAACZ,EAAE,CAAE;MAAA6D,QAAA,EACrD;IAED,GAXOjD,MAAM,CAACZ,EAAE;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWF,CACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf,CAAC;AAACtF,EAAA,CAzVIH,QAGJ;AAAAwG,GAAA,GAHIxG,QAGJ;AAwVF,eAAeA,QAAQ;AAAC,IAAA9B,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAI,GAAA,EAAAO,GAAA,EAAAQ,GAAA,EAAAE,GAAA,EAAAyG,GAAA;AAAAC,YAAA,CAAAvI,EAAA;AAAAuI,YAAA,CAAArI,GAAA;AAAAqI,YAAA,CAAAnI,GAAA;AAAAmI,YAAA,CAAA/H,GAAA;AAAA+H,YAAA,CAAA3H,GAAA;AAAA2H,YAAA,CAAApH,GAAA;AAAAoH,YAAA,CAAA5G,GAAA;AAAA4G,YAAA,CAAA1G,GAAA;AAAA0G,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}